{"ast":null,"code":"// npm explore <pkg>[@<version>]\n// open a subshell to the package folder.\nconst rpj = require('read-package-json-fast');\n\nconst runScript = require('@npmcli/run-script');\n\nconst {\n  join,\n  resolve,\n  relative\n} = require('path');\n\nconst log = require('../utils/log-shim.js');\n\nconst completion = require('../utils/completion/installed-shallow.js');\n\nconst BaseCommand = require('../base-command.js');\n\nclass Explore extends BaseCommand {\n  static description = 'Browse an installed package';\n  static name = 'explore';\n  static usage = ['<pkg> [ -- <command>]'];\n  static params = ['shell'];\n  static ignoreImplicitWorkspace = false; // TODO\n\n  /* istanbul ignore next */\n\n  async completion(opts) {\n    return completion(this.npm, opts);\n  }\n\n  async exec(args) {\n    if (args.length < 1 || !args[0]) {\n      throw this.usageError();\n    }\n\n    const pkgname = args.shift(); // detect and prevent any .. shenanigans\n\n    const path = join(this.npm.dir, join('/', pkgname));\n\n    if (relative(path, this.npm.dir) === '') {\n      throw this.usageError();\n    } // run as if running a script named '_explore', which we set to either\n    // the set of arguments, or the shell config, and let @npmcli/run-script\n    // handle all the escaping and PATH setup stuff.\n\n\n    const pkg = await rpj(resolve(path, 'package.json')).catch(er => {\n      log.error('explore', `It doesn't look like ${pkgname} is installed.`);\n      throw er;\n    });\n    const {\n      shell\n    } = this.npm.flatOptions;\n    pkg.scripts = { ...(pkg.scripts || {}),\n      _explore: args.join(' ').trim() || shell\n    };\n\n    if (!args.length) {\n      this.npm.output(`\\nExploring ${path}\\nType 'exit' or ^D when finished\\n`);\n    }\n\n    log.disableProgress();\n\n    try {\n      return await runScript({ ...this.npm.flatOptions,\n        pkg,\n        banner: false,\n        path,\n        stdioString: true,\n        event: '_explore',\n        stdio: 'inherit'\n      }).catch(er => {\n        process.exitCode = typeof er.code === 'number' && er.code !== 0 ? er.code : 1; // if it's not an exit error, or non-interactive, throw it\n\n        const isProcExit = er.message === 'command failed' && (typeof er.code === 'number' || /^SIG/.test(er.signal || ''));\n\n        if (args.length || !isProcExit) {\n          throw er;\n        }\n      });\n    } finally {\n      log.enableProgress();\n    }\n  }\n\n}\n\nmodule.exports = Explore;","map":{"version":3,"names":["rpj","require","runScript","join","resolve","relative","log","completion","BaseCommand","Explore","description","name","usage","params","ignoreImplicitWorkspace","opts","npm","exec","args","length","usageError","pkgname","shift","path","dir","pkg","catch","er","error","shell","flatOptions","scripts","_explore","trim","output","disableProgress","banner","stdioString","event","stdio","process","exitCode","code","isProcExit","message","test","signal","enableProgress","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/commands/explore.js"],"sourcesContent":["// npm explore <pkg>[@<version>]\n// open a subshell to the package folder.\n\nconst rpj = require('read-package-json-fast')\nconst runScript = require('@npmcli/run-script')\nconst { join, resolve, relative } = require('path')\nconst log = require('../utils/log-shim.js')\nconst completion = require('../utils/completion/installed-shallow.js')\nconst BaseCommand = require('../base-command.js')\n\nclass Explore extends BaseCommand {\n  static description = 'Browse an installed package'\n  static name = 'explore'\n  static usage = ['<pkg> [ -- <command>]']\n  static params = ['shell']\n  static ignoreImplicitWorkspace = false\n\n  // TODO\n  /* istanbul ignore next */\n  async completion (opts) {\n    return completion(this.npm, opts)\n  }\n\n  async exec (args) {\n    if (args.length < 1 || !args[0]) {\n      throw this.usageError()\n    }\n\n    const pkgname = args.shift()\n\n    // detect and prevent any .. shenanigans\n    const path = join(this.npm.dir, join('/', pkgname))\n    if (relative(path, this.npm.dir) === '') {\n      throw this.usageError()\n    }\n\n    // run as if running a script named '_explore', which we set to either\n    // the set of arguments, or the shell config, and let @npmcli/run-script\n    // handle all the escaping and PATH setup stuff.\n\n    const pkg = await rpj(resolve(path, 'package.json')).catch(er => {\n      log.error('explore', `It doesn't look like ${pkgname} is installed.`)\n      throw er\n    })\n\n    const { shell } = this.npm.flatOptions\n    pkg.scripts = {\n      ...(pkg.scripts || {}),\n      _explore: args.join(' ').trim() || shell,\n    }\n\n    if (!args.length) {\n      this.npm.output(`\\nExploring ${path}\\nType 'exit' or ^D when finished\\n`)\n    }\n    log.disableProgress()\n    try {\n      return await runScript({\n        ...this.npm.flatOptions,\n        pkg,\n        banner: false,\n        path,\n        stdioString: true,\n        event: '_explore',\n        stdio: 'inherit',\n      }).catch(er => {\n        process.exitCode = typeof er.code === 'number' && er.code !== 0 ? er.code\n          : 1\n        // if it's not an exit error, or non-interactive, throw it\n        const isProcExit = er.message === 'command failed' &&\n          (typeof er.code === 'number' || /^SIG/.test(er.signal || ''))\n        if (args.length || !isProcExit) {\n          throw er\n        }\n      })\n    } finally {\n      log.enableProgress()\n    }\n  }\n}\nmodule.exports = Explore\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}