{"ast":null,"code":"const nopt = require('nopt');\n\nconst {\n  Umask,\n  validate: validateUmask\n} = require('./umask.js');\n\nconst semver = require('semver');\n\nconst validateSemver = (data, k, val) => {\n  const valid = semver.valid(val);\n\n  if (!valid) {\n    return false;\n  }\n\n  data[k] = valid;\n};\n\nconst noptValidatePath = nopt.typeDefs.path.validate;\n\nconst validatePath = (data, k, val) => {\n  if (typeof val !== 'string') {\n    return false;\n  }\n\n  return noptValidatePath(data, k, val);\n}; // add descriptions so we can validate more usefully\n\n\nmodule.exports = { ...nopt.typeDefs,\n  semver: {\n    type: semver,\n    validate: validateSemver,\n    description: 'full valid SemVer string'\n  },\n  Umask: {\n    type: Umask,\n    validate: validateUmask,\n    description: 'octal number in range 0o000..0o777 (0..511)'\n  },\n  url: { ...nopt.typeDefs.url,\n    description: 'full url with \"http://\"'\n  },\n  path: { ...nopt.typeDefs.path,\n    validate: validatePath,\n    description: 'valid filesystem path'\n  },\n  Number: { ...nopt.typeDefs.Number,\n    description: 'numeric value'\n  },\n  Boolean: { ...nopt.typeDefs.Boolean,\n    description: 'boolean value (true or false)'\n  },\n  Date: { ...nopt.typeDefs.Date,\n    description: 'valid Date string'\n  }\n}; // TODO: make nopt less of a global beast so this kludge isn't necessary\n\nnopt.typeDefs = module.exports;","map":{"version":3,"names":["nopt","require","Umask","validate","validateUmask","semver","validateSemver","data","k","val","valid","noptValidatePath","typeDefs","path","validatePath","module","exports","type","description","url","Number","Boolean","Date"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/@npmcli/config/lib/type-defs.js"],"sourcesContent":["const nopt = require('nopt')\n\nconst { Umask, validate: validateUmask } = require('./umask.js')\n\nconst semver = require('semver')\nconst validateSemver = (data, k, val) => {\n  const valid = semver.valid(val)\n  if (!valid) {\n    return false\n  }\n  data[k] = valid\n}\n\nconst noptValidatePath = nopt.typeDefs.path.validate\nconst validatePath = (data, k, val) => {\n  if (typeof val !== 'string') {\n    return false\n  }\n  return noptValidatePath(data, k, val)\n}\n\n// add descriptions so we can validate more usefully\nmodule.exports = {\n  ...nopt.typeDefs,\n  semver: {\n    type: semver,\n    validate: validateSemver,\n    description: 'full valid SemVer string',\n  },\n  Umask: {\n    type: Umask,\n    validate: validateUmask,\n    description: 'octal number in range 0o000..0o777 (0..511)',\n  },\n  url: {\n    ...nopt.typeDefs.url,\n    description: 'full url with \"http://\"',\n  },\n  path: {\n    ...nopt.typeDefs.path,\n    validate: validatePath,\n    description: 'valid filesystem path',\n  },\n  Number: {\n    ...nopt.typeDefs.Number,\n    description: 'numeric value',\n  },\n  Boolean: {\n    ...nopt.typeDefs.Boolean,\n    description: 'boolean value (true or false)',\n  },\n  Date: {\n    ...nopt.typeDefs.Date,\n    description: 'valid Date string',\n  },\n}\n\n// TODO: make nopt less of a global beast so this kludge isn't necessary\nnopt.typeDefs = module.exports\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAM;EAAEC,KAAF;EAASC,QAAQ,EAAEC;AAAnB,IAAqCH,OAAO,CAAC,YAAD,CAAlD;;AAEA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMK,cAAc,GAAG,CAACC,IAAD,EAAOC,CAAP,EAAUC,GAAV,KAAkB;EACvC,MAAMC,KAAK,GAAGL,MAAM,CAACK,KAAP,CAAaD,GAAb,CAAd;;EACA,IAAI,CAACC,KAAL,EAAY;IACV,OAAO,KAAP;EACD;;EACDH,IAAI,CAACC,CAAD,CAAJ,GAAUE,KAAV;AACD,CAND;;AAQA,MAAMC,gBAAgB,GAAGX,IAAI,CAACY,QAAL,CAAcC,IAAd,CAAmBV,QAA5C;;AACA,MAAMW,YAAY,GAAG,CAACP,IAAD,EAAOC,CAAP,EAAUC,GAAV,KAAkB;EACrC,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IAC3B,OAAO,KAAP;EACD;;EACD,OAAOE,gBAAgB,CAACJ,IAAD,EAAOC,CAAP,EAAUC,GAAV,CAAvB;AACD,CALD,C,CAOA;;;AACAM,MAAM,CAACC,OAAP,GAAiB,EACf,GAAGhB,IAAI,CAACY,QADO;EAEfP,MAAM,EAAE;IACNY,IAAI,EAAEZ,MADA;IAENF,QAAQ,EAAEG,cAFJ;IAGNY,WAAW,EAAE;EAHP,CAFO;EAOfhB,KAAK,EAAE;IACLe,IAAI,EAAEf,KADD;IAELC,QAAQ,EAAEC,aAFL;IAGLc,WAAW,EAAE;EAHR,CAPQ;EAYfC,GAAG,EAAE,EACH,GAAGnB,IAAI,CAACY,QAAL,CAAcO,GADd;IAEHD,WAAW,EAAE;EAFV,CAZU;EAgBfL,IAAI,EAAE,EACJ,GAAGb,IAAI,CAACY,QAAL,CAAcC,IADb;IAEJV,QAAQ,EAAEW,YAFN;IAGJI,WAAW,EAAE;EAHT,CAhBS;EAqBfE,MAAM,EAAE,EACN,GAAGpB,IAAI,CAACY,QAAL,CAAcQ,MADX;IAENF,WAAW,EAAE;EAFP,CArBO;EAyBfG,OAAO,EAAE,EACP,GAAGrB,IAAI,CAACY,QAAL,CAAcS,OADV;IAEPH,WAAW,EAAE;EAFN,CAzBM;EA6BfI,IAAI,EAAE,EACJ,GAAGtB,IAAI,CAACY,QAAL,CAAcU,IADb;IAEJJ,WAAW,EAAE;EAFT;AA7BS,CAAjB,C,CAmCA;;AACAlB,IAAI,CAACY,QAAL,GAAgBG,MAAM,CAACC,OAAvB"},"metadata":{},"sourceType":"script"}