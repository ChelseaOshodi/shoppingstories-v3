{"ast":null,"code":"\"use strict\";\n\nvar wcwidth = require('./width');\n\nvar _require = require('./utils'),\n    padRight = _require.padRight,\n    padCenter = _require.padCenter,\n    padLeft = _require.padLeft,\n    splitIntoLines = _require.splitIntoLines,\n    splitLongWords = _require.splitLongWords,\n    truncateString = _require.truncateString;\n\nvar DEFAULT_HEADING_TRANSFORM = function DEFAULT_HEADING_TRANSFORM(key) {\n  return key.toUpperCase();\n};\n\nvar DEFAULT_DATA_TRANSFORM = function DEFAULT_DATA_TRANSFORM(cell, column, index) {\n  return cell;\n};\n\nvar DEFAULTS = Object.freeze({\n  maxWidth: Infinity,\n  minWidth: 0,\n  columnSplitter: ' ',\n  truncate: false,\n  truncateMarker: 'â€¦',\n  preserveNewLines: false,\n  paddingChr: ' ',\n  showHeaders: true,\n  headingTransform: DEFAULT_HEADING_TRANSFORM,\n  dataTransform: DEFAULT_DATA_TRANSFORM\n});\n\nmodule.exports = function (items) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var columnConfigs = options.config || {};\n  delete options.config; // remove config so doesn't appear on every column.\n\n  var maxLineWidth = options.maxLineWidth || Infinity;\n  if (maxLineWidth === 'auto') maxLineWidth = process.stdout.columns || Infinity;\n  delete options.maxLineWidth; // this is a line control option, don't pass it to column\n  // Option defaults inheritance:\n  // options.config[columnName] => options => DEFAULTS\n\n  options = mixin({}, DEFAULTS, options);\n  options.config = options.config || Object.create(null);\n  options.spacing = options.spacing || '\\n'; // probably useless\n\n  options.preserveNewLines = !!options.preserveNewLines;\n  options.showHeaders = !!options.showHeaders;\n  options.columns = options.columns || options.include; // alias include/columns, prefer columns if supplied\n\n  var columnNames = options.columns || []; // optional user-supplied columns to include\n\n  items = toArray(items, columnNames); // if not suppled column names, automatically determine columns from data keys\n\n  if (!columnNames.length) {\n    items.forEach(function (item) {\n      for (var columnName in item) {\n        if (columnNames.indexOf(columnName) === -1) columnNames.push(columnName);\n      }\n    });\n  } // initialize column defaults (each column inherits from options.config)\n\n\n  var columns = columnNames.reduce(function (columns, columnName) {\n    var column = Object.create(options);\n    columns[columnName] = mixin(column, columnConfigs[columnName]);\n    return columns;\n  }, Object.create(null)); // sanitize column settings\n\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    column.name = columnName;\n    column.maxWidth = Math.ceil(column.maxWidth);\n    column.minWidth = Math.ceil(column.minWidth);\n    column.truncate = !!column.truncate;\n    column.align = column.align || 'left';\n  }); // sanitize data\n\n  items = items.map(function (item) {\n    var result = Object.create(null);\n    columnNames.forEach(function (columnName) {\n      // null/undefined -> ''\n      result[columnName] = item[columnName] != null ? item[columnName] : ''; // toString everything\n\n      result[columnName] = '' + result[columnName];\n\n      if (columns[columnName].preserveNewLines) {\n        // merge non-newline whitespace chars\n        result[columnName] = result[columnName].replace(/[^\\S\\n]/gmi, ' ');\n      } else {\n        // merge all whitespace chars\n        result[columnName] = result[columnName].replace(/\\s/gmi, ' ');\n      }\n    });\n    return result;\n  }); // transform data cells\n\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    items = items.map(function (item, index) {\n      var col = Object.create(column);\n      item[columnName] = column.dataTransform(item[columnName], col, index);\n      var changedKeys = Object.keys(col); // disable default heading transform if we wrote to column.name\n\n      if (changedKeys.indexOf('name') !== -1) {\n        if (column.headingTransform !== DEFAULT_HEADING_TRANSFORM) return;\n\n        column.headingTransform = function (heading) {\n          return heading;\n        };\n      }\n\n      changedKeys.forEach(function (key) {\n        return column[key] = col[key];\n      });\n      return item;\n    });\n  }); // add headers\n\n  var headers = {};\n\n  if (options.showHeaders) {\n    columnNames.forEach(function (columnName) {\n      var column = columns[columnName];\n\n      if (!column.showHeaders) {\n        headers[columnName] = '';\n        return;\n      }\n\n      headers[columnName] = column.headingTransform(column.name);\n    });\n    items.unshift(headers);\n  } // get actual max-width between min & max\n  // based on length of data in columns\n\n\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    column.width = items.map(function (item) {\n      return item[columnName];\n    }).reduce(function (min, cur) {\n      // if already at maxWidth don't bother testing\n      if (min >= column.maxWidth) return min;\n      return Math.max(min, Math.min(column.maxWidth, Math.max(column.minWidth, wcwidth(cur))));\n    }, 0);\n  }); // split long words so they can break onto multiple lines\n\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    items = items.map(function (item) {\n      item[columnName] = splitLongWords(item[columnName], column.width, column.truncateMarker);\n      return item;\n    });\n  }); // wrap long lines. each item is now an array of lines.\n\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    items = items.map(function (item, index) {\n      var cell = item[columnName];\n      item[columnName] = splitIntoLines(cell, column.width); // if truncating required, only include first line + add truncation char\n\n      if (column.truncate && item[columnName].length > 1) {\n        item[columnName] = splitIntoLines(cell, column.width - wcwidth(column.truncateMarker));\n        var firstLine = item[columnName][0];\n        if (!endsWith(firstLine, column.truncateMarker)) item[columnName][0] += column.truncateMarker;\n        item[columnName] = item[columnName].slice(0, 1);\n      }\n\n      return item;\n    });\n  }); // recalculate column widths from truncated output/lines\n\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    column.width = items.map(function (item) {\n      return item[columnName].reduce(function (min, cur) {\n        if (min >= column.maxWidth) return min;\n        return Math.max(min, Math.min(column.maxWidth, Math.max(column.minWidth, wcwidth(cur))));\n      }, 0);\n    }).reduce(function (min, cur) {\n      if (min >= column.maxWidth) return min;\n      return Math.max(min, Math.min(column.maxWidth, Math.max(column.minWidth, cur)));\n    }, 0);\n  });\n  var rows = createRows(items, columns, columnNames, options.paddingChr); // merge lines into rows\n  // conceive output\n\n  return rows.reduce(function (output, row) {\n    return output.concat(row.reduce(function (rowOut, line) {\n      return rowOut.concat(line.join(options.columnSplitter));\n    }, []));\n  }, []).map(function (line) {\n    return truncateString(line, maxLineWidth);\n  }).join(options.spacing);\n};\n/**\n * Convert wrapped lines into rows with padded values.\n *\n * @param Array items data to process\n * @param Array columns column width settings for wrapping\n * @param Array columnNames column ordering\n * @return Array items wrapped in arrays, corresponding to lines\n */\n\n\nfunction createRows(items, columns, columnNames, paddingChr) {\n  return items.map(function (item) {\n    var row = [];\n    var numLines = 0;\n    columnNames.forEach(function (columnName) {\n      numLines = Math.max(numLines, item[columnName].length);\n    }); // combine matching lines of each rows\n\n    var _loop = function _loop(i) {\n      row[i] = row[i] || [];\n      columnNames.forEach(function (columnName) {\n        var column = columns[columnName];\n        var val = item[columnName][i] || ''; // || '' ensures empty columns get padded\n\n        if (column.align === 'right') row[i].push(padLeft(val, column.width, paddingChr));else if (column.align === 'center' || column.align === 'centre') row[i].push(padCenter(val, column.width, paddingChr));else row[i].push(padRight(val, column.width, paddingChr));\n      });\n    };\n\n    for (var i = 0; i < numLines; i++) {\n      _loop(i);\n    }\n\n    return row;\n  });\n}\n/**\n * Object.assign\n *\n * @return Object Object with properties mixed in.\n */\n\n\nfunction mixin() {\n  if (Object.assign) return Object.assign.apply(Object, arguments);\n  return ObjectAssign.apply(undefined, arguments);\n}\n\nfunction ObjectAssign(target, firstSource) {\n  \"use strict\";\n\n  if (target === undefined || target === null) throw new TypeError(\"Cannot convert first argument to object\");\n  var to = Object(target);\n  var hasPendingException = false;\n  var pendingException;\n\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) continue;\n    var keysArray = Object.keys(Object(nextSource));\n\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n\n      try {\n        var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) to[nextKey] = nextSource[nextKey];\n      } catch (e) {\n        if (!hasPendingException) {\n          hasPendingException = true;\n          pendingException = e;\n        }\n      }\n    }\n\n    if (hasPendingException) throw pendingException;\n  }\n\n  return to;\n}\n/**\n * Adapted from String.prototype.endsWith polyfill.\n */\n\n\nfunction endsWith(target, searchString, position) {\n  position = position || target.length;\n  position = position - searchString.length;\n  var lastIndex = target.lastIndexOf(searchString);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\nfunction toArray(items, columnNames) {\n  if (Array.isArray(items)) return items;\n  var rows = [];\n\n  for (var key in items) {\n    var item = {};\n    item[columnNames[0] || 'key'] = key;\n    item[columnNames[1] || 'value'] = items[key];\n    rows.push(item);\n  }\n\n  return rows;\n}","map":{"version":3,"names":["wcwidth","require","_require","padRight","padCenter","padLeft","splitIntoLines","splitLongWords","truncateString","DEFAULT_HEADING_TRANSFORM","key","toUpperCase","DEFAULT_DATA_TRANSFORM","cell","column","index","DEFAULTS","Object","freeze","maxWidth","Infinity","minWidth","columnSplitter","truncate","truncateMarker","preserveNewLines","paddingChr","showHeaders","headingTransform","dataTransform","module","exports","items","options","arguments","length","undefined","columnConfigs","config","maxLineWidth","process","stdout","columns","mixin","create","spacing","include","columnNames","toArray","forEach","item","columnName","indexOf","push","reduce","name","Math","ceil","align","map","result","replace","col","changedKeys","keys","heading","headers","unshift","width","min","cur","max","firstLine","endsWith","slice","rows","createRows","output","row","concat","rowOut","line","join","numLines","_loop","i","val","assign","apply","ObjectAssign","target","firstSource","TypeError","to","hasPendingException","pendingException","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","e","searchString","position","lastIndex","lastIndexOf","Array","isArray"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/columnify/columnify.js"],"sourcesContent":["\"use strict\";\n\nvar wcwidth = require('./width');\n\nvar _require = require('./utils'),\n    padRight = _require.padRight,\n    padCenter = _require.padCenter,\n    padLeft = _require.padLeft,\n    splitIntoLines = _require.splitIntoLines,\n    splitLongWords = _require.splitLongWords,\n    truncateString = _require.truncateString;\n\nvar DEFAULT_HEADING_TRANSFORM = function DEFAULT_HEADING_TRANSFORM(key) {\n  return key.toUpperCase();\n};\n\nvar DEFAULT_DATA_TRANSFORM = function DEFAULT_DATA_TRANSFORM(cell, column, index) {\n  return cell;\n};\n\nvar DEFAULTS = Object.freeze({\n  maxWidth: Infinity,\n  minWidth: 0,\n  columnSplitter: ' ',\n  truncate: false,\n  truncateMarker: 'â€¦',\n  preserveNewLines: false,\n  paddingChr: ' ',\n  showHeaders: true,\n  headingTransform: DEFAULT_HEADING_TRANSFORM,\n  dataTransform: DEFAULT_DATA_TRANSFORM\n});\n\nmodule.exports = function (items) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n  var columnConfigs = options.config || {};\n  delete options.config; // remove config so doesn't appear on every column.\n\n  var maxLineWidth = options.maxLineWidth || Infinity;\n  if (maxLineWidth === 'auto') maxLineWidth = process.stdout.columns || Infinity;\n  delete options.maxLineWidth; // this is a line control option, don't pass it to column\n\n  // Option defaults inheritance:\n  // options.config[columnName] => options => DEFAULTS\n  options = mixin({}, DEFAULTS, options);\n\n  options.config = options.config || Object.create(null);\n\n  options.spacing = options.spacing || '\\n'; // probably useless\n  options.preserveNewLines = !!options.preserveNewLines;\n  options.showHeaders = !!options.showHeaders;\n  options.columns = options.columns || options.include; // alias include/columns, prefer columns if supplied\n  var columnNames = options.columns || []; // optional user-supplied columns to include\n\n  items = toArray(items, columnNames);\n\n  // if not suppled column names, automatically determine columns from data keys\n  if (!columnNames.length) {\n    items.forEach(function (item) {\n      for (var columnName in item) {\n        if (columnNames.indexOf(columnName) === -1) columnNames.push(columnName);\n      }\n    });\n  }\n\n  // initialize column defaults (each column inherits from options.config)\n  var columns = columnNames.reduce(function (columns, columnName) {\n    var column = Object.create(options);\n    columns[columnName] = mixin(column, columnConfigs[columnName]);\n    return columns;\n  }, Object.create(null));\n\n  // sanitize column settings\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    column.name = columnName;\n    column.maxWidth = Math.ceil(column.maxWidth);\n    column.minWidth = Math.ceil(column.minWidth);\n    column.truncate = !!column.truncate;\n    column.align = column.align || 'left';\n  });\n\n  // sanitize data\n  items = items.map(function (item) {\n    var result = Object.create(null);\n    columnNames.forEach(function (columnName) {\n      // null/undefined -> ''\n      result[columnName] = item[columnName] != null ? item[columnName] : '';\n      // toString everything\n      result[columnName] = '' + result[columnName];\n      if (columns[columnName].preserveNewLines) {\n        // merge non-newline whitespace chars\n        result[columnName] = result[columnName].replace(/[^\\S\\n]/gmi, ' ');\n      } else {\n        // merge all whitespace chars\n        result[columnName] = result[columnName].replace(/\\s/gmi, ' ');\n      }\n    });\n    return result;\n  });\n\n  // transform data cells\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    items = items.map(function (item, index) {\n      var col = Object.create(column);\n      item[columnName] = column.dataTransform(item[columnName], col, index);\n\n      var changedKeys = Object.keys(col);\n      // disable default heading transform if we wrote to column.name\n      if (changedKeys.indexOf('name') !== -1) {\n        if (column.headingTransform !== DEFAULT_HEADING_TRANSFORM) return;\n        column.headingTransform = function (heading) {\n          return heading;\n        };\n      }\n      changedKeys.forEach(function (key) {\n        return column[key] = col[key];\n      });\n      return item;\n    });\n  });\n\n  // add headers\n  var headers = {};\n  if (options.showHeaders) {\n    columnNames.forEach(function (columnName) {\n      var column = columns[columnName];\n\n      if (!column.showHeaders) {\n        headers[columnName] = '';\n        return;\n      }\n\n      headers[columnName] = column.headingTransform(column.name);\n    });\n    items.unshift(headers);\n  }\n  // get actual max-width between min & max\n  // based on length of data in columns\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    column.width = items.map(function (item) {\n      return item[columnName];\n    }).reduce(function (min, cur) {\n      // if already at maxWidth don't bother testing\n      if (min >= column.maxWidth) return min;\n      return Math.max(min, Math.min(column.maxWidth, Math.max(column.minWidth, wcwidth(cur))));\n    }, 0);\n  });\n\n  // split long words so they can break onto multiple lines\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    items = items.map(function (item) {\n      item[columnName] = splitLongWords(item[columnName], column.width, column.truncateMarker);\n      return item;\n    });\n  });\n\n  // wrap long lines. each item is now an array of lines.\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    items = items.map(function (item, index) {\n      var cell = item[columnName];\n      item[columnName] = splitIntoLines(cell, column.width);\n\n      // if truncating required, only include first line + add truncation char\n      if (column.truncate && item[columnName].length > 1) {\n        item[columnName] = splitIntoLines(cell, column.width - wcwidth(column.truncateMarker));\n        var firstLine = item[columnName][0];\n        if (!endsWith(firstLine, column.truncateMarker)) item[columnName][0] += column.truncateMarker;\n        item[columnName] = item[columnName].slice(0, 1);\n      }\n      return item;\n    });\n  });\n\n  // recalculate column widths from truncated output/lines\n  columnNames.forEach(function (columnName) {\n    var column = columns[columnName];\n    column.width = items.map(function (item) {\n      return item[columnName].reduce(function (min, cur) {\n        if (min >= column.maxWidth) return min;\n        return Math.max(min, Math.min(column.maxWidth, Math.max(column.minWidth, wcwidth(cur))));\n      }, 0);\n    }).reduce(function (min, cur) {\n      if (min >= column.maxWidth) return min;\n      return Math.max(min, Math.min(column.maxWidth, Math.max(column.minWidth, cur)));\n    }, 0);\n  });\n\n  var rows = createRows(items, columns, columnNames, options.paddingChr); // merge lines into rows\n  // conceive output\n  return rows.reduce(function (output, row) {\n    return output.concat(row.reduce(function (rowOut, line) {\n      return rowOut.concat(line.join(options.columnSplitter));\n    }, []));\n  }, []).map(function (line) {\n    return truncateString(line, maxLineWidth);\n  }).join(options.spacing);\n};\n\n/**\n * Convert wrapped lines into rows with padded values.\n *\n * @param Array items data to process\n * @param Array columns column width settings for wrapping\n * @param Array columnNames column ordering\n * @return Array items wrapped in arrays, corresponding to lines\n */\n\nfunction createRows(items, columns, columnNames, paddingChr) {\n  return items.map(function (item) {\n    var row = [];\n    var numLines = 0;\n    columnNames.forEach(function (columnName) {\n      numLines = Math.max(numLines, item[columnName].length);\n    });\n    // combine matching lines of each rows\n\n    var _loop = function _loop(i) {\n      row[i] = row[i] || [];\n      columnNames.forEach(function (columnName) {\n        var column = columns[columnName];\n        var val = item[columnName][i] || ''; // || '' ensures empty columns get padded\n        if (column.align === 'right') row[i].push(padLeft(val, column.width, paddingChr));else if (column.align === 'center' || column.align === 'centre') row[i].push(padCenter(val, column.width, paddingChr));else row[i].push(padRight(val, column.width, paddingChr));\n      });\n    };\n\n    for (var i = 0; i < numLines; i++) {\n      _loop(i);\n    }\n    return row;\n  });\n}\n\n/**\n * Object.assign\n *\n * @return Object Object with properties mixed in.\n */\n\nfunction mixin() {\n  if (Object.assign) return Object.assign.apply(Object, arguments);\n  return ObjectAssign.apply(undefined, arguments);\n}\n\nfunction ObjectAssign(target, firstSource) {\n  \"use strict\";\n\n  if (target === undefined || target === null) throw new TypeError(\"Cannot convert first argument to object\");\n\n  var to = Object(target);\n\n  var hasPendingException = false;\n  var pendingException;\n\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) continue;\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      try {\n        var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) to[nextKey] = nextSource[nextKey];\n      } catch (e) {\n        if (!hasPendingException) {\n          hasPendingException = true;\n          pendingException = e;\n        }\n      }\n    }\n\n    if (hasPendingException) throw pendingException;\n  }\n  return to;\n}\n\n/**\n * Adapted from String.prototype.endsWith polyfill.\n */\n\nfunction endsWith(target, searchString, position) {\n  position = position || target.length;\n  position = position - searchString.length;\n  var lastIndex = target.lastIndexOf(searchString);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\nfunction toArray(items, columnNames) {\n  if (Array.isArray(items)) return items;\n  var rows = [];\n  for (var key in items) {\n    var item = {};\n    item[columnNames[0] || 'key'] = key;\n    item[columnNames[1] || 'value'] = items[key];\n    rows.push(item);\n  }\n  return rows;\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}