{"ast":null,"code":"'use strict';\n\nconst stringWidth = require('string-width');\n\nconst stripAnsi = require('strip-ansi');\n\nconst concat = Array.prototype.concat;\nconst defaults = {\n  character: ' ',\n  newline: '\\n',\n  padding: 2,\n  sort: true,\n  width: 0\n};\n\nfunction byPlainText(a, b) {\n  const plainA = stripAnsi(a);\n  const plainB = stripAnsi(b);\n\n  if (plainA === plainB) {\n    return 0;\n  }\n\n  if (plainA > plainB) {\n    return 1;\n  }\n\n  return -1;\n}\n\nfunction makeArray() {\n  return [];\n}\n\nfunction makeList(count) {\n  return Array.apply(null, Array(count));\n}\n\nfunction padCell(fullWidth, character, value) {\n  const valueWidth = stringWidth(value);\n  const filler = makeList(fullWidth - valueWidth + 1);\n  return value + filler.join(character);\n}\n\nfunction toRows(rows, cell, i) {\n  rows[i % rows.length].push(cell);\n  return rows;\n}\n\nfunction toString(arr) {\n  return arr.join('');\n}\n\nfunction columns(values, options) {\n  values = concat.apply([], values);\n  options = Object.assign({}, defaults, options);\n  let cells = values.filter(Boolean).map(String);\n\n  if (options.sort !== false) {\n    cells = cells.sort(byPlainText);\n  }\n\n  const termWidth = options.width || process.stdout.columns;\n  const cellWidth = Math.max.apply(null, cells.map(stringWidth)) + options.padding;\n  const columnCount = Math.floor(termWidth / cellWidth) || 1;\n  const rowCount = Math.ceil(cells.length / columnCount) || 1;\n\n  if (columnCount === 1) {\n    return cells.join(options.newline);\n  }\n\n  return cells.map(padCell.bind(null, cellWidth, options.character)).reduce(toRows, makeList(rowCount).map(makeArray)).map(toString).join(options.newline);\n}\n\nmodule.exports = columns;","map":{"version":3,"names":["stringWidth","require","stripAnsi","concat","Array","prototype","defaults","character","newline","padding","sort","width","byPlainText","a","b","plainA","plainB","makeArray","makeList","count","apply","padCell","fullWidth","value","valueWidth","filler","join","toRows","rows","cell","i","length","push","toString","arr","columns","values","options","Object","assign","cells","filter","Boolean","map","String","termWidth","process","stdout","cellWidth","Math","max","columnCount","floor","rowCount","ceil","bind","reduce","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/cli-columns/index.js"],"sourcesContent":["'use strict';\n\nconst stringWidth = require('string-width');\nconst stripAnsi = require('strip-ansi');\n\nconst concat = Array.prototype.concat;\nconst defaults = {\n\tcharacter: ' ',\n\tnewline: '\\n',\n\tpadding: 2,\n\tsort: true,\n\twidth: 0,\n};\n\nfunction byPlainText(a, b) {\n\tconst plainA = stripAnsi(a);\n\tconst plainB = stripAnsi(b);\n\n\tif (plainA === plainB) {\n\t\treturn 0;\n\t}\n\n\tif (plainA > plainB) {\n\t\treturn 1;\n\t}\n\n\treturn -1;\n}\n\nfunction makeArray() {\n\treturn [];\n}\n\nfunction makeList(count) {\n\treturn Array.apply(null, Array(count));\n}\n\nfunction padCell(fullWidth, character, value) {\n\tconst valueWidth = stringWidth(value);\n\tconst filler = makeList(fullWidth - valueWidth + 1);\n\n\treturn value + filler.join(character);\n}\n\nfunction toRows(rows, cell, i) {\n\trows[i % rows.length].push(cell);\n\n\treturn rows;\n}\n\nfunction toString(arr) {\n\treturn arr.join('');\n}\n\nfunction columns(values, options) {\n\tvalues = concat.apply([], values);\n\toptions = Object.assign({}, defaults, options);\n\n\tlet cells = values.filter(Boolean).map(String);\n\n\tif (options.sort !== false) {\n\t\tcells = cells.sort(byPlainText);\n\t}\n\n\tconst termWidth = options.width || process.stdout.columns;\n\tconst cellWidth =\n\t\tMath.max.apply(null, cells.map(stringWidth)) + options.padding;\n\tconst columnCount = Math.floor(termWidth / cellWidth) || 1;\n\tconst rowCount = Math.ceil(cells.length / columnCount) || 1;\n\n\tif (columnCount === 1) {\n\t\treturn cells.join(options.newline);\n\t}\n\n\treturn cells\n\t\t.map(padCell.bind(null, cellWidth, options.character))\n\t\t.reduce(toRows, makeList(rowCount).map(makeArray))\n\t\t.map(toString)\n\t\t.join(options.newline);\n}\n\nmodule.exports = columns;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}