{"ast":null,"code":"const hasIntl = typeof Intl === 'object' && !!Intl;\nconst Collator = hasIntl && Intl.Collator;\nconst cache = new Map();\n\nconst collatorCompare = (locale, opts) => {\n  const collator = new Collator(locale, opts);\n  return (a, b) => collator.compare(a, b);\n};\n\nconst localeCompare = (locale, opts) => (a, b) => a.localeCompare(b, locale, opts);\n\nconst knownOptions = ['sensitivity', 'numeric', 'ignorePunctuation', 'caseFirst'];\nconst {\n  hasOwnProperty\n} = Object.prototype;\n\nmodule.exports = function (locale) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!locale || typeof locale !== 'string') throw new TypeError('locale required');\n  const opts = knownOptions.reduce((opts, k) => {\n    if (hasOwnProperty.call(options, k)) {\n      opts[k] = options[k];\n    }\n\n    return opts;\n  }, {});\n  const key = `${locale}\\n${JSON.stringify(opts)}`;\n  if (cache.has(key)) return cache.get(key);\n  const compare = hasIntl ? collatorCompare(locale, opts) : localeCompare(locale, opts);\n  cache.set(key, compare);\n  return compare;\n};","map":{"version":3,"names":["hasIntl","Intl","Collator","cache","Map","collatorCompare","locale","opts","collator","a","b","compare","localeCompare","knownOptions","hasOwnProperty","Object","prototype","module","exports","options","TypeError","reduce","k","call","key","JSON","stringify","has","get","set"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/@isaacs/string-locale-compare/index.js"],"sourcesContent":["const hasIntl = typeof Intl === 'object' && !!Intl\nconst Collator = hasIntl && Intl.Collator\nconst cache = new Map()\n\nconst collatorCompare = (locale, opts) => {\n  const collator = new Collator(locale, opts)\n  return (a, b) => collator.compare(a, b)\n}\n\nconst localeCompare = (locale, opts) => (a, b) => a.localeCompare(b, locale, opts)\n\nconst knownOptions = [\n  'sensitivity',\n  'numeric',\n  'ignorePunctuation',\n  'caseFirst',\n]\n\nconst { hasOwnProperty } = Object.prototype\n\nmodule.exports = (locale, options = {}) => {\n  if (!locale || typeof locale !== 'string')\n    throw new TypeError('locale required')\n\n  const opts = knownOptions.reduce((opts, k) => {\n    if (hasOwnProperty.call(options, k)) {\n      opts[k] = options[k]\n    }\n    return opts\n  }, {})\n  const key = `${locale}\\n${JSON.stringify(opts)}`\n\n  if (cache.has(key))\n    return cache.get(key)\n\n  const compare = hasIntl\n    ? collatorCompare(locale, opts)\n    : localeCompare(locale, opts)\n  cache.set(key, compare)\n\n  return compare\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,OAAOC,IAAP,KAAgB,QAAhB,IAA4B,CAAC,CAACA,IAA9C;AACA,MAAMC,QAAQ,GAAGF,OAAO,IAAIC,IAAI,CAACC,QAAjC;AACA,MAAMC,KAAK,GAAG,IAAIC,GAAJ,EAAd;;AAEA,MAAMC,eAAe,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;EACxC,MAAMC,QAAQ,GAAG,IAAIN,QAAJ,CAAaI,MAAb,EAAqBC,IAArB,CAAjB;EACA,OAAO,CAACE,CAAD,EAAIC,CAAJ,KAAUF,QAAQ,CAACG,OAAT,CAAiBF,CAAjB,EAAoBC,CAApB,CAAjB;AACD,CAHD;;AAKA,MAAME,aAAa,GAAG,CAACN,MAAD,EAASC,IAAT,KAAkB,CAACE,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACG,aAAF,CAAgBF,CAAhB,EAAmBJ,MAAnB,EAA2BC,IAA3B,CAAlD;;AAEA,MAAMM,YAAY,GAAG,CACnB,aADmB,EAEnB,SAFmB,EAGnB,mBAHmB,EAInB,WAJmB,CAArB;AAOA,MAAM;EAAEC;AAAF,IAAqBC,MAAM,CAACC,SAAlC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAACZ,MAAD,EAA0B;EAAA,IAAjBa,OAAiB,uEAAP,EAAO;EACzC,IAAI,CAACb,MAAD,IAAW,OAAOA,MAAP,KAAkB,QAAjC,EACE,MAAM,IAAIc,SAAJ,CAAc,iBAAd,CAAN;EAEF,MAAMb,IAAI,GAAGM,YAAY,CAACQ,MAAb,CAAoB,CAACd,IAAD,EAAOe,CAAP,KAAa;IAC5C,IAAIR,cAAc,CAACS,IAAf,CAAoBJ,OAApB,EAA6BG,CAA7B,CAAJ,EAAqC;MACnCf,IAAI,CAACe,CAAD,CAAJ,GAAUH,OAAO,CAACG,CAAD,CAAjB;IACD;;IACD,OAAOf,IAAP;EACD,CALY,EAKV,EALU,CAAb;EAMA,MAAMiB,GAAG,GAAI,GAAElB,MAAO,KAAImB,IAAI,CAACC,SAAL,CAAenB,IAAf,CAAqB,EAA/C;EAEA,IAAIJ,KAAK,CAACwB,GAAN,CAAUH,GAAV,CAAJ,EACE,OAAOrB,KAAK,CAACyB,GAAN,CAAUJ,GAAV,CAAP;EAEF,MAAMb,OAAO,GAAGX,OAAO,GACnBK,eAAe,CAACC,MAAD,EAASC,IAAT,CADI,GAEnBK,aAAa,CAACN,MAAD,EAASC,IAAT,CAFjB;EAGAJ,KAAK,CAAC0B,GAAN,CAAUL,GAAV,EAAeb,OAAf;EAEA,OAAOA,OAAP;AACD,CArBD"},"metadata":{},"sourceType":"script"}