{"ast":null,"code":"'use strict';\n\nconst pacote = require('pacote');\n\nconst npa = require('npm-package-arg');\n\nconst runScript = require('@npmcli/run-script');\n\nconst path = require('path');\n\nconst util = require('util');\n\nconst writeFile = util.promisify(require('fs').writeFile);\nmodule.exports = pack;\n\nasync function pack() {\n  let spec = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'file:.';\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // gets spec\n  spec = npa(spec);\n  const manifest = await pacote.manifest(spec, opts); // Default to true if no log options passed, set to false if we're in silent\n  // mode\n\n  const banner = !opts.silent;\n\n  if (spec.type === 'directory') {\n    // prepack\n    await runScript({ ...opts,\n      event: 'prepack',\n      path: spec.fetchSpec,\n      stdio: 'inherit',\n      pkg: manifest,\n      banner\n    });\n  } // packs tarball\n\n\n  const tarball = await pacote.tarball(manifest._resolved, { ...opts,\n    integrity: manifest._integrity\n  }); // check for explicit `false` so the default behavior is to skip writing to disk\n\n  if (opts.dryRun === false) {\n    const filename = `${manifest.name}-${manifest.version}.tgz`.replace(/^@/, '').replace(/\\//, '-');\n    const destination = path.resolve(opts.packDestination, filename);\n    await writeFile(destination, tarball);\n  }\n\n  if (spec.type === 'directory') {\n    // postpack\n    await runScript({ ...opts,\n      event: 'postpack',\n      path: spec.fetchSpec,\n      stdio: 'inherit',\n      pkg: manifest,\n      banner,\n      env: {\n        npm_package_from: tarball.from,\n        npm_package_resolved: tarball.resolved,\n        npm_package_integrity: tarball.integrity\n      }\n    });\n  }\n\n  return tarball;\n}","map":{"version":3,"names":["pacote","require","npa","runScript","path","util","writeFile","promisify","module","exports","pack","spec","opts","manifest","banner","silent","type","event","fetchSpec","stdio","pkg","tarball","_resolved","integrity","_integrity","dryRun","filename","name","version","replace","destination","resolve","packDestination","env","npm_package_from","from","npm_package_resolved","resolved","npm_package_integrity"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/libnpmpack/lib/index.js"],"sourcesContent":["'use strict'\n\nconst pacote = require('pacote')\nconst npa = require('npm-package-arg')\nconst runScript = require('@npmcli/run-script')\nconst path = require('path')\nconst util = require('util')\nconst writeFile = util.promisify(require('fs').writeFile)\n\nmodule.exports = pack\nasync function pack (spec = 'file:.', opts = {}) {\n  // gets spec\n  spec = npa(spec)\n\n  const manifest = await pacote.manifest(spec, opts)\n\n  // Default to true if no log options passed, set to false if we're in silent\n  // mode\n  const banner = !opts.silent\n\n  if (spec.type === 'directory') {\n    // prepack\n    await runScript({\n      ...opts,\n      event: 'prepack',\n      path: spec.fetchSpec,\n      stdio: 'inherit',\n      pkg: manifest,\n      banner,\n    })\n  }\n\n  // packs tarball\n  const tarball = await pacote.tarball(manifest._resolved, {\n    ...opts,\n    integrity: manifest._integrity,\n  })\n\n  // check for explicit `false` so the default behavior is to skip writing to disk\n  if (opts.dryRun === false) {\n    const filename = `${manifest.name}-${manifest.version}.tgz`\n      .replace(/^@/, '').replace(/\\//, '-')\n    const destination = path.resolve(opts.packDestination, filename)\n    await writeFile(destination, tarball)\n  }\n\n  if (spec.type === 'directory') {\n    // postpack\n    await runScript({\n      ...opts,\n      event: 'postpack',\n      path: spec.fetchSpec,\n      stdio: 'inherit',\n      pkg: manifest,\n      banner,\n      env: {\n        npm_package_from: tarball.from,\n        npm_package_resolved: tarball.resolved,\n        npm_package_integrity: tarball.integrity,\n      },\n    })\n  }\n\n  return tarball\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,iBAAD,CAAnB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,oBAAD,CAAzB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMK,SAAS,GAAGD,IAAI,CAACE,SAAL,CAAeN,OAAO,CAAC,IAAD,CAAP,CAAcK,SAA7B,CAAlB;AAEAE,MAAM,CAACC,OAAP,GAAiBC,IAAjB;;AACA,eAAeA,IAAf,GAAiD;EAAA,IAA5BC,IAA4B,uEAArB,QAAqB;EAAA,IAAXC,IAAW,uEAAJ,EAAI;EAC/C;EACAD,IAAI,GAAGT,GAAG,CAACS,IAAD,CAAV;EAEA,MAAME,QAAQ,GAAG,MAAMb,MAAM,CAACa,QAAP,CAAgBF,IAAhB,EAAsBC,IAAtB,CAAvB,CAJ+C,CAM/C;EACA;;EACA,MAAME,MAAM,GAAG,CAACF,IAAI,CAACG,MAArB;;EAEA,IAAIJ,IAAI,CAACK,IAAL,KAAc,WAAlB,EAA+B;IAC7B;IACA,MAAMb,SAAS,CAAC,EACd,GAAGS,IADW;MAEdK,KAAK,EAAE,SAFO;MAGdb,IAAI,EAAEO,IAAI,CAACO,SAHG;MAIdC,KAAK,EAAE,SAJO;MAKdC,GAAG,EAAEP,QALS;MAMdC;IANc,CAAD,CAAf;EAQD,CApB8C,CAsB/C;;;EACA,MAAMO,OAAO,GAAG,MAAMrB,MAAM,CAACqB,OAAP,CAAeR,QAAQ,CAACS,SAAxB,EAAmC,EACvD,GAAGV,IADoD;IAEvDW,SAAS,EAAEV,QAAQ,CAACW;EAFmC,CAAnC,CAAtB,CAvB+C,CA4B/C;;EACA,IAAIZ,IAAI,CAACa,MAAL,KAAgB,KAApB,EAA2B;IACzB,MAAMC,QAAQ,GAAI,GAAEb,QAAQ,CAACc,IAAK,IAAGd,QAAQ,CAACe,OAAQ,MAArC,CACdC,OADc,CACN,IADM,EACA,EADA,EACIA,OADJ,CACY,IADZ,EACkB,GADlB,CAAjB;IAEA,MAAMC,WAAW,GAAG1B,IAAI,CAAC2B,OAAL,CAAanB,IAAI,CAACoB,eAAlB,EAAmCN,QAAnC,CAApB;IACA,MAAMpB,SAAS,CAACwB,WAAD,EAAcT,OAAd,CAAf;EACD;;EAED,IAAIV,IAAI,CAACK,IAAL,KAAc,WAAlB,EAA+B;IAC7B;IACA,MAAMb,SAAS,CAAC,EACd,GAAGS,IADW;MAEdK,KAAK,EAAE,UAFO;MAGdb,IAAI,EAAEO,IAAI,CAACO,SAHG;MAIdC,KAAK,EAAE,SAJO;MAKdC,GAAG,EAAEP,QALS;MAMdC,MANc;MAOdmB,GAAG,EAAE;QACHC,gBAAgB,EAAEb,OAAO,CAACc,IADvB;QAEHC,oBAAoB,EAAEf,OAAO,CAACgB,QAF3B;QAGHC,qBAAqB,EAAEjB,OAAO,CAACE;MAH5B;IAPS,CAAD,CAAf;EAaD;;EAED,OAAOF,OAAP;AACD"},"metadata":{},"sourceType":"script"}