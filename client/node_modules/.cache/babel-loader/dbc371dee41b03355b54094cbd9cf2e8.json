{"ast":null,"code":"// Get the actual nodes corresponding to a root node's child workspaces,\n// given a list of workspace names.\nconst log = require('proc-log');\n\nconst relpath = require('./relpath.js');\n\nconst getWorkspaceNodes = (tree, workspaces) => {\n  const wsMap = tree.workspaces;\n\n  if (!wsMap) {\n    log.warn('workspaces', 'filter set, but no workspaces present');\n    return [];\n  }\n\n  const nodes = [];\n\n  for (const name of workspaces) {\n    const path = wsMap.get(name);\n\n    if (!path) {\n      log.warn('workspaces', `${name} in filter set, but not in workspaces`);\n      continue;\n    }\n\n    const loc = relpath(tree.realpath, path);\n    const node = tree.inventory.get(loc);\n\n    if (!node) {\n      log.warn('workspaces', `${name} in filter set, but no workspace folder present`);\n      continue;\n    }\n\n    nodes.push(node);\n  }\n\n  return nodes;\n};\n\nmodule.exports = getWorkspaceNodes;","map":{"version":3,"names":["log","require","relpath","getWorkspaceNodes","tree","workspaces","wsMap","warn","nodes","name","path","get","loc","realpath","node","inventory","push","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/@npmcli/arborist/lib/get-workspace-nodes.js"],"sourcesContent":["// Get the actual nodes corresponding to a root node's child workspaces,\n// given a list of workspace names.\n\nconst log = require('proc-log')\nconst relpath = require('./relpath.js')\n\nconst getWorkspaceNodes = (tree, workspaces) => {\n  const wsMap = tree.workspaces\n  if (!wsMap) {\n    log.warn('workspaces', 'filter set, but no workspaces present')\n    return []\n  }\n\n  const nodes = []\n  for (const name of workspaces) {\n    const path = wsMap.get(name)\n    if (!path) {\n      log.warn('workspaces', `${name} in filter set, but not in workspaces`)\n      continue\n    }\n\n    const loc = relpath(tree.realpath, path)\n    const node = tree.inventory.get(loc)\n\n    if (!node) {\n      log.warn('workspaces', `${name} in filter set, but no workspace folder present`)\n      continue\n    }\n\n    nodes.push(node)\n  }\n\n  return nodes\n}\n\nmodule.exports = getWorkspaceNodes\n"],"mappings":"AAAA;AACA;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,UAAD,CAAnB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,cAAD,CAAvB;;AAEA,MAAME,iBAAiB,GAAG,CAACC,IAAD,EAAOC,UAAP,KAAsB;EAC9C,MAAMC,KAAK,GAAGF,IAAI,CAACC,UAAnB;;EACA,IAAI,CAACC,KAAL,EAAY;IACVN,GAAG,CAACO,IAAJ,CAAS,YAAT,EAAuB,uCAAvB;IACA,OAAO,EAAP;EACD;;EAED,MAAMC,KAAK,GAAG,EAAd;;EACA,KAAK,MAAMC,IAAX,IAAmBJ,UAAnB,EAA+B;IAC7B,MAAMK,IAAI,GAAGJ,KAAK,CAACK,GAAN,CAAUF,IAAV,CAAb;;IACA,IAAI,CAACC,IAAL,EAAW;MACTV,GAAG,CAACO,IAAJ,CAAS,YAAT,EAAwB,GAAEE,IAAK,uCAA/B;MACA;IACD;;IAED,MAAMG,GAAG,GAAGV,OAAO,CAACE,IAAI,CAACS,QAAN,EAAgBH,IAAhB,CAAnB;IACA,MAAMI,IAAI,GAAGV,IAAI,CAACW,SAAL,CAAeJ,GAAf,CAAmBC,GAAnB,CAAb;;IAEA,IAAI,CAACE,IAAL,EAAW;MACTd,GAAG,CAACO,IAAJ,CAAS,YAAT,EAAwB,GAAEE,IAAK,iDAA/B;MACA;IACD;;IAEDD,KAAK,CAACQ,IAAN,CAAWF,IAAX;EACD;;EAED,OAAON,KAAP;AACD,CA3BD;;AA6BAS,MAAM,CAACC,OAAP,GAAiBf,iBAAjB"},"metadata":{},"sourceType":"script"}