{"ast":null,"code":"// pass in an arborist object, and it'll output the data about what\n// was done, what was audited, etc.\n//\n// added ## packages, removed ## packages, and audited ## packages in 19.157s\n//\n// 1 package is looking for funding\n//   run `npm fund` for details\n//\n// found 37 vulnerabilities (5 low, 7 moderate, 25 high)\n//   run `npm audit fix` to fix them, or `npm audit` for details\nconst log = require('./log-shim.js');\n\nconst {\n  depth\n} = require('treeverse');\n\nconst ms = require('ms');\n\nconst auditReport = require('npm-audit-report');\n\nconst {\n  readTree: getFundingInfo\n} = require('libnpmfund');\n\nconst auditError = require('./audit-error.js'); // TODO: output JSON if flatOptions.json is true\n\n\nconst reifyOutput = (npm, arb) => {\n  const {\n    diff,\n    actualTree\n  } = arb; // note: fails and crashes if we're running audit fix and there was an error\n  // which is a good thing, because there's no point printing all this other\n  // stuff in that case!\n\n  const auditReport = auditError(npm, arb.auditReport) ? null : arb.auditReport; // don't print any info in --silent mode, but we still need to\n  // set the exitCode properly from the audit report, if we have one.\n\n  if (npm.silent) {\n    getAuditReport(npm, auditReport);\n    return;\n  }\n\n  const summary = {\n    added: 0,\n    removed: 0,\n    changed: 0,\n    audited: auditReport && !auditReport.error ? actualTree.inventory.size : 0,\n    funding: 0\n  };\n\n  if (diff) {\n    depth({\n      tree: diff,\n      visit: d => {\n        switch (d.action) {\n          case 'REMOVE':\n            summary.removed++;\n            break;\n\n          case 'ADD':\n            actualTree.inventory.has(d.ideal) && summary.added++;\n            break;\n\n          case 'CHANGE':\n            summary.changed++;\n            break;\n\n          default:\n            return;\n        }\n\n        const node = d.actual || d.ideal;\n        log.silly(d.action, node.location);\n      },\n      getChildren: d => d.children\n    });\n  }\n\n  if (npm.flatOptions.fund) {\n    const fundingInfo = getFundingInfo(actualTree, {\n      countOnly: true\n    });\n    summary.funding = fundingInfo.length;\n  }\n\n  if (npm.flatOptions.json) {\n    if (auditReport) {\n      // call this to set the exit code properly\n      getAuditReport(npm, auditReport);\n      summary.audit = npm.command === 'audit' ? auditReport : auditReport.toJSON().metadata;\n    }\n\n    npm.output(JSON.stringify(summary, 0, 2));\n  } else {\n    packagesChangedMessage(npm, summary);\n    packagesFundingMessage(npm, summary);\n    printAuditReport(npm, auditReport);\n  }\n}; // if we're running `npm audit fix`, then we print the full audit report\n// at the end if there's still stuff, because it's silly for `npm audit`\n// to tell you to run `npm audit` for details.  otherwise, use the summary\n// report.  if we get here, we know it's not quiet or json.\n// If the loglevel is silent, then we just run the report\n// to get the exitCode set appropriately.\n\n\nconst printAuditReport = (npm, report) => {\n  const res = getAuditReport(npm, report);\n\n  if (!res || !res.report) {\n    return;\n  }\n\n  npm.output(`\\n${res.report}`);\n};\n\nconst getAuditReport = (npm, report) => {\n  if (!report) {\n    return;\n  } // when in silent mode, we print nothing.  the JSON output is\n  // going to just JSON.stringify() the report object.\n\n\n  const reporter = npm.silent ? 'quiet' : npm.flatOptions.json ? 'quiet' : npm.command !== 'audit' ? 'install' : 'detail';\n  const defaultAuditLevel = npm.command !== 'audit' ? 'none' : 'low';\n  const auditLevel = npm.flatOptions.auditLevel || defaultAuditLevel;\n  const res = auditReport(report, {\n    reporter,\n    ...npm.flatOptions,\n    auditLevel\n  });\n\n  if (npm.command === 'audit') {\n    process.exitCode = process.exitCode || res.exitCode;\n  }\n\n  return res;\n};\n\nconst packagesChangedMessage = (npm, _ref) => {\n  let {\n    added,\n    removed,\n    changed,\n    audited\n  } = _ref;\n  const msg = ['\\n'];\n\n  if (added === 0 && removed === 0 && changed === 0) {\n    msg.push('up to date');\n\n    if (audited) {\n      msg.push(', ');\n    }\n  } else {\n    if (added) {\n      msg.push(`added ${added} package${added === 1 ? '' : 's'}`);\n    }\n\n    if (removed) {\n      if (added) {\n        msg.push(', ');\n      }\n\n      if (added && !audited && !changed) {\n        msg.push('and ');\n      }\n\n      msg.push(`removed ${removed} package${removed === 1 ? '' : 's'}`);\n    }\n\n    if (changed) {\n      if (added || removed) {\n        msg.push(', ');\n      }\n\n      if (!audited && (added || removed)) {\n        msg.push('and ');\n      }\n\n      msg.push(`changed ${changed} package${changed === 1 ? '' : 's'}`);\n    }\n\n    if (audited) {\n      msg.push(', and ');\n    }\n  }\n\n  if (audited) {\n    msg.push(`audited ${audited} package${audited === 1 ? '' : 's'}`);\n  }\n\n  msg.push(` in ${ms(Date.now() - npm.started)}`);\n  npm.output(msg.join(''));\n};\n\nconst packagesFundingMessage = (npm, _ref2) => {\n  let {\n    funding\n  } = _ref2;\n\n  if (!funding) {\n    return;\n  }\n\n  npm.output('');\n  const pkg = funding === 1 ? 'package' : 'packages';\n  const is = funding === 1 ? 'is' : 'are';\n  npm.output(`${funding} ${pkg} ${is} looking for funding`);\n  npm.output('  run `npm fund` for details');\n};\n\nmodule.exports = reifyOutput;","map":{"version":3,"names":["log","require","depth","ms","auditReport","readTree","getFundingInfo","auditError","reifyOutput","npm","arb","diff","actualTree","silent","getAuditReport","summary","added","removed","changed","audited","error","inventory","size","funding","tree","visit","d","action","has","ideal","node","actual","silly","location","getChildren","children","flatOptions","fund","fundingInfo","countOnly","length","json","audit","command","toJSON","metadata","output","JSON","stringify","packagesChangedMessage","packagesFundingMessage","printAuditReport","report","res","reporter","defaultAuditLevel","auditLevel","process","exitCode","msg","push","Date","now","started","join","pkg","is","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/utils/reify-output.js"],"sourcesContent":["// pass in an arborist object, and it'll output the data about what\n// was done, what was audited, etc.\n//\n// added ## packages, removed ## packages, and audited ## packages in 19.157s\n//\n// 1 package is looking for funding\n//   run `npm fund` for details\n//\n// found 37 vulnerabilities (5 low, 7 moderate, 25 high)\n//   run `npm audit fix` to fix them, or `npm audit` for details\n\nconst log = require('./log-shim.js')\nconst { depth } = require('treeverse')\nconst ms = require('ms')\nconst auditReport = require('npm-audit-report')\nconst { readTree: getFundingInfo } = require('libnpmfund')\nconst auditError = require('./audit-error.js')\n\n// TODO: output JSON if flatOptions.json is true\nconst reifyOutput = (npm, arb) => {\n  const { diff, actualTree } = arb\n\n  // note: fails and crashes if we're running audit fix and there was an error\n  // which is a good thing, because there's no point printing all this other\n  // stuff in that case!\n  const auditReport = auditError(npm, arb.auditReport) ? null : arb.auditReport\n\n  // don't print any info in --silent mode, but we still need to\n  // set the exitCode properly from the audit report, if we have one.\n  if (npm.silent) {\n    getAuditReport(npm, auditReport)\n    return\n  }\n\n  const summary = {\n    added: 0,\n    removed: 0,\n    changed: 0,\n    audited: auditReport && !auditReport.error ? actualTree.inventory.size : 0,\n    funding: 0,\n  }\n\n  if (diff) {\n    depth({\n      tree: diff,\n      visit: d => {\n        switch (d.action) {\n          case 'REMOVE':\n            summary.removed++\n            break\n          case 'ADD':\n            actualTree.inventory.has(d.ideal) && summary.added++\n            break\n          case 'CHANGE':\n            summary.changed++\n            break\n          default:\n            return\n        }\n        const node = d.actual || d.ideal\n        log.silly(d.action, node.location)\n      },\n      getChildren: d => d.children,\n    })\n  }\n\n  if (npm.flatOptions.fund) {\n    const fundingInfo = getFundingInfo(actualTree, { countOnly: true })\n    summary.funding = fundingInfo.length\n  }\n\n  if (npm.flatOptions.json) {\n    if (auditReport) {\n      // call this to set the exit code properly\n      getAuditReport(npm, auditReport)\n      summary.audit = npm.command === 'audit' ? auditReport\n        : auditReport.toJSON().metadata\n    }\n    npm.output(JSON.stringify(summary, 0, 2))\n  } else {\n    packagesChangedMessage(npm, summary)\n    packagesFundingMessage(npm, summary)\n    printAuditReport(npm, auditReport)\n  }\n}\n\n// if we're running `npm audit fix`, then we print the full audit report\n// at the end if there's still stuff, because it's silly for `npm audit`\n// to tell you to run `npm audit` for details.  otherwise, use the summary\n// report.  if we get here, we know it's not quiet or json.\n// If the loglevel is silent, then we just run the report\n// to get the exitCode set appropriately.\nconst printAuditReport = (npm, report) => {\n  const res = getAuditReport(npm, report)\n  if (!res || !res.report) {\n    return\n  }\n  npm.output(`\\n${res.report}`)\n}\n\nconst getAuditReport = (npm, report) => {\n  if (!report) {\n    return\n  }\n\n  // when in silent mode, we print nothing.  the JSON output is\n  // going to just JSON.stringify() the report object.\n  const reporter = npm.silent ? 'quiet'\n    : npm.flatOptions.json ? 'quiet'\n    : npm.command !== 'audit' ? 'install'\n    : 'detail'\n  const defaultAuditLevel = npm.command !== 'audit' ? 'none' : 'low'\n  const auditLevel = npm.flatOptions.auditLevel || defaultAuditLevel\n\n  const res = auditReport(report, {\n    reporter,\n    ...npm.flatOptions,\n    auditLevel,\n  })\n  if (npm.command === 'audit') {\n    process.exitCode = process.exitCode || res.exitCode\n  }\n  return res\n}\n\nconst packagesChangedMessage = (npm, { added, removed, changed, audited }) => {\n  const msg = ['\\n']\n  if (added === 0 && removed === 0 && changed === 0) {\n    msg.push('up to date')\n    if (audited) {\n      msg.push(', ')\n    }\n  } else {\n    if (added) {\n      msg.push(`added ${added} package${added === 1 ? '' : 's'}`)\n    }\n\n    if (removed) {\n      if (added) {\n        msg.push(', ')\n      }\n\n      if (added && !audited && !changed) {\n        msg.push('and ')\n      }\n\n      msg.push(`removed ${removed} package${removed === 1 ? '' : 's'}`)\n    }\n    if (changed) {\n      if (added || removed) {\n        msg.push(', ')\n      }\n\n      if (!audited && (added || removed)) {\n        msg.push('and ')\n      }\n\n      msg.push(`changed ${changed} package${changed === 1 ? '' : 's'}`)\n    }\n    if (audited) {\n      msg.push(', and ')\n    }\n  }\n  if (audited) {\n    msg.push(`audited ${audited} package${audited === 1 ? '' : 's'}`)\n  }\n\n  msg.push(` in ${ms(Date.now() - npm.started)}`)\n  npm.output(msg.join(''))\n}\n\nconst packagesFundingMessage = (npm, { funding }) => {\n  if (!funding) {\n    return\n  }\n\n  npm.output('')\n  const pkg = funding === 1 ? 'package' : 'packages'\n  const is = funding === 1 ? 'is' : 'are'\n  npm.output(`${funding} ${pkg} ${is} looking for funding`)\n  npm.output('  run `npm fund` for details')\n}\n\nmodule.exports = reifyOutput\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,eAAD,CAAnB;;AACA,MAAM;EAAEC;AAAF,IAAYD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMG,WAAW,GAAGH,OAAO,CAAC,kBAAD,CAA3B;;AACA,MAAM;EAAEI,QAAQ,EAAEC;AAAZ,IAA+BL,OAAO,CAAC,YAAD,CAA5C;;AACA,MAAMM,UAAU,GAAGN,OAAO,CAAC,kBAAD,CAA1B,C,CAEA;;;AACA,MAAMO,WAAW,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;EAChC,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAuBF,GAA7B,CADgC,CAGhC;EACA;EACA;;EACA,MAAMN,WAAW,GAAGG,UAAU,CAACE,GAAD,EAAMC,GAAG,CAACN,WAAV,CAAV,GAAmC,IAAnC,GAA0CM,GAAG,CAACN,WAAlE,CANgC,CAQhC;EACA;;EACA,IAAIK,GAAG,CAACI,MAAR,EAAgB;IACdC,cAAc,CAACL,GAAD,EAAML,WAAN,CAAd;IACA;EACD;;EAED,MAAMW,OAAO,GAAG;IACdC,KAAK,EAAE,CADO;IAEdC,OAAO,EAAE,CAFK;IAGdC,OAAO,EAAE,CAHK;IAIdC,OAAO,EAAEf,WAAW,IAAI,CAACA,WAAW,CAACgB,KAA5B,GAAoCR,UAAU,CAACS,SAAX,CAAqBC,IAAzD,GAAgE,CAJ3D;IAKdC,OAAO,EAAE;EALK,CAAhB;;EAQA,IAAIZ,IAAJ,EAAU;IACRT,KAAK,CAAC;MACJsB,IAAI,EAAEb,IADF;MAEJc,KAAK,EAAEC,CAAC,IAAI;QACV,QAAQA,CAAC,CAACC,MAAV;UACE,KAAK,QAAL;YACEZ,OAAO,CAACE,OAAR;YACA;;UACF,KAAK,KAAL;YACEL,UAAU,CAACS,SAAX,CAAqBO,GAArB,CAAyBF,CAAC,CAACG,KAA3B,KAAqCd,OAAO,CAACC,KAAR,EAArC;YACA;;UACF,KAAK,QAAL;YACED,OAAO,CAACG,OAAR;YACA;;UACF;YACE;QAXJ;;QAaA,MAAMY,IAAI,GAAGJ,CAAC,CAACK,MAAF,IAAYL,CAAC,CAACG,KAA3B;QACA7B,GAAG,CAACgC,KAAJ,CAAUN,CAAC,CAACC,MAAZ,EAAoBG,IAAI,CAACG,QAAzB;MACD,CAlBG;MAmBJC,WAAW,EAAER,CAAC,IAAIA,CAAC,CAACS;IAnBhB,CAAD,CAAL;EAqBD;;EAED,IAAI1B,GAAG,CAAC2B,WAAJ,CAAgBC,IAApB,EAA0B;IACxB,MAAMC,WAAW,GAAGhC,cAAc,CAACM,UAAD,EAAa;MAAE2B,SAAS,EAAE;IAAb,CAAb,CAAlC;IACAxB,OAAO,CAACQ,OAAR,GAAkBe,WAAW,CAACE,MAA9B;EACD;;EAED,IAAI/B,GAAG,CAAC2B,WAAJ,CAAgBK,IAApB,EAA0B;IACxB,IAAIrC,WAAJ,EAAiB;MACf;MACAU,cAAc,CAACL,GAAD,EAAML,WAAN,CAAd;MACAW,OAAO,CAAC2B,KAAR,GAAgBjC,GAAG,CAACkC,OAAJ,KAAgB,OAAhB,GAA0BvC,WAA1B,GACZA,WAAW,CAACwC,MAAZ,GAAqBC,QADzB;IAED;;IACDpC,GAAG,CAACqC,MAAJ,CAAWC,IAAI,CAACC,SAAL,CAAejC,OAAf,EAAwB,CAAxB,EAA2B,CAA3B,CAAX;EACD,CARD,MAQO;IACLkC,sBAAsB,CAACxC,GAAD,EAAMM,OAAN,CAAtB;IACAmC,sBAAsB,CAACzC,GAAD,EAAMM,OAAN,CAAtB;IACAoC,gBAAgB,CAAC1C,GAAD,EAAML,WAAN,CAAhB;EACD;AACF,CAjED,C,CAmEA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM+C,gBAAgB,GAAG,CAAC1C,GAAD,EAAM2C,MAAN,KAAiB;EACxC,MAAMC,GAAG,GAAGvC,cAAc,CAACL,GAAD,EAAM2C,MAAN,CAA1B;;EACA,IAAI,CAACC,GAAD,IAAQ,CAACA,GAAG,CAACD,MAAjB,EAAyB;IACvB;EACD;;EACD3C,GAAG,CAACqC,MAAJ,CAAY,KAAIO,GAAG,CAACD,MAAO,EAA3B;AACD,CAND;;AAQA,MAAMtC,cAAc,GAAG,CAACL,GAAD,EAAM2C,MAAN,KAAiB;EACtC,IAAI,CAACA,MAAL,EAAa;IACX;EACD,CAHqC,CAKtC;EACA;;;EACA,MAAME,QAAQ,GAAG7C,GAAG,CAACI,MAAJ,GAAa,OAAb,GACbJ,GAAG,CAAC2B,WAAJ,CAAgBK,IAAhB,GAAuB,OAAvB,GACAhC,GAAG,CAACkC,OAAJ,KAAgB,OAAhB,GAA0B,SAA1B,GACA,QAHJ;EAIA,MAAMY,iBAAiB,GAAG9C,GAAG,CAACkC,OAAJ,KAAgB,OAAhB,GAA0B,MAA1B,GAAmC,KAA7D;EACA,MAAMa,UAAU,GAAG/C,GAAG,CAAC2B,WAAJ,CAAgBoB,UAAhB,IAA8BD,iBAAjD;EAEA,MAAMF,GAAG,GAAGjD,WAAW,CAACgD,MAAD,EAAS;IAC9BE,QAD8B;IAE9B,GAAG7C,GAAG,CAAC2B,WAFuB;IAG9BoB;EAH8B,CAAT,CAAvB;;EAKA,IAAI/C,GAAG,CAACkC,OAAJ,KAAgB,OAApB,EAA6B;IAC3Bc,OAAO,CAACC,QAAR,GAAmBD,OAAO,CAACC,QAAR,IAAoBL,GAAG,CAACK,QAA3C;EACD;;EACD,OAAOL,GAAP;AACD,CAvBD;;AAyBA,MAAMJ,sBAAsB,GAAG,CAACxC,GAAD,WAA+C;EAAA,IAAzC;IAAEO,KAAF;IAASC,OAAT;IAAkBC,OAAlB;IAA2BC;EAA3B,CAAyC;EAC5E,MAAMwC,GAAG,GAAG,CAAC,IAAD,CAAZ;;EACA,IAAI3C,KAAK,KAAK,CAAV,IAAeC,OAAO,KAAK,CAA3B,IAAgCC,OAAO,KAAK,CAAhD,EAAmD;IACjDyC,GAAG,CAACC,IAAJ,CAAS,YAAT;;IACA,IAAIzC,OAAJ,EAAa;MACXwC,GAAG,CAACC,IAAJ,CAAS,IAAT;IACD;EACF,CALD,MAKO;IACL,IAAI5C,KAAJ,EAAW;MACT2C,GAAG,CAACC,IAAJ,CAAU,SAAQ5C,KAAM,WAAUA,KAAK,KAAK,CAAV,GAAc,EAAd,GAAmB,GAAI,EAAzD;IACD;;IAED,IAAIC,OAAJ,EAAa;MACX,IAAID,KAAJ,EAAW;QACT2C,GAAG,CAACC,IAAJ,CAAS,IAAT;MACD;;MAED,IAAI5C,KAAK,IAAI,CAACG,OAAV,IAAqB,CAACD,OAA1B,EAAmC;QACjCyC,GAAG,CAACC,IAAJ,CAAS,MAAT;MACD;;MAEDD,GAAG,CAACC,IAAJ,CAAU,WAAU3C,OAAQ,WAAUA,OAAO,KAAK,CAAZ,GAAgB,EAAhB,GAAqB,GAAI,EAA/D;IACD;;IACD,IAAIC,OAAJ,EAAa;MACX,IAAIF,KAAK,IAAIC,OAAb,EAAsB;QACpB0C,GAAG,CAACC,IAAJ,CAAS,IAAT;MACD;;MAED,IAAI,CAACzC,OAAD,KAAaH,KAAK,IAAIC,OAAtB,CAAJ,EAAoC;QAClC0C,GAAG,CAACC,IAAJ,CAAS,MAAT;MACD;;MAEDD,GAAG,CAACC,IAAJ,CAAU,WAAU1C,OAAQ,WAAUA,OAAO,KAAK,CAAZ,GAAgB,EAAhB,GAAqB,GAAI,EAA/D;IACD;;IACD,IAAIC,OAAJ,EAAa;MACXwC,GAAG,CAACC,IAAJ,CAAS,QAAT;IACD;EACF;;EACD,IAAIzC,OAAJ,EAAa;IACXwC,GAAG,CAACC,IAAJ,CAAU,WAAUzC,OAAQ,WAAUA,OAAO,KAAK,CAAZ,GAAgB,EAAhB,GAAqB,GAAI,EAA/D;EACD;;EAEDwC,GAAG,CAACC,IAAJ,CAAU,OAAMzD,EAAE,CAAC0D,IAAI,CAACC,GAAL,KAAarD,GAAG,CAACsD,OAAlB,CAA2B,EAA7C;EACAtD,GAAG,CAACqC,MAAJ,CAAWa,GAAG,CAACK,IAAJ,CAAS,EAAT,CAAX;AACD,CA5CD;;AA8CA,MAAMd,sBAAsB,GAAG,CAACzC,GAAD,YAAsB;EAAA,IAAhB;IAAEc;EAAF,CAAgB;;EACnD,IAAI,CAACA,OAAL,EAAc;IACZ;EACD;;EAEDd,GAAG,CAACqC,MAAJ,CAAW,EAAX;EACA,MAAMmB,GAAG,GAAG1C,OAAO,KAAK,CAAZ,GAAgB,SAAhB,GAA4B,UAAxC;EACA,MAAM2C,EAAE,GAAG3C,OAAO,KAAK,CAAZ,GAAgB,IAAhB,GAAuB,KAAlC;EACAd,GAAG,CAACqC,MAAJ,CAAY,GAAEvB,OAAQ,IAAG0C,GAAI,IAAGC,EAAG,sBAAnC;EACAzD,GAAG,CAACqC,MAAJ,CAAW,8BAAX;AACD,CAVD;;AAYAqB,MAAM,CAACC,OAAP,GAAiB5D,WAAjB"},"metadata":{},"sourceType":"script"}