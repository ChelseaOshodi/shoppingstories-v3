{"ast":null,"code":"const _idealTreePrune = Symbol.for('idealTreePrune');\n\nconst _workspacesEnabled = Symbol.for('workspacesEnabled');\n\nconst _addNodeToTrashList = Symbol.for('addNodeToTrashList');\n\nmodule.exports = cls => class Pruner extends cls {\n  async prune() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // allow the user to set options on the ctor as well.\n    // XXX: deprecate separate method options objects.\n    options = { ...this.options,\n      ...options\n    };\n    await this.buildIdealTree(options);\n\n    this[_idealTreePrune]();\n\n    if (!this[_workspacesEnabled]) {\n      const excludeNodes = this.excludeWorkspacesDependencySet(this.idealTree);\n\n      for (const node of this.idealTree.inventory.values()) {\n        if (node.parent !== null && !node.isProjectRoot && !excludeNodes.has(node)) {\n          this[_addNodeToTrashList](node);\n        }\n      }\n    }\n\n    return this.reify(options);\n  }\n\n};","map":{"version":3,"names":["_idealTreePrune","Symbol","for","_workspacesEnabled","_addNodeToTrashList","module","exports","cls","Pruner","prune","options","buildIdealTree","excludeNodes","excludeWorkspacesDependencySet","idealTree","node","inventory","values","parent","isProjectRoot","has","reify"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/@npmcli/arborist/lib/arborist/pruner.js"],"sourcesContent":["const _idealTreePrune = Symbol.for('idealTreePrune')\nconst _workspacesEnabled = Symbol.for('workspacesEnabled')\nconst _addNodeToTrashList = Symbol.for('addNodeToTrashList')\n\nmodule.exports = cls => class Pruner extends cls {\n  async prune (options = {}) {\n    // allow the user to set options on the ctor as well.\n    // XXX: deprecate separate method options objects.\n    options = { ...this.options, ...options }\n\n    await this.buildIdealTree(options)\n\n    this[_idealTreePrune]()\n\n    if (!this[_workspacesEnabled]) {\n      const excludeNodes = this.excludeWorkspacesDependencySet(this.idealTree)\n      for (const node of this.idealTree.inventory.values()) {\n        if (\n          node.parent !== null\n          && !node.isProjectRoot\n          && !excludeNodes.has(node)\n        ) {\n          this[_addNodeToTrashList](node)\n        }\n      }\n    }\n\n    return this.reify(options)\n  }\n}\n"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,MAAM,CAACC,GAAP,CAAW,gBAAX,CAAxB;;AACA,MAAMC,kBAAkB,GAAGF,MAAM,CAACC,GAAP,CAAW,mBAAX,CAA3B;;AACA,MAAME,mBAAmB,GAAGH,MAAM,CAACC,GAAP,CAAW,oBAAX,CAA5B;;AAEAG,MAAM,CAACC,OAAP,GAAiBC,GAAG,IAAI,MAAMC,MAAN,SAAqBD,GAArB,CAAyB;EACpC,MAALE,KAAK,GAAgB;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACzB;IACA;IACAA,OAAO,GAAG,EAAE,GAAG,KAAKA,OAAV;MAAmB,GAAGA;IAAtB,CAAV;IAEA,MAAM,KAAKC,cAAL,CAAoBD,OAApB,CAAN;;IAEA,KAAKV,eAAL;;IAEA,IAAI,CAAC,KAAKG,kBAAL,CAAL,EAA+B;MAC7B,MAAMS,YAAY,GAAG,KAAKC,8BAAL,CAAoC,KAAKC,SAAzC,CAArB;;MACA,KAAK,MAAMC,IAAX,IAAmB,KAAKD,SAAL,CAAeE,SAAf,CAAyBC,MAAzB,EAAnB,EAAsD;QACpD,IACEF,IAAI,CAACG,MAAL,KAAgB,IAAhB,IACG,CAACH,IAAI,CAACI,aADT,IAEG,CAACP,YAAY,CAACQ,GAAb,CAAiBL,IAAjB,CAHN,EAIE;UACA,KAAKX,mBAAL,EAA0BW,IAA1B;QACD;MACF;IACF;;IAED,OAAO,KAAKM,KAAL,CAAWX,OAAX,CAAP;EACD;;AAxB8C,CAAjD"},"metadata":{},"sourceType":"script"}