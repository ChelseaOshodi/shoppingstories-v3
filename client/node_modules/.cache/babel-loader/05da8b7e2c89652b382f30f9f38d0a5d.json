{"ast":null,"code":"const readline = require('readline');\n\nconst opener = require('opener');\n\nfunction print(npm, title, url) {\n  const json = npm.config.get('json');\n  const message = json ? JSON.stringify({\n    title,\n    url\n  }) : `${title}:\\n${url}`;\n  npm.output(message);\n} // Prompt to open URL in browser if possible\n\n\nconst promptOpen = async (npm, url, title, prompt, emitter) => {\n  const browser = npm.config.get('browser');\n  const isInteractive = process.stdin.isTTY === true && process.stdout.isTTY === true;\n\n  try {\n    if (!/^https?:$/.test(new URL(url).protocol)) {\n      throw new Error();\n    }\n  } catch (_) {\n    throw new Error('Invalid URL: ' + url);\n  }\n\n  print(npm, title, url);\n\n  if (browser === false || !isInteractive) {\n    return;\n  }\n\n  const rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n  });\n  const tryOpen = await new Promise(resolve => {\n    rl.on('SIGINT', () => {\n      rl.close();\n      resolve('SIGINT');\n    });\n    rl.question(prompt, () => {\n      resolve(true);\n    });\n\n    if (emitter && emitter.addListener) {\n      emitter.addListener('abort', () => {\n        rl.close(); // clear the prompt line\n\n        npm.output('');\n        resolve(false);\n      });\n    }\n  });\n\n  if (tryOpen === 'SIGINT') {\n    throw new Error('canceled');\n  }\n\n  if (!tryOpen) {\n    return;\n  }\n\n  const command = browser === true ? null : browser;\n  await new Promise((resolve, reject) => {\n    opener(url, {\n      command\n    }, err => {\n      if (err) {\n        return reject(err);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nmodule.exports = promptOpen;","map":{"version":3,"names":["readline","require","opener","print","npm","title","url","json","config","get","message","JSON","stringify","output","promptOpen","prompt","emitter","browser","isInteractive","process","stdin","isTTY","stdout","test","URL","protocol","Error","_","rl","createInterface","input","tryOpen","Promise","resolve","on","close","question","addListener","command","reject","err","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/utils/open-url-prompt.js"],"sourcesContent":["const readline = require('readline')\nconst opener = require('opener')\n\nfunction print (npm, title, url) {\n  const json = npm.config.get('json')\n\n  const message = json ? JSON.stringify({ title, url }) : `${title}:\\n${url}`\n\n  npm.output(message)\n}\n\n// Prompt to open URL in browser if possible\nconst promptOpen = async (npm, url, title, prompt, emitter) => {\n  const browser = npm.config.get('browser')\n  const isInteractive = process.stdin.isTTY === true && process.stdout.isTTY === true\n\n  try {\n    if (!/^https?:$/.test(new URL(url).protocol)) {\n      throw new Error()\n    }\n  } catch (_) {\n    throw new Error('Invalid URL: ' + url)\n  }\n\n  print(npm, title, url)\n\n  if (browser === false || !isInteractive) {\n    return\n  }\n\n  const rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout,\n  })\n\n  const tryOpen = await new Promise(resolve => {\n    rl.on('SIGINT', () => {\n      rl.close()\n      resolve('SIGINT')\n    })\n\n    rl.question(prompt, () => {\n      resolve(true)\n    })\n\n    if (emitter && emitter.addListener) {\n      emitter.addListener('abort', () => {\n        rl.close()\n\n        // clear the prompt line\n        npm.output('')\n\n        resolve(false)\n      })\n    }\n  })\n\n  if (tryOpen === 'SIGINT') {\n    throw new Error('canceled')\n  }\n\n  if (!tryOpen) {\n    return\n  }\n\n  const command = browser === true ? null : browser\n  await new Promise((resolve, reject) => {\n    opener(url, { command }, err => {\n      if (err) {\n        return reject(err)\n      }\n\n      return resolve()\n    })\n  })\n}\n\nmodule.exports = promptOpen\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}