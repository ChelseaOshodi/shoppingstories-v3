{"ast":null,"code":"// don't expand so that we only assemble the set of defaults when needed\nconst configDefs = require('../utils/config/index.js');\n\nconst mkdirp = require('mkdirp-infer-owner');\n\nconst {\n  dirname,\n  resolve\n} = require('path');\n\nconst {\n  promisify\n} = require('util');\n\nconst fs = require('fs');\n\nconst readFile = promisify(fs.readFile);\nconst writeFile = promisify(fs.writeFile);\n\nconst {\n  spawn\n} = require('child_process');\n\nconst {\n  EOL\n} = require('os');\n\nconst ini = require('ini');\n\nconst localeCompare = require('@isaacs/string-locale-compare')('en');\n\nconst rpj = require('read-package-json-fast');\n\nconst log = require('../utils/log-shim.js'); // take an array of `[key, value, k2=v2, k3, v3, ...]` and turn into\n// { key: value, k2: v2, k3: v3 }\n\n\nconst keyValues = args => {\n  const kv = {};\n\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i].split('=');\n    const key = arg.shift();\n    const val = arg.length ? arg.join('=') : i < args.length - 1 ? args[++i] : '';\n    kv[key.trim()] = val.trim();\n  }\n\n  return kv;\n};\n\nconst publicVar = k => {\n  // _password\n  if (k.startsWith('_')) {\n    return false;\n  } // //localhost:8080/:_password\n\n\n  if (k.startsWith('//') && k.includes(':_')) {\n    return false;\n  }\n\n  return true;\n};\n\nconst BaseCommand = require('../base-command.js');\n\nclass Config extends BaseCommand {\n  static description = 'Manage the npm configuration files';\n  static name = 'config';\n  static usage = ['set <key>=<value> [<key>=<value> ...]', 'get [<key> [<key> ...]]', 'delete <key> [<key> ...]', 'list [--json]', 'edit'];\n  static params = ['json', 'global', 'editor', 'location', 'long'];\n  static ignoreImplicitWorkspace = false;\n\n  async completion(opts) {\n    const argv = opts.conf.argv.remain;\n\n    if (argv[1] !== 'config') {\n      argv.unshift('config');\n    }\n\n    if (argv.length === 2) {\n      const cmds = ['get', 'set', 'delete', 'ls', 'rm', 'edit'];\n\n      if (opts.partialWord !== 'l') {\n        cmds.push('list');\n      }\n\n      return cmds;\n    }\n\n    const action = argv[2];\n\n    switch (action) {\n      case 'set':\n        // todo: complete with valid values, if possible.\n        if (argv.length > 3) {\n          return [];\n        }\n\n      // fallthrough\n\n      /* eslint no-fallthrough:0 */\n\n      case 'get':\n      case 'delete':\n      case 'rm':\n        return Object.keys(configDefs.definitions);\n\n      case 'edit':\n      case 'list':\n      case 'ls':\n      default:\n        return [];\n    }\n  }\n\n  async execWorkspaces(args, filters) {\n    log.warn('config', 'This command does not support workspaces.');\n    return this.exec(args);\n  }\n\n  async exec(_ref) {\n    let [action, ...args] = _ref;\n    log.disableProgress();\n\n    try {\n      switch (action) {\n        case 'set':\n          await this.set(args);\n          break;\n\n        case 'get':\n          await this.get(args);\n          break;\n\n        case 'delete':\n        case 'rm':\n        case 'del':\n          await this.del(args);\n          break;\n\n        case 'list':\n        case 'ls':\n          await (this.npm.flatOptions.json ? this.listJson() : this.list());\n          break;\n\n        case 'edit':\n          await this.edit();\n          break;\n\n        default:\n          throw this.usageError();\n      }\n    } finally {\n      log.enableProgress();\n    }\n  }\n\n  async set(args) {\n    if (!args.length) {\n      throw this.usageError();\n    }\n\n    const where = this.npm.flatOptions.location;\n\n    for (const [key, val] of Object.entries(keyValues(args))) {\n      log.info('config', 'set %j %j', key, val);\n      this.npm.config.set(key, val || '', where);\n\n      if (!this.npm.config.validate(where)) {\n        log.warn('config', 'omitting invalid config values');\n      }\n    }\n\n    await this.npm.config.save(where);\n  }\n\n  async get(keys) {\n    if (!keys.length) {\n      return this.list();\n    }\n\n    const out = [];\n\n    for (const key of keys) {\n      if (!publicVar(key)) {\n        throw new Error(`The ${key} option is protected, and cannot be retrieved in this way`);\n      }\n\n      const pref = keys.length > 1 ? `${key}=` : '';\n      out.push(pref + this.npm.config.get(key));\n    }\n\n    this.npm.output(out.join('\\n'));\n  }\n\n  async del(keys) {\n    if (!keys.length) {\n      throw this.usageError();\n    }\n\n    const where = this.npm.flatOptions.location;\n\n    for (const key of keys) {\n      this.npm.config.delete(key, where);\n    }\n\n    await this.npm.config.save(where);\n  }\n\n  async edit() {\n    const e = this.npm.flatOptions.editor;\n    const where = this.npm.flatOptions.location;\n    const file = this.npm.config.data.get(where).source; // save first, just to make sure it's synced up\n    // this also removes all the comments from the last time we edited it.\n\n    await this.npm.config.save(where);\n    const data = (await readFile(file, 'utf8').catch(() => '')).replace(/\\r\\n/g, '\\n');\n    const entries = Object.entries(configDefs.defaults);\n    const defData = entries.reduce((str, _ref2) => {\n      let [key, val] = _ref2;\n      const obj = {\n        [key]: val\n      };\n      const i = ini.stringify(obj).replace(/\\r\\n/g, '\\n') // normalizes output from ini.stringify\n      .replace(/\\n$/m, '').replace(/^/g, '; ').replace(/\\n/g, '\\n; ').split('\\n');\n      return str + '\\n' + i;\n    }, '');\n    const tmpData = `;;;;\n; npm ${where}config file: ${file}\n; this is a simple ini-formatted file\n; lines that start with semi-colons are comments\n; run \\`npm help 7 config\\` for documentation of the various options\n;\n; Configs like \\`@scope:registry\\` map a scope to a given registry url.\n;\n; Configs like \\`//<hostname>/:_authToken\\` are auth that is restricted\n; to the registry host specified.\n\n${data.split('\\n').sort(localeCompare).join('\\n').trim()}\n\n;;;;\n; all available options shown below with default values\n;;;;\n\n${defData}\n`.split('\\n').join(EOL);\n    await mkdirp(dirname(file));\n    await writeFile(file, tmpData, 'utf8');\n    await new Promise((resolve, reject) => {\n      const [bin, ...args] = e.split(/\\s+/);\n      const editor = spawn(bin, [...args, file], {\n        stdio: 'inherit'\n      });\n      editor.on('exit', code => {\n        if (code) {\n          return reject(new Error(`editor process exited with code: ${code}`));\n        }\n\n        return resolve();\n      });\n    });\n  }\n\n  async list() {\n    const msg = []; // long does not have a flattener\n\n    const long = this.npm.config.get('long');\n\n    for (const [where, {\n      data,\n      source\n    }] of this.npm.config.data.entries()) {\n      if (where === 'default' && !long) {\n        continue;\n      }\n\n      const keys = Object.keys(data).sort(localeCompare);\n\n      if (!keys.length) {\n        continue;\n      }\n\n      msg.push(`; \"${where}\" config from ${source}`, '');\n\n      for (const k of keys) {\n        const v = publicVar(k) ? JSON.stringify(data[k]) : '(protected)';\n        const src = this.npm.config.find(k);\n        const overridden = src !== where;\n        msg.push((overridden ? '; ' : '') + `${k} = ${v} ${overridden ? `; overridden by ${src}` : ''}`);\n      }\n\n      msg.push('');\n    }\n\n    if (!long) {\n      msg.push(`; node bin location = ${process.execPath}`, `; node version = ${process.version}`, `; npm local prefix = ${this.npm.localPrefix}`, `; npm version = ${this.npm.version}`, `; cwd = ${process.cwd()}`, `; HOME = ${process.env.HOME}`, '; Run `npm config ls -l` to show all defaults.');\n      msg.push('');\n    }\n\n    if (!this.npm.global) {\n      const pkgPath = resolve(this.npm.prefix, 'package.json');\n      const pkg = await rpj(pkgPath).catch(() => ({}));\n\n      if (pkg.publishConfig) {\n        msg.push(`; \"publishConfig\" from ${pkgPath}`);\n        msg.push('; This set of config values will be used at publish-time.', '');\n        const pkgKeys = Object.keys(pkg.publishConfig).sort(localeCompare);\n\n        for (const k of pkgKeys) {\n          const v = publicVar(k) ? JSON.stringify(pkg.publishConfig[k]) : '(protected)';\n          msg.push(`${k} = ${v}`);\n        }\n\n        msg.push('');\n      }\n    }\n\n    this.npm.output(msg.join('\\n').trim());\n  }\n\n  async listJson() {\n    const publicConf = {};\n\n    for (const key in this.npm.config.list[0]) {\n      if (!publicVar(key)) {\n        continue;\n      }\n\n      publicConf[key] = this.npm.config.get(key);\n    }\n\n    this.npm.output(JSON.stringify(publicConf, null, 2));\n  }\n\n}\n\nmodule.exports = Config;","map":{"version":3,"names":["configDefs","require","mkdirp","dirname","resolve","promisify","fs","readFile","writeFile","spawn","EOL","ini","localeCompare","rpj","log","keyValues","args","kv","i","length","arg","split","key","shift","val","join","trim","publicVar","k","startsWith","includes","BaseCommand","Config","description","name","usage","params","ignoreImplicitWorkspace","completion","opts","argv","conf","remain","unshift","cmds","partialWord","push","action","Object","keys","definitions","execWorkspaces","filters","warn","exec","disableProgress","set","get","del","npm","flatOptions","json","listJson","list","edit","usageError","enableProgress","where","location","entries","info","config","validate","save","out","Error","pref","output","delete","e","editor","file","data","source","catch","replace","defaults","defData","reduce","str","obj","stringify","tmpData","sort","Promise","reject","bin","stdio","on","code","msg","long","v","JSON","src","find","overridden","process","execPath","version","localPrefix","cwd","env","HOME","global","pkgPath","prefix","pkg","publishConfig","pkgKeys","publicConf","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/commands/config.js"],"sourcesContent":["// don't expand so that we only assemble the set of defaults when needed\nconst configDefs = require('../utils/config/index.js')\n\nconst mkdirp = require('mkdirp-infer-owner')\nconst { dirname, resolve } = require('path')\nconst { promisify } = require('util')\nconst fs = require('fs')\nconst readFile = promisify(fs.readFile)\nconst writeFile = promisify(fs.writeFile)\nconst { spawn } = require('child_process')\nconst { EOL } = require('os')\nconst ini = require('ini')\nconst localeCompare = require('@isaacs/string-locale-compare')('en')\nconst rpj = require('read-package-json-fast')\nconst log = require('../utils/log-shim.js')\n\n// take an array of `[key, value, k2=v2, k3, v3, ...]` and turn into\n// { key: value, k2: v2, k3: v3 }\nconst keyValues = args => {\n  const kv = {}\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i].split('=')\n    const key = arg.shift()\n    const val = arg.length ? arg.join('=')\n      : i < args.length - 1 ? args[++i]\n      : ''\n    kv[key.trim()] = val.trim()\n  }\n  return kv\n}\n\nconst publicVar = k => {\n  // _password\n  if (k.startsWith('_')) {\n    return false\n  }\n  // //localhost:8080/:_password\n  if (k.startsWith('//') && k.includes(':_')) {\n    return false\n  }\n  return true\n}\n\nconst BaseCommand = require('../base-command.js')\nclass Config extends BaseCommand {\n  static description = 'Manage the npm configuration files'\n  static name = 'config'\n  static usage = [\n    'set <key>=<value> [<key>=<value> ...]',\n    'get [<key> [<key> ...]]',\n    'delete <key> [<key> ...]',\n    'list [--json]',\n    'edit',\n  ]\n\n  static params = [\n    'json',\n    'global',\n    'editor',\n    'location',\n    'long',\n  ]\n\n  static ignoreImplicitWorkspace = false\n\n  async completion (opts) {\n    const argv = opts.conf.argv.remain\n    if (argv[1] !== 'config') {\n      argv.unshift('config')\n    }\n\n    if (argv.length === 2) {\n      const cmds = ['get', 'set', 'delete', 'ls', 'rm', 'edit']\n      if (opts.partialWord !== 'l') {\n        cmds.push('list')\n      }\n\n      return cmds\n    }\n\n    const action = argv[2]\n    switch (action) {\n      case 'set':\n        // todo: complete with valid values, if possible.\n        if (argv.length > 3) {\n          return []\n        }\n\n        // fallthrough\n        /* eslint no-fallthrough:0 */\n      case 'get':\n      case 'delete':\n      case 'rm':\n        return Object.keys(configDefs.definitions)\n      case 'edit':\n      case 'list':\n      case 'ls':\n      default:\n        return []\n    }\n  }\n\n  async execWorkspaces (args, filters) {\n    log.warn('config', 'This command does not support workspaces.')\n    return this.exec(args)\n  }\n\n  async exec ([action, ...args]) {\n    log.disableProgress()\n    try {\n      switch (action) {\n        case 'set':\n          await this.set(args)\n          break\n        case 'get':\n          await this.get(args)\n          break\n        case 'delete':\n        case 'rm':\n        case 'del':\n          await this.del(args)\n          break\n        case 'list':\n        case 'ls':\n          await (this.npm.flatOptions.json ? this.listJson() : this.list())\n          break\n        case 'edit':\n          await this.edit()\n          break\n        default:\n          throw this.usageError()\n      }\n    } finally {\n      log.enableProgress()\n    }\n  }\n\n  async set (args) {\n    if (!args.length) {\n      throw this.usageError()\n    }\n\n    const where = this.npm.flatOptions.location\n    for (const [key, val] of Object.entries(keyValues(args))) {\n      log.info('config', 'set %j %j', key, val)\n      this.npm.config.set(key, val || '', where)\n      if (!this.npm.config.validate(where)) {\n        log.warn('config', 'omitting invalid config values')\n      }\n    }\n\n    await this.npm.config.save(where)\n  }\n\n  async get (keys) {\n    if (!keys.length) {\n      return this.list()\n    }\n\n    const out = []\n    for (const key of keys) {\n      if (!publicVar(key)) {\n        throw new Error(`The ${key} option is protected, and cannot be retrieved in this way`)\n      }\n\n      const pref = keys.length > 1 ? `${key}=` : ''\n      out.push(pref + this.npm.config.get(key))\n    }\n    this.npm.output(out.join('\\n'))\n  }\n\n  async del (keys) {\n    if (!keys.length) {\n      throw this.usageError()\n    }\n\n    const where = this.npm.flatOptions.location\n    for (const key of keys) {\n      this.npm.config.delete(key, where)\n    }\n    await this.npm.config.save(where)\n  }\n\n  async edit () {\n    const e = this.npm.flatOptions.editor\n    const where = this.npm.flatOptions.location\n    const file = this.npm.config.data.get(where).source\n\n    // save first, just to make sure it's synced up\n    // this also removes all the comments from the last time we edited it.\n    await this.npm.config.save(where)\n\n    const data = (\n      await readFile(file, 'utf8').catch(() => '')\n    ).replace(/\\r\\n/g, '\\n')\n    const entries = Object.entries(configDefs.defaults)\n    const defData = entries.reduce((str, [key, val]) => {\n      const obj = { [key]: val }\n      const i = ini.stringify(obj)\n        .replace(/\\r\\n/g, '\\n') // normalizes output from ini.stringify\n        .replace(/\\n$/m, '')\n        .replace(/^/g, '; ')\n        .replace(/\\n/g, '\\n; ')\n        .split('\\n')\n      return str + '\\n' + i\n    }, '')\n\n    const tmpData = `;;;;\n; npm ${where}config file: ${file}\n; this is a simple ini-formatted file\n; lines that start with semi-colons are comments\n; run \\`npm help 7 config\\` for documentation of the various options\n;\n; Configs like \\`@scope:registry\\` map a scope to a given registry url.\n;\n; Configs like \\`//<hostname>/:_authToken\\` are auth that is restricted\n; to the registry host specified.\n\n${data.split('\\n').sort(localeCompare).join('\\n').trim()}\n\n;;;;\n; all available options shown below with default values\n;;;;\n\n${defData}\n`.split('\\n').join(EOL)\n    await mkdirp(dirname(file))\n    await writeFile(file, tmpData, 'utf8')\n    await new Promise((resolve, reject) => {\n      const [bin, ...args] = e.split(/\\s+/)\n      const editor = spawn(bin, [...args, file], { stdio: 'inherit' })\n      editor.on('exit', (code) => {\n        if (code) {\n          return reject(new Error(`editor process exited with code: ${code}`))\n        }\n        return resolve()\n      })\n    })\n  }\n\n  async list () {\n    const msg = []\n    // long does not have a flattener\n    const long = this.npm.config.get('long')\n    for (const [where, { data, source }] of this.npm.config.data.entries()) {\n      if (where === 'default' && !long) {\n        continue\n      }\n\n      const keys = Object.keys(data).sort(localeCompare)\n      if (!keys.length) {\n        continue\n      }\n\n      msg.push(`; \"${where}\" config from ${source}`, '')\n      for (const k of keys) {\n        const v = publicVar(k) ? JSON.stringify(data[k]) : '(protected)'\n        const src = this.npm.config.find(k)\n        const overridden = src !== where\n        msg.push((overridden ? '; ' : '') +\n          `${k} = ${v} ${overridden ? `; overridden by ${src}` : ''}`)\n      }\n      msg.push('')\n    }\n\n    if (!long) {\n      msg.push(\n        `; node bin location = ${process.execPath}`,\n        `; node version = ${process.version}`,\n        `; npm local prefix = ${this.npm.localPrefix}`,\n        `; npm version = ${this.npm.version}`,\n        `; cwd = ${process.cwd()}`,\n        `; HOME = ${process.env.HOME}`,\n        '; Run `npm config ls -l` to show all defaults.'\n      )\n      msg.push('')\n    }\n\n    if (!this.npm.global) {\n      const pkgPath = resolve(this.npm.prefix, 'package.json')\n      const pkg = await rpj(pkgPath).catch(() => ({}))\n\n      if (pkg.publishConfig) {\n        msg.push(`; \"publishConfig\" from ${pkgPath}`)\n        msg.push('; This set of config values will be used at publish-time.', '')\n        const pkgKeys = Object.keys(pkg.publishConfig).sort(localeCompare)\n        for (const k of pkgKeys) {\n          const v = publicVar(k) ? JSON.stringify(pkg.publishConfig[k]) : '(protected)'\n          msg.push(`${k} = ${v}`)\n        }\n        msg.push('')\n      }\n    }\n\n    this.npm.output(msg.join('\\n').trim())\n  }\n\n  async listJson () {\n    const publicConf = {}\n    for (const key in this.npm.config.list[0]) {\n      if (!publicVar(key)) {\n        continue\n      }\n\n      publicConf[key] = this.npm.config.get(key)\n    }\n    this.npm.output(JSON.stringify(publicConf, null, 2))\n  }\n}\n\nmodule.exports = Config\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}