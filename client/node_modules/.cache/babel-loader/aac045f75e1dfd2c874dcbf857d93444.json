{"ast":null,"code":"const git = require('@npmcli/git');\n\nmodule.exports = (version, opts) => {\n  const {\n    commitHooks,\n    allowSameVersion,\n    signGitCommit,\n    message\n  } = opts;\n  const args = ['commit'];\n\n  if (commitHooks === false) {\n    args.push('-n');\n  }\n\n  if (allowSameVersion) {\n    args.push('--allow-empty');\n  }\n\n  if (signGitCommit) {\n    args.push('-S');\n  }\n\n  args.push('-m');\n  return git.spawn([...args, message.replace(/%s/g, version)], opts);\n};","map":{"version":3,"names":["git","require","module","exports","version","opts","commitHooks","allowSameVersion","signGitCommit","message","args","push","spawn","replace"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/libnpmversion/lib/commit.js"],"sourcesContent":["const git = require('@npmcli/git')\n\nmodule.exports = (version, opts) => {\n  const { commitHooks, allowSameVersion, signGitCommit, message } = opts\n  const args = ['commit']\n  if (commitHooks === false) {\n    args.push('-n')\n  }\n  if (allowSameVersion) {\n    args.push('--allow-empty')\n  }\n  if (signGitCommit) {\n    args.push('-S')\n  }\n  args.push('-m')\n  return git.spawn([...args, message.replace(/%s/g, version)], opts)\n}\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,aAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAACC,OAAD,EAAUC,IAAV,KAAmB;EAClC,MAAM;IAAEC,WAAF;IAAeC,gBAAf;IAAiCC,aAAjC;IAAgDC;EAAhD,IAA4DJ,IAAlE;EACA,MAAMK,IAAI,GAAG,CAAC,QAAD,CAAb;;EACA,IAAIJ,WAAW,KAAK,KAApB,EAA2B;IACzBI,IAAI,CAACC,IAAL,CAAU,IAAV;EACD;;EACD,IAAIJ,gBAAJ,EAAsB;IACpBG,IAAI,CAACC,IAAL,CAAU,eAAV;EACD;;EACD,IAAIH,aAAJ,EAAmB;IACjBE,IAAI,CAACC,IAAL,CAAU,IAAV;EACD;;EACDD,IAAI,CAACC,IAAL,CAAU,IAAV;EACA,OAAOX,GAAG,CAACY,KAAJ,CAAU,CAAC,GAAGF,IAAJ,EAAUD,OAAO,CAACI,OAAR,CAAgB,KAAhB,EAAuBT,OAAvB,CAAV,CAAV,EAAsDC,IAAtD,CAAP;AACD,CAdD"},"metadata":{},"sourceType":"script"}