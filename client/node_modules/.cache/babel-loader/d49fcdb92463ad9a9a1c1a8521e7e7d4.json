{"ast":null,"code":"const liborg = require('libnpmorg');\n\nconst otplease = require('../utils/otplease.js');\n\nconst Table = require('cli-table3');\n\nconst BaseCommand = require('../base-command.js');\n\nclass Org extends BaseCommand {\n  static description = 'Manage orgs';\n  static name = 'org';\n  static usage = ['set orgname username [developer | admin | owner]', 'rm orgname username', 'ls orgname [<username>]'];\n  static params = ['registry', 'otp', 'json', 'parseable'];\n  static ignoreImplicitWorkspace = true;\n\n  async completion(opts) {\n    const argv = opts.conf.argv.remain;\n\n    if (argv.length === 2) {\n      return ['set', 'rm', 'ls'];\n    }\n\n    switch (argv[2]) {\n      case 'ls':\n      case 'add':\n      case 'rm':\n      case 'set':\n        return [];\n\n      default:\n        throw new Error(argv[2] + ' not recognized');\n    }\n  }\n\n  async exec(_ref, cb) {\n    let [cmd, orgname, username, role] = _ref;\n    return otplease(this.npm, { ...this.npm.flatOptions\n    }, opts => {\n      switch (cmd) {\n        case 'add':\n        case 'set':\n          return this.set(orgname, username, role, opts);\n\n        case 'rm':\n          return this.rm(orgname, username, opts);\n\n        case 'ls':\n          return this.ls(orgname, username, opts);\n\n        default:\n          throw this.usageError();\n      }\n    });\n  }\n\n  set(org, user, role, opts) {\n    role = role || 'developer';\n\n    if (!org) {\n      throw new Error('First argument `orgname` is required.');\n    }\n\n    if (!user) {\n      throw new Error('Second argument `username` is required.');\n    }\n\n    if (!['owner', 'admin', 'developer'].find(x => x === role)) {\n      throw new Error(\n      /* eslint-disable-next-line max-len */\n      'Third argument `role` must be one of `owner`, `admin`, or `developer`, with `developer` being the default value if omitted.');\n    }\n\n    return liborg.set(org, user, role, opts).then(memDeets => {\n      if (opts.json) {\n        this.npm.output(JSON.stringify(memDeets, null, 2));\n      } else if (opts.parseable) {\n        this.npm.output(['org', 'orgsize', 'user', 'role'].join('\\t'));\n        this.npm.output([memDeets.org.name, memDeets.org.size, memDeets.user, memDeets.role].join('\\t'));\n      } else if (!this.npm.silent) {\n        this.npm.output(`Added ${memDeets.user} as ${memDeets.role} to ${memDeets.org.name}. You now have ${memDeets.org.size} member${memDeets.org.size === 1 ? '' : 's'} in this org.`);\n      }\n\n      return memDeets;\n    });\n  }\n\n  rm(org, user, opts) {\n    if (!org) {\n      throw new Error('First argument `orgname` is required.');\n    }\n\n    if (!user) {\n      throw new Error('Second argument `username` is required.');\n    }\n\n    return liborg.rm(org, user, opts).then(() => {\n      return liborg.ls(org, opts);\n    }).then(roster => {\n      user = user.replace(/^[~@]?/, '');\n      org = org.replace(/^[~@]?/, '');\n      const userCount = Object.keys(roster).length;\n\n      if (opts.json) {\n        this.npm.output(JSON.stringify({\n          user,\n          org,\n          userCount,\n          deleted: true\n        }));\n      } else if (opts.parseable) {\n        this.npm.output(['user', 'org', 'userCount', 'deleted'].join('\\t'));\n        this.npm.output([user, org, userCount, true].join('\\t'));\n      } else if (!this.npm.silent) {\n        this.npm.output(`Successfully removed ${user} from ${org}. You now have ${userCount} member${userCount === 1 ? '' : 's'} in this org.`);\n      }\n    });\n  }\n\n  ls(org, user, opts) {\n    if (!org) {\n      throw new Error('First argument `orgname` is required.');\n    }\n\n    return liborg.ls(org, opts).then(roster => {\n      if (user) {\n        const newRoster = {};\n\n        if (roster[user]) {\n          newRoster[user] = roster[user];\n        }\n\n        roster = newRoster;\n      }\n\n      if (opts.json) {\n        this.npm.output(JSON.stringify(roster, null, 2));\n      } else if (opts.parseable) {\n        this.npm.output(['user', 'role'].join('\\t'));\n        Object.keys(roster).forEach(user => {\n          this.npm.output([user, roster[user]].join('\\t'));\n        });\n      } else if (!this.npm.silent) {\n        const table = new Table({\n          head: ['user', 'role']\n        });\n        Object.keys(roster).sort().forEach(user => {\n          table.push([user, roster[user]]);\n        });\n        this.npm.output(table.toString());\n      }\n    });\n  }\n\n}\n\nmodule.exports = Org;","map":{"version":3,"names":["liborg","require","otplease","Table","BaseCommand","Org","description","name","usage","params","ignoreImplicitWorkspace","completion","opts","argv","conf","remain","length","Error","exec","cb","cmd","orgname","username","role","npm","flatOptions","set","rm","ls","usageError","org","user","find","x","then","memDeets","json","output","JSON","stringify","parseable","join","size","silent","roster","replace","userCount","Object","keys","deleted","newRoster","forEach","table","head","sort","push","toString","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/commands/org.js"],"sourcesContent":["const liborg = require('libnpmorg')\nconst otplease = require('../utils/otplease.js')\nconst Table = require('cli-table3')\nconst BaseCommand = require('../base-command.js')\n\nclass Org extends BaseCommand {\n  static description = 'Manage orgs'\n  static name = 'org'\n  static usage = [\n    'set orgname username [developer | admin | owner]',\n    'rm orgname username',\n    'ls orgname [<username>]',\n  ]\n\n  static params = ['registry', 'otp', 'json', 'parseable']\n  static ignoreImplicitWorkspace = true\n\n  async completion (opts) {\n    const argv = opts.conf.argv.remain\n    if (argv.length === 2) {\n      return ['set', 'rm', 'ls']\n    }\n\n    switch (argv[2]) {\n      case 'ls':\n      case 'add':\n      case 'rm':\n      case 'set':\n        return []\n      default:\n        throw new Error(argv[2] + ' not recognized')\n    }\n  }\n\n  async exec ([cmd, orgname, username, role], cb) {\n    return otplease(this.npm, {\n      ...this.npm.flatOptions,\n    }, opts => {\n      switch (cmd) {\n        case 'add':\n        case 'set':\n          return this.set(orgname, username, role, opts)\n        case 'rm':\n          return this.rm(orgname, username, opts)\n        case 'ls':\n          return this.ls(orgname, username, opts)\n        default:\n          throw this.usageError()\n      }\n    })\n  }\n\n  set (org, user, role, opts) {\n    role = role || 'developer'\n    if (!org) {\n      throw new Error('First argument `orgname` is required.')\n    }\n\n    if (!user) {\n      throw new Error('Second argument `username` is required.')\n    }\n\n    if (!['owner', 'admin', 'developer'].find(x => x === role)) {\n      throw new Error(\n        /* eslint-disable-next-line max-len */\n        'Third argument `role` must be one of `owner`, `admin`, or `developer`, with `developer` being the default value if omitted.'\n      )\n    }\n\n    return liborg.set(org, user, role, opts).then(memDeets => {\n      if (opts.json) {\n        this.npm.output(JSON.stringify(memDeets, null, 2))\n      } else if (opts.parseable) {\n        this.npm.output(['org', 'orgsize', 'user', 'role'].join('\\t'))\n        this.npm.output(\n          [memDeets.org.name, memDeets.org.size, memDeets.user, memDeets.role].join('\\t')\n        )\n      } else if (!this.npm.silent) {\n        this.npm.output(\n          `Added ${memDeets.user} as ${memDeets.role} to ${memDeets.org.name}. You now have ${\n            memDeets.org.size\n          } member${memDeets.org.size === 1 ? '' : 's'} in this org.`\n        )\n      }\n\n      return memDeets\n    })\n  }\n\n  rm (org, user, opts) {\n    if (!org) {\n      throw new Error('First argument `orgname` is required.')\n    }\n\n    if (!user) {\n      throw new Error('Second argument `username` is required.')\n    }\n\n    return liborg\n      .rm(org, user, opts)\n      .then(() => {\n        return liborg.ls(org, opts)\n      })\n      .then(roster => {\n        user = user.replace(/^[~@]?/, '')\n        org = org.replace(/^[~@]?/, '')\n        const userCount = Object.keys(roster).length\n        if (opts.json) {\n          this.npm.output(\n            JSON.stringify({\n              user,\n              org,\n              userCount,\n              deleted: true,\n            })\n          )\n        } else if (opts.parseable) {\n          this.npm.output(['user', 'org', 'userCount', 'deleted'].join('\\t'))\n          this.npm.output([user, org, userCount, true].join('\\t'))\n        } else if (!this.npm.silent) {\n          this.npm.output(\n            `Successfully removed ${user} from ${org}. You now have ${userCount} member${\n              userCount === 1 ? '' : 's'\n            } in this org.`\n          )\n        }\n      })\n  }\n\n  ls (org, user, opts) {\n    if (!org) {\n      throw new Error('First argument `orgname` is required.')\n    }\n\n    return liborg.ls(org, opts).then(roster => {\n      if (user) {\n        const newRoster = {}\n        if (roster[user]) {\n          newRoster[user] = roster[user]\n        }\n\n        roster = newRoster\n      }\n      if (opts.json) {\n        this.npm.output(JSON.stringify(roster, null, 2))\n      } else if (opts.parseable) {\n        this.npm.output(['user', 'role'].join('\\t'))\n        Object.keys(roster).forEach(user => {\n          this.npm.output([user, roster[user]].join('\\t'))\n        })\n      } else if (!this.npm.silent) {\n        const table = new Table({ head: ['user', 'role'] })\n        Object.keys(roster)\n          .sort()\n          .forEach(user => {\n            table.push([user, roster[user]])\n          })\n        this.npm.output(table.toString())\n      }\n    })\n  }\n}\nmodule.exports = Org\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}