{"ast":null,"code":"const defLimit = require('os').cpus().length;\n\nconst callLimit = function (queue) {\n  let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defLimit;\n  return new Promise((res, rej) => {\n    let active = 0;\n    let current = 0;\n    const results = [];\n    let rejected = false;\n\n    const reject = er => {\n      if (rejected) return;\n      rejected = true;\n      rej(er);\n    };\n\n    let resolved = false;\n\n    const resolve = () => {\n      if (resolved || active > 0) return;\n      resolved = true;\n      res(results);\n    };\n\n    const run = () => {\n      const c = current++;\n\n      if (c >= queue.length) {\n        return resolve();\n      }\n\n      active++;\n      results[c] = queue[c]().then(result => {\n        active--;\n        results[c] = result;\n        run();\n        return result;\n      }, reject);\n    };\n\n    for (let i = 0; i < limit; i++) {\n      run();\n    }\n  });\n};\n\nmodule.exports = callLimit;","map":{"version":3,"names":["defLimit","require","cpus","length","callLimit","queue","limit","Promise","res","rej","active","current","results","rejected","reject","er","resolved","resolve","run","c","then","result","i","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/promise-call-limit/index.js"],"sourcesContent":["const defLimit = require('os').cpus().length\nconst callLimit = (queue, limit = defLimit) => new Promise((res, rej) => {\n  let active = 0\n  let current = 0\n  const results = []\n\n  let rejected = false\n  const reject = er => {\n    if (rejected)\n      return\n    rejected = true\n    rej(er)\n  }\n\n  let resolved = false\n  const resolve = () => {\n    if (resolved || active > 0)\n      return\n    resolved = true\n    res(results)\n  }\n\n  const run = () => {\n    const c = current++\n    if (c >= queue.length) {\n      return resolve()\n    }\n\n    active ++\n    results[c] = queue[c]().then(result => {\n      active --\n      results[c] = result\n      run()\n      return result\n    }, reject)\n  }\n\n  for (let i = 0; i < limit; i++) {\n    run()\n  }\n})\n\nmodule.exports = callLimit\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcC,IAAd,GAAqBC,MAAtC;;AACA,MAAMC,SAAS,GAAG,UAACC,KAAD;EAAA,IAAQC,KAAR,uEAAgBN,QAAhB;EAAA,OAA6B,IAAIO,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;IACvE,IAAIC,MAAM,GAAG,CAAb;IACA,IAAIC,OAAO,GAAG,CAAd;IACA,MAAMC,OAAO,GAAG,EAAhB;IAEA,IAAIC,QAAQ,GAAG,KAAf;;IACA,MAAMC,MAAM,GAAGC,EAAE,IAAI;MACnB,IAAIF,QAAJ,EACE;MACFA,QAAQ,GAAG,IAAX;MACAJ,GAAG,CAACM,EAAD,CAAH;IACD,CALD;;IAOA,IAAIC,QAAQ,GAAG,KAAf;;IACA,MAAMC,OAAO,GAAG,MAAM;MACpB,IAAID,QAAQ,IAAIN,MAAM,GAAG,CAAzB,EACE;MACFM,QAAQ,GAAG,IAAX;MACAR,GAAG,CAACI,OAAD,CAAH;IACD,CALD;;IAOA,MAAMM,GAAG,GAAG,MAAM;MAChB,MAAMC,CAAC,GAAGR,OAAO,EAAjB;;MACA,IAAIQ,CAAC,IAAId,KAAK,CAACF,MAAf,EAAuB;QACrB,OAAOc,OAAO,EAAd;MACD;;MAEDP,MAAM;MACNE,OAAO,CAACO,CAAD,CAAP,GAAad,KAAK,CAACc,CAAD,CAAL,GAAWC,IAAX,CAAgBC,MAAM,IAAI;QACrCX,MAAM;QACNE,OAAO,CAACO,CAAD,CAAP,GAAaE,MAAb;QACAH,GAAG;QACH,OAAOG,MAAP;MACD,CALY,EAKVP,MALU,CAAb;IAMD,CAbD;;IAeA,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,KAApB,EAA2BgB,CAAC,EAA5B,EAAgC;MAC9BJ,GAAG;IACJ;EACF,CAvC8C,CAA7B;AAAA,CAAlB;;AAyCAK,MAAM,CAACC,OAAP,GAAiBpB,SAAjB"},"metadata":{},"sourceType":"script"}