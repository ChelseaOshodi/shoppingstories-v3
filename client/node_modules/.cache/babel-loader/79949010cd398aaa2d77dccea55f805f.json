{"ast":null,"code":"// emits 'log' events on the process\nconst LEVELS = ['notice', 'error', 'warn', 'info', 'verbose', 'http', 'silly', 'pause', 'resume'];\n\nconst log = level => function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return process.emit('log', level, ...args);\n};\n\nconst logger = {};\n\nfor (const level of LEVELS) {\n  logger[level] = log(level);\n}\n\nlogger.LEVELS = LEVELS;\nmodule.exports = logger;","map":{"version":3,"names":["LEVELS","log","level","args","process","emit","logger","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/proc-log/lib/index.js"],"sourcesContent":["// emits 'log' events on the process\nconst LEVELS = [\n  'notice',\n  'error',\n  'warn',\n  'info',\n  'verbose',\n  'http',\n  'silly',\n  'pause',\n  'resume',\n]\n\nconst log = level => (...args) => process.emit('log', level, ...args)\n\nconst logger = {}\nfor (const level of LEVELS) {\n  logger[level] = log(level)\n}\n\nlogger.LEVELS = LEVELS\n\nmodule.exports = logger\n"],"mappings":"AAAA;AACA,MAAMA,MAAM,GAAG,CACb,QADa,EAEb,OAFa,EAGb,MAHa,EAIb,MAJa,EAKb,SALa,EAMb,MANa,EAOb,OAPa,EAQb,OARa,EASb,QATa,CAAf;;AAYA,MAAMC,GAAG,GAAGC,KAAK,IAAI;EAAA,kCAAIC,IAAJ;IAAIA,IAAJ;EAAA;;EAAA,OAAaC,OAAO,CAACC,IAAR,CAAa,KAAb,EAAoBH,KAApB,EAA2B,GAAGC,IAA9B,CAAb;AAAA,CAArB;;AAEA,MAAMG,MAAM,GAAG,EAAf;;AACA,KAAK,MAAMJ,KAAX,IAAoBF,MAApB,EAA4B;EAC1BM,MAAM,CAACJ,KAAD,CAAN,GAAgBD,GAAG,CAACC,KAAD,CAAnB;AACD;;AAEDI,MAAM,CAACN,MAAP,GAAgBA,MAAhB;AAEAO,MAAM,CAACC,OAAP,GAAiBF,MAAjB"},"metadata":{},"sourceType":"script"}