{"ast":null,"code":"const libnpmversion = require('libnpmversion');\n\nconst {\n  resolve\n} = require('path');\n\nconst {\n  promisify\n} = require('util');\n\nconst readFile = promisify(require('fs').readFile);\n\nconst updateWorkspaces = require('../workspaces/update-workspaces.js');\n\nconst BaseCommand = require('../base-command.js');\n\nclass Version extends BaseCommand {\n  static description = 'Bump a package version';\n  static name = 'version';\n  static params = ['allow-same-version', 'commit-hooks', 'git-tag-version', 'json', 'preid', 'sign-git-tag', 'workspace', 'workspaces', 'workspaces-update', 'include-workspace-root'];\n  static ignoreImplicitWorkspace = false;\n  /* eslint-disable-next-line max-len */\n\n  static usage = ['[<newversion> | major | minor | patch | premajor | preminor | prepatch | prerelease | from-git]'];\n\n  async completion(opts) {\n    const {\n      conf: {\n        argv: {\n          remain\n        }\n      }\n    } = opts;\n\n    if (remain.length > 2) {\n      return [];\n    }\n\n    return ['major', 'minor', 'patch', 'premajor', 'preminor', 'prepatch', 'prerelease', 'from-git'];\n  }\n\n  async exec(args) {\n    switch (args.length) {\n      case 0:\n        return this.list();\n\n      case 1:\n        return this.change(args);\n\n      default:\n        throw this.usageError();\n    }\n  }\n\n  async execWorkspaces(args, filters) {\n    switch (args.length) {\n      case 0:\n        return this.listWorkspaces(filters);\n\n      case 1:\n        return this.changeWorkspaces(args, filters);\n\n      default:\n        throw this.usageError();\n    }\n  }\n\n  async change(args) {\n    const prefix = this.npm.config.get('tag-version-prefix');\n    const version = await libnpmversion(args[0], { ...this.npm.flatOptions,\n      path: this.npm.prefix\n    });\n    return this.npm.output(`${prefix}${version}`);\n  }\n\n  async changeWorkspaces(args, filters) {\n    const prefix = this.npm.config.get('tag-version-prefix');\n    await this.setWorkspaces(filters);\n    const updatedWorkspaces = [];\n\n    for (const [name, path] of this.workspaces) {\n      this.npm.output(name);\n      const version = await libnpmversion(args[0], { ...this.npm.flatOptions,\n        'git-tag-version': false,\n        path\n      });\n      updatedWorkspaces.push(name);\n      this.npm.output(`${prefix}${version}`);\n    }\n\n    return this.update(updatedWorkspaces);\n  }\n\n  async list() {\n    let results = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const pj = resolve(this.npm.prefix, 'package.json');\n    const pkg = await readFile(pj, 'utf8').then(data => JSON.parse(data)).catch(() => ({}));\n\n    if (pkg.name && pkg.version) {\n      results[pkg.name] = pkg.version;\n    }\n\n    results.npm = this.npm.version;\n\n    for (const [key, version] of Object.entries(process.versions)) {\n      results[key] = version;\n    }\n\n    if (this.npm.config.get('json')) {\n      this.npm.output(JSON.stringify(results, null, 2));\n    } else {\n      this.npm.output(results);\n    }\n  }\n\n  async listWorkspaces(filters) {\n    const results = {};\n    await this.setWorkspaces(filters);\n\n    for (const path of this.workspacePaths) {\n      const pj = resolve(path, 'package.json'); // setWorkspaces has already parsed package.json so we know it won't error\n\n      const pkg = await readFile(pj, 'utf8').then(data => JSON.parse(data));\n\n      if (pkg.name && pkg.version) {\n        results[pkg.name] = pkg.version;\n      }\n    }\n\n    return this.list(results);\n  }\n\n  async update(workspaces) {\n    const {\n      config,\n      flatOptions,\n      localPrefix\n    } = this.npm;\n    await updateWorkspaces({\n      config,\n      flatOptions,\n      localPrefix,\n      npm: this.npm,\n      workspaces\n    });\n  }\n\n}\n\nmodule.exports = Version;","map":{"version":3,"names":["libnpmversion","require","resolve","promisify","readFile","updateWorkspaces","BaseCommand","Version","description","name","params","ignoreImplicitWorkspace","usage","completion","opts","conf","argv","remain","length","exec","args","list","change","usageError","execWorkspaces","filters","listWorkspaces","changeWorkspaces","prefix","npm","config","get","version","flatOptions","path","output","setWorkspaces","updatedWorkspaces","workspaces","push","update","results","pj","pkg","then","data","JSON","parse","catch","key","Object","entries","process","versions","stringify","workspacePaths","localPrefix","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/commands/version.js"],"sourcesContent":["const libnpmversion = require('libnpmversion')\nconst { resolve } = require('path')\nconst { promisify } = require('util')\nconst readFile = promisify(require('fs').readFile)\n\nconst updateWorkspaces = require('../workspaces/update-workspaces.js')\nconst BaseCommand = require('../base-command.js')\n\nclass Version extends BaseCommand {\n  static description = 'Bump a package version'\n  static name = 'version'\n  static params = [\n    'allow-same-version',\n    'commit-hooks',\n    'git-tag-version',\n    'json',\n    'preid',\n    'sign-git-tag',\n    'workspace',\n    'workspaces',\n    'workspaces-update',\n    'include-workspace-root',\n  ]\n\n  static ignoreImplicitWorkspace = false\n\n  /* eslint-disable-next-line max-len */\n  static usage = ['[<newversion> | major | minor | patch | premajor | preminor | prepatch | prerelease | from-git]']\n\n  async completion (opts) {\n    const {\n      conf: {\n        argv: { remain },\n      },\n    } = opts\n    if (remain.length > 2) {\n      return []\n    }\n\n    return [\n      'major',\n      'minor',\n      'patch',\n      'premajor',\n      'preminor',\n      'prepatch',\n      'prerelease',\n      'from-git',\n    ]\n  }\n\n  async exec (args) {\n    switch (args.length) {\n      case 0:\n        return this.list()\n      case 1:\n        return this.change(args)\n      default:\n        throw this.usageError()\n    }\n  }\n\n  async execWorkspaces (args, filters) {\n    switch (args.length) {\n      case 0:\n        return this.listWorkspaces(filters)\n      case 1:\n        return this.changeWorkspaces(args, filters)\n      default:\n        throw this.usageError()\n    }\n  }\n\n  async change (args) {\n    const prefix = this.npm.config.get('tag-version-prefix')\n    const version = await libnpmversion(args[0], {\n      ...this.npm.flatOptions,\n      path: this.npm.prefix,\n    })\n    return this.npm.output(`${prefix}${version}`)\n  }\n\n  async changeWorkspaces (args, filters) {\n    const prefix = this.npm.config.get('tag-version-prefix')\n    await this.setWorkspaces(filters)\n    const updatedWorkspaces = []\n    for (const [name, path] of this.workspaces) {\n      this.npm.output(name)\n      const version = await libnpmversion(args[0], {\n        ...this.npm.flatOptions,\n        'git-tag-version': false,\n        path,\n      })\n      updatedWorkspaces.push(name)\n      this.npm.output(`${prefix}${version}`)\n    }\n    return this.update(updatedWorkspaces)\n  }\n\n  async list (results = {}) {\n    const pj = resolve(this.npm.prefix, 'package.json')\n\n    const pkg = await readFile(pj, 'utf8')\n      .then(data => JSON.parse(data))\n      .catch(() => ({}))\n\n    if (pkg.name && pkg.version) {\n      results[pkg.name] = pkg.version\n    }\n\n    results.npm = this.npm.version\n    for (const [key, version] of Object.entries(process.versions)) {\n      results[key] = version\n    }\n\n    if (this.npm.config.get('json')) {\n      this.npm.output(JSON.stringify(results, null, 2))\n    } else {\n      this.npm.output(results)\n    }\n  }\n\n  async listWorkspaces (filters) {\n    const results = {}\n    await this.setWorkspaces(filters)\n    for (const path of this.workspacePaths) {\n      const pj = resolve(path, 'package.json')\n      // setWorkspaces has already parsed package.json so we know it won't error\n      const pkg = await readFile(pj, 'utf8').then(data => JSON.parse(data))\n\n      if (pkg.name && pkg.version) {\n        results[pkg.name] = pkg.version\n      }\n    }\n    return this.list(results)\n  }\n\n  async update (workspaces) {\n    const {\n      config,\n      flatOptions,\n      localPrefix,\n    } = this.npm\n\n    await updateWorkspaces({\n      config,\n      flatOptions,\n      localPrefix,\n      npm: this.npm,\n      workspaces,\n    })\n  }\n}\n\nmodule.exports = Version\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}