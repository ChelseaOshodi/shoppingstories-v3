{"ast":null,"code":"const flatten = require('./flatten.js');\n\nconst definitions = require('./definitions.js');\n\nconst describeAll = require('./describe-all.js'); // aliases where they get expanded into a completely different thing\n// these are NOT supported in the environment or npmrc files, only\n// expanded on the CLI.\n// TODO: when we switch off of nopt, use an arg parser that supports\n// more reasonable aliasing and short opts right in the definitions set.\n\n\nconst shorthands = {\n  'enjoy-by': ['--before'],\n  d: ['--loglevel', 'info'],\n  dd: ['--loglevel', 'verbose'],\n  ddd: ['--loglevel', 'silly'],\n  quiet: ['--loglevel', 'warn'],\n  q: ['--loglevel', 'warn'],\n  s: ['--loglevel', 'silent'],\n  silent: ['--loglevel', 'silent'],\n  verbose: ['--loglevel', 'verbose'],\n  desc: ['--description'],\n  help: ['--usage'],\n  local: ['--no-global'],\n  n: ['--no-yes'],\n  no: ['--no-yes'],\n  porcelain: ['--parseable'],\n  readonly: ['--read-only'],\n  reg: ['--registry'],\n  iwr: ['--include-workspace-root']\n};\n\nfor (const [key, {\n  short\n}] of Object.entries(definitions)) {\n  if (!short) {\n    continue;\n  } // can be either an array or string\n\n\n  for (const s of [].concat(short)) {\n    shorthands[s] = [`--${key}`];\n  }\n}\n\nmodule.exports = {\n  get defaults() {\n    // NB: 'default' is a reserved word\n    return Object.entries(definitions).map(_ref => {\n      let [key, {\n        default: def\n      }] = _ref;\n      return [key, def];\n    }).reduce((defaults, _ref2) => {\n      let [key, def] = _ref2;\n      defaults[key] = def;\n      return defaults;\n    }, {});\n  },\n\n  definitions,\n  flatten,\n  shorthands,\n  describeAll\n};","map":{"version":3,"names":["flatten","require","definitions","describeAll","shorthands","d","dd","ddd","quiet","q","s","silent","verbose","desc","help","local","n","no","porcelain","readonly","reg","iwr","key","short","Object","entries","concat","module","exports","defaults","map","default","def","reduce"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/utils/config/index.js"],"sourcesContent":["const flatten = require('./flatten.js')\nconst definitions = require('./definitions.js')\nconst describeAll = require('./describe-all.js')\n\n// aliases where they get expanded into a completely different thing\n// these are NOT supported in the environment or npmrc files, only\n// expanded on the CLI.\n// TODO: when we switch off of nopt, use an arg parser that supports\n// more reasonable aliasing and short opts right in the definitions set.\nconst shorthands = {\n  'enjoy-by': ['--before'],\n  d: ['--loglevel', 'info'],\n  dd: ['--loglevel', 'verbose'],\n  ddd: ['--loglevel', 'silly'],\n  quiet: ['--loglevel', 'warn'],\n  q: ['--loglevel', 'warn'],\n  s: ['--loglevel', 'silent'],\n  silent: ['--loglevel', 'silent'],\n  verbose: ['--loglevel', 'verbose'],\n  desc: ['--description'],\n  help: ['--usage'],\n  local: ['--no-global'],\n  n: ['--no-yes'],\n  no: ['--no-yes'],\n  porcelain: ['--parseable'],\n  readonly: ['--read-only'],\n  reg: ['--registry'],\n  iwr: ['--include-workspace-root'],\n}\n\nfor (const [key, { short }] of Object.entries(definitions)) {\n  if (!short) {\n    continue\n  }\n  // can be either an array or string\n  for (const s of [].concat(short)) {\n    shorthands[s] = [`--${key}`]\n  }\n}\n\nmodule.exports = {\n  get defaults () {\n    // NB: 'default' is a reserved word\n    return Object.entries(definitions).map(([key, { default: def }]) => {\n      return [key, def]\n    }).reduce((defaults, [key, def]) => {\n      defaults[key] = def\n      return defaults\n    }, {})\n  },\n  definitions,\n  flatten,\n  shorthands,\n  describeAll,\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,kBAAD,CAA3B;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,mBAAD,CAA3B,C,CAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,UAAU,GAAG;EACjB,YAAY,CAAC,UAAD,CADK;EAEjBC,CAAC,EAAE,CAAC,YAAD,EAAe,MAAf,CAFc;EAGjBC,EAAE,EAAE,CAAC,YAAD,EAAe,SAAf,CAHa;EAIjBC,GAAG,EAAE,CAAC,YAAD,EAAe,OAAf,CAJY;EAKjBC,KAAK,EAAE,CAAC,YAAD,EAAe,MAAf,CALU;EAMjBC,CAAC,EAAE,CAAC,YAAD,EAAe,MAAf,CANc;EAOjBC,CAAC,EAAE,CAAC,YAAD,EAAe,QAAf,CAPc;EAQjBC,MAAM,EAAE,CAAC,YAAD,EAAe,QAAf,CARS;EASjBC,OAAO,EAAE,CAAC,YAAD,EAAe,SAAf,CATQ;EAUjBC,IAAI,EAAE,CAAC,eAAD,CAVW;EAWjBC,IAAI,EAAE,CAAC,SAAD,CAXW;EAYjBC,KAAK,EAAE,CAAC,aAAD,CAZU;EAajBC,CAAC,EAAE,CAAC,UAAD,CAbc;EAcjBC,EAAE,EAAE,CAAC,UAAD,CAda;EAejBC,SAAS,EAAE,CAAC,aAAD,CAfM;EAgBjBC,QAAQ,EAAE,CAAC,aAAD,CAhBO;EAiBjBC,GAAG,EAAE,CAAC,YAAD,CAjBY;EAkBjBC,GAAG,EAAE,CAAC,0BAAD;AAlBY,CAAnB;;AAqBA,KAAK,MAAM,CAACC,GAAD,EAAM;EAAEC;AAAF,CAAN,CAAX,IAA+BC,MAAM,CAACC,OAAP,CAAevB,WAAf,CAA/B,EAA4D;EAC1D,IAAI,CAACqB,KAAL,EAAY;IACV;EACD,CAHyD,CAI1D;;;EACA,KAAK,MAAMb,CAAX,IAAgB,GAAGgB,MAAH,CAAUH,KAAV,CAAhB,EAAkC;IAChCnB,UAAU,CAACM,CAAD,CAAV,GAAgB,CAAE,KAAIY,GAAI,EAAV,CAAhB;EACD;AACF;;AAEDK,MAAM,CAACC,OAAP,GAAiB;EACf,IAAIC,QAAJ,GAAgB;IACd;IACA,OAAOL,MAAM,CAACC,OAAP,CAAevB,WAAf,EAA4B4B,GAA5B,CAAgC,QAA6B;MAAA,IAA5B,CAACR,GAAD,EAAM;QAAES,OAAO,EAAEC;MAAX,CAAN,CAA4B;MAClE,OAAO,CAACV,GAAD,EAAMU,GAAN,CAAP;IACD,CAFM,EAEJC,MAFI,CAEG,CAACJ,QAAD,YAA0B;MAAA,IAAf,CAACP,GAAD,EAAMU,GAAN,CAAe;MAClCH,QAAQ,CAACP,GAAD,CAAR,GAAgBU,GAAhB;MACA,OAAOH,QAAP;IACD,CALM,EAKJ,EALI,CAAP;EAMD,CATc;;EAUf3B,WAVe;EAWfF,OAXe;EAYfI,UAZe;EAafD;AAbe,CAAjB"},"metadata":{},"sourceType":"script"}