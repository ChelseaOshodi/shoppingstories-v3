{"ast":null,"code":"'use strict';\n\nconst Arborist = require('@npmcli/arborist');\n\nconst reifyFinish = require('../utils/reify-finish.js');\n\nasync function updateWorkspaces(_ref) {\n  let {\n    config,\n    flatOptions,\n    localPrefix,\n    npm,\n    workspaces\n  } = _ref;\n\n  if (!flatOptions.workspacesUpdate || !workspaces.length) {\n    return;\n  } // default behavior is to not save by default in order to avoid\n  // race condition problems when publishing multiple workspaces\n  // that have dependencies on one another, it might still be useful\n  // in some cases, which then need to set --save\n\n\n  const save = config.isDefault('save') ? false : config.get('save'); // runs a minimalistic reify update, targetting only the workspaces\n  // that had version updates and skipping fund/audit/save\n\n  const opts = { ...flatOptions,\n    audit: false,\n    fund: false,\n    path: localPrefix,\n    save\n  };\n  const arb = new Arborist(opts);\n  await arb.reify({ ...opts,\n    update: workspaces\n  });\n  await reifyFinish(npm, arb);\n}\n\nmodule.exports = updateWorkspaces;","map":{"version":3,"names":["Arborist","require","reifyFinish","updateWorkspaces","config","flatOptions","localPrefix","npm","workspaces","workspacesUpdate","length","save","isDefault","get","opts","audit","fund","path","arb","reify","update","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/workspaces/update-workspaces.js"],"sourcesContent":["'use strict'\n\nconst Arborist = require('@npmcli/arborist')\nconst reifyFinish = require('../utils/reify-finish.js')\n\nasync function updateWorkspaces ({\n  config,\n  flatOptions,\n  localPrefix,\n  npm,\n  workspaces,\n}) {\n  if (!flatOptions.workspacesUpdate || !workspaces.length) {\n    return\n  }\n\n  // default behavior is to not save by default in order to avoid\n  // race condition problems when publishing multiple workspaces\n  // that have dependencies on one another, it might still be useful\n  // in some cases, which then need to set --save\n  const save = config.isDefault('save')\n    ? false\n    : config.get('save')\n\n  // runs a minimalistic reify update, targetting only the workspaces\n  // that had version updates and skipping fund/audit/save\n  const opts = {\n    ...flatOptions,\n    audit: false,\n    fund: false,\n    path: localPrefix,\n    save,\n  }\n  const arb = new Arborist(opts)\n\n  await arb.reify({ ...opts, update: workspaces })\n  await reifyFinish(npm, arb)\n}\n\nmodule.exports = updateWorkspaces\n"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,kBAAD,CAAxB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,0BAAD,CAA3B;;AAEA,eAAeE,gBAAf,OAMG;EAAA,IAN8B;IAC/BC,MAD+B;IAE/BC,WAF+B;IAG/BC,WAH+B;IAI/BC,GAJ+B;IAK/BC;EAL+B,CAM9B;;EACD,IAAI,CAACH,WAAW,CAACI,gBAAb,IAAiC,CAACD,UAAU,CAACE,MAAjD,EAAyD;IACvD;EACD,CAHA,CAKD;EACA;EACA;EACA;;;EACA,MAAMC,IAAI,GAAGP,MAAM,CAACQ,SAAP,CAAiB,MAAjB,IACT,KADS,GAETR,MAAM,CAACS,GAAP,CAAW,MAAX,CAFJ,CATC,CAaD;EACA;;EACA,MAAMC,IAAI,GAAG,EACX,GAAGT,WADQ;IAEXU,KAAK,EAAE,KAFI;IAGXC,IAAI,EAAE,KAHK;IAIXC,IAAI,EAAEX,WAJK;IAKXK;EALW,CAAb;EAOA,MAAMO,GAAG,GAAG,IAAIlB,QAAJ,CAAac,IAAb,CAAZ;EAEA,MAAMI,GAAG,CAACC,KAAJ,CAAU,EAAE,GAAGL,IAAL;IAAWM,MAAM,EAAEZ;EAAnB,CAAV,CAAN;EACA,MAAMN,WAAW,CAACK,GAAD,EAAMW,GAAN,CAAjB;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBnB,gBAAjB"},"metadata":{},"sourceType":"script"}