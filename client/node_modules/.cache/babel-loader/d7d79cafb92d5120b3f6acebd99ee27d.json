{"ast":null,"code":"const EOL = '\\n';\n\nconst colorizeDiff = require('@npmcli/disparity-colors');\n\nconst jsDiff = require('diff');\n\nconst shouldPrintPatch = require('./should-print-patch.js');\n\nconst formatDiff = _ref => {\n  let {\n    files,\n    opts = {},\n    refs,\n    versions\n  } = _ref;\n  let res = '';\n  const srcPrefix = opts.diffNoPrefix ? '' : opts.diffSrcPrefix || 'a/';\n  const dstPrefix = opts.diffNoPrefix ? '' : opts.diffDstPrefix || 'b/';\n\n  for (const filename of files.values()) {\n    const names = {\n      a: `${srcPrefix}${filename}`,\n      b: `${dstPrefix}${filename}`\n    };\n    let fileMode = '';\n    const filenames = {\n      a: refs.get(`a/${filename}`),\n      b: refs.get(`b/${filename}`)\n    };\n    const contents = {\n      a: filenames.a && filenames.a.content,\n      b: filenames.b && filenames.b.content\n    };\n    const modes = {\n      a: filenames.a && filenames.a.mode,\n      b: filenames.b && filenames.b.mode\n    };\n\n    if (contents.a === contents.b && modes.a === modes.b) {\n      continue;\n    }\n\n    if (opts.diffNameOnly) {\n      res += `${filename}${EOL}`;\n      continue;\n    }\n\n    let patch = '';\n    let headerLength = 0;\n\n    const header = str => {\n      headerLength++;\n      patch += `${str}${EOL}`;\n    }; // manually build a git diff-compatible header\n\n\n    header(`diff --git ${names.a} ${names.b}`);\n\n    if (modes.a === modes.b) {\n      fileMode = filenames.a.mode;\n    } else {\n      if (modes.a && !modes.b) {\n        header(`deleted file mode ${modes.a}`);\n      } else if (!modes.a && modes.b) {\n        header(`new file mode ${modes.b}`);\n      } else {\n        header(`old mode ${modes.a}`);\n        header(`new mode ${modes.b}`);\n      }\n    }\n    /* eslint-disable-next-line max-len */\n\n\n    header(`index ${opts.tagVersionPrefix || 'v'}${versions.a}..${opts.tagVersionPrefix || 'v'}${versions.b} ${fileMode}`);\n\n    if (shouldPrintPatch(filename)) {\n      patch += jsDiff.createTwoFilesPatch(names.a, names.b, contents.a || '', contents.b || '', '', '', {\n        context: opts.diffUnified === 0 ? 0 : opts.diffUnified || 3,\n        ignoreWhitespace: opts.diffIgnoreAllSpace\n      }).replace('===================================================================\\n', '').replace(/\\t\\n/g, '\\n'); // strip trailing tabs\n\n      headerLength += 2;\n    } else {\n      header(`--- ${names.a}`);\n      header(`+++ ${names.b}`);\n    }\n\n    res += opts.color ? colorizeDiff(patch, {\n      headerLength\n    }) : patch;\n  }\n\n  return res.trim();\n};\n\nmodule.exports = formatDiff;","map":{"version":3,"names":["EOL","colorizeDiff","require","jsDiff","shouldPrintPatch","formatDiff","files","opts","refs","versions","res","srcPrefix","diffNoPrefix","diffSrcPrefix","dstPrefix","diffDstPrefix","filename","values","names","a","b","fileMode","filenames","get","contents","content","modes","mode","diffNameOnly","patch","headerLength","header","str","tagVersionPrefix","createTwoFilesPatch","context","diffUnified","ignoreWhitespace","diffIgnoreAllSpace","replace","color","trim","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/libnpmdiff/lib/format-diff.js"],"sourcesContent":["const EOL = '\\n'\n\nconst colorizeDiff = require('@npmcli/disparity-colors')\nconst jsDiff = require('diff')\n\nconst shouldPrintPatch = require('./should-print-patch.js')\n\nconst formatDiff = ({ files, opts = {}, refs, versions }) => {\n  let res = ''\n  const srcPrefix = opts.diffNoPrefix ? '' : opts.diffSrcPrefix || 'a/'\n  const dstPrefix = opts.diffNoPrefix ? '' : opts.diffDstPrefix || 'b/'\n\n  for (const filename of files.values()) {\n    const names = {\n      a: `${srcPrefix}${filename}`,\n      b: `${dstPrefix}${filename}`,\n    }\n\n    let fileMode = ''\n    const filenames = {\n      a: refs.get(`a/${filename}`),\n      b: refs.get(`b/${filename}`),\n    }\n    const contents = {\n      a: filenames.a && filenames.a.content,\n      b: filenames.b && filenames.b.content,\n    }\n    const modes = {\n      a: filenames.a && filenames.a.mode,\n      b: filenames.b && filenames.b.mode,\n    }\n\n    if (contents.a === contents.b && modes.a === modes.b) {\n      continue\n    }\n\n    if (opts.diffNameOnly) {\n      res += `${filename}${EOL}`\n      continue\n    }\n\n    let patch = ''\n    let headerLength = 0\n    const header = str => {\n      headerLength++\n      patch += `${str}${EOL}`\n    }\n\n    // manually build a git diff-compatible header\n    header(`diff --git ${names.a} ${names.b}`)\n    if (modes.a === modes.b) {\n      fileMode = filenames.a.mode\n    } else {\n      if (modes.a && !modes.b) {\n        header(`deleted file mode ${modes.a}`)\n      } else if (!modes.a && modes.b) {\n        header(`new file mode ${modes.b}`)\n      } else {\n        header(`old mode ${modes.a}`)\n        header(`new mode ${modes.b}`)\n      }\n    }\n    /* eslint-disable-next-line max-len */\n    header(`index ${opts.tagVersionPrefix || 'v'}${versions.a}..${opts.tagVersionPrefix || 'v'}${versions.b} ${fileMode}`)\n\n    if (shouldPrintPatch(filename)) {\n      patch += jsDiff.createTwoFilesPatch(\n        names.a,\n        names.b,\n        contents.a || '',\n        contents.b || '',\n        '',\n        '',\n        {\n          context: opts.diffUnified === 0 ? 0 : opts.diffUnified || 3,\n          ignoreWhitespace: opts.diffIgnoreAllSpace,\n        }\n      ).replace(\n        '===================================================================\\n',\n        ''\n      ).replace(/\\t\\n/g, '\\n') // strip trailing tabs\n      headerLength += 2\n    } else {\n      header(`--- ${names.a}`)\n      header(`+++ ${names.b}`)\n    }\n\n    res += (opts.color\n      ? colorizeDiff(patch, { headerLength })\n      : patch)\n  }\n\n  return res.trim()\n}\n\nmodule.exports = formatDiff\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}