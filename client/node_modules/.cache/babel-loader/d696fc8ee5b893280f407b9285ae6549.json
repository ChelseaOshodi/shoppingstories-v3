{"ast":null,"code":"// called with all the options already set to their defaults\nconst retrieveTag = require('./retrieve-tag.js');\n\nconst semver = require('semver');\n\nconst enforceClean = require('./enforce-clean.js');\n\nconst writeJson = require('./write-json.js');\n\nconst readJson = require('./read-json.js');\n\nconst git = require('@npmcli/git');\n\nconst commit = require('./commit.js');\n\nconst tag = require('./tag.js');\n\nconst log = require('proc-log');\n\nconst runScript = require('@npmcli/run-script');\n\nmodule.exports = async (newversion, opts) => {\n  const {\n    path,\n    allowSameVersion,\n    gitTagVersion,\n    ignoreScripts,\n    preid,\n    pkg,\n    silent\n  } = opts;\n  const {\n    valid,\n    clean,\n    inc\n  } = semver;\n  const current = pkg.version || '0.0.0';\n  const currentClean = clean(current);\n  let newV;\n\n  if (valid(newversion, {\n    loose: true\n  })) {\n    newV = clean(newversion, {\n      loose: true\n    });\n  } else if (newversion === 'from-git') {\n    newV = await retrieveTag(opts);\n  } else {\n    newV = inc(currentClean, newversion, {\n      loose: true\n    }, preid);\n  }\n\n  if (!newV) {\n    throw Object.assign(new Error('Invalid version: ' + newversion), {\n      current,\n      requested: newversion\n    });\n  }\n\n  if (newV === currentClean && !allowSameVersion) {\n    throw Object.assign(new Error('Version not changed'), {\n      current,\n      requested: newversion,\n      newVersion: newV\n    });\n  }\n\n  const isGitDir = newversion === 'from-git' || (await git.is(opts)); // ok!  now we know the new version, and the old version is in pkg\n  // - check if git dir is clean\n  // returns false if we should not keep doing git stuff\n\n  const doGit = gitTagVersion && isGitDir && (await enforceClean(opts));\n\n  if (!ignoreScripts) {\n    await runScript({ ...opts,\n      pkg,\n      stdio: 'inherit',\n      event: 'preversion',\n      banner: !silent,\n      env: {\n        npm_old_version: current,\n        npm_new_version: newV\n      }\n    });\n  } // - update the files\n\n\n  pkg.version = newV;\n  delete pkg._id;\n  await writeJson(`${path}/package.json`, pkg); // try to update shrinkwrap, but ok if this fails\n\n  const locks = [`${path}/package-lock.json`, `${path}/npm-shrinkwrap.json`];\n  const haveLocks = [];\n\n  for (const lock of locks) {\n    try {\n      const sw = await readJson(lock);\n      sw.version = newV;\n\n      if (sw.packages && sw.packages['']) {\n        sw.packages[''].version = newV;\n      }\n\n      await writeJson(lock, sw);\n      haveLocks.push(lock);\n    } catch (er) {}\n  }\n\n  if (!ignoreScripts) {\n    await runScript({ ...opts,\n      pkg,\n      stdio: 'inherit',\n      event: 'version',\n      banner: !silent,\n      env: {\n        npm_old_version: current,\n        npm_new_version: newV\n      }\n    });\n  }\n\n  if (doGit) {\n    // - git add, git commit, git tag\n    await git.spawn(['add', `${path}/package.json`], opts); // sometimes people .gitignore their lockfiles\n\n    for (const lock of haveLocks) {\n      await git.spawn(['add', lock], opts).catch(() => {});\n    }\n\n    await commit(newV, opts);\n    await tag(newV, opts);\n  } else {\n    log.verbose('version', 'Not tagging: not in a git repo or no git cmd');\n  }\n\n  if (!ignoreScripts) {\n    await runScript({ ...opts,\n      pkg,\n      stdio: 'inherit',\n      event: 'postversion',\n      banner: !silent,\n      env: {\n        npm_old_version: current,\n        npm_new_version: newV\n      }\n    });\n  }\n\n  return newV;\n};","map":{"version":3,"names":["retrieveTag","require","semver","enforceClean","writeJson","readJson","git","commit","tag","log","runScript","module","exports","newversion","opts","path","allowSameVersion","gitTagVersion","ignoreScripts","preid","pkg","silent","valid","clean","inc","current","version","currentClean","newV","loose","Object","assign","Error","requested","newVersion","isGitDir","is","doGit","stdio","event","banner","env","npm_old_version","npm_new_version","_id","locks","haveLocks","lock","sw","packages","push","er","spawn","catch","verbose"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/libnpmversion/lib/version.js"],"sourcesContent":["// called with all the options already set to their defaults\n\nconst retrieveTag = require('./retrieve-tag.js')\nconst semver = require('semver')\nconst enforceClean = require('./enforce-clean.js')\nconst writeJson = require('./write-json.js')\nconst readJson = require('./read-json.js')\nconst git = require('@npmcli/git')\nconst commit = require('./commit.js')\nconst tag = require('./tag.js')\nconst log = require('proc-log')\n\nconst runScript = require('@npmcli/run-script')\n\nmodule.exports = async (newversion, opts) => {\n  const {\n    path,\n    allowSameVersion,\n    gitTagVersion,\n    ignoreScripts,\n    preid,\n    pkg,\n    silent,\n  } = opts\n\n  const { valid, clean, inc } = semver\n  const current = pkg.version || '0.0.0'\n  const currentClean = clean(current)\n\n  let newV\n  if (valid(newversion, { loose: true })) {\n    newV = clean(newversion, { loose: true })\n  } else if (newversion === 'from-git') {\n    newV = await retrieveTag(opts)\n  } else {\n    newV = inc(currentClean, newversion, { loose: true }, preid)\n  }\n\n  if (!newV) {\n    throw Object.assign(new Error('Invalid version: ' + newversion), {\n      current,\n      requested: newversion,\n    })\n  }\n\n  if (newV === currentClean && !allowSameVersion) {\n    throw Object.assign(new Error('Version not changed'), {\n      current,\n      requested: newversion,\n      newVersion: newV,\n    })\n  }\n\n  const isGitDir = newversion === 'from-git' || await git.is(opts)\n\n  // ok!  now we know the new version, and the old version is in pkg\n\n  // - check if git dir is clean\n  // returns false if we should not keep doing git stuff\n  const doGit = gitTagVersion && isGitDir && await enforceClean(opts)\n\n  if (!ignoreScripts) {\n    await runScript({\n      ...opts,\n      pkg,\n      stdio: 'inherit',\n      event: 'preversion',\n      banner: !silent,\n      env: {\n        npm_old_version: current,\n        npm_new_version: newV,\n      },\n    })\n  }\n\n  // - update the files\n  pkg.version = newV\n  delete pkg._id\n  await writeJson(`${path}/package.json`, pkg)\n\n  // try to update shrinkwrap, but ok if this fails\n  const locks = [`${path}/package-lock.json`, `${path}/npm-shrinkwrap.json`]\n  const haveLocks = []\n  for (const lock of locks) {\n    try {\n      const sw = await readJson(lock)\n      sw.version = newV\n      if (sw.packages && sw.packages['']) {\n        sw.packages[''].version = newV\n      }\n      await writeJson(lock, sw)\n      haveLocks.push(lock)\n    } catch (er) {}\n  }\n\n  if (!ignoreScripts) {\n    await runScript({\n      ...opts,\n      pkg,\n      stdio: 'inherit',\n      event: 'version',\n      banner: !silent,\n      env: {\n        npm_old_version: current,\n        npm_new_version: newV,\n      },\n    })\n  }\n\n  if (doGit) {\n    // - git add, git commit, git tag\n    await git.spawn(['add', `${path}/package.json`], opts)\n    // sometimes people .gitignore their lockfiles\n    for (const lock of haveLocks) {\n      await git.spawn(['add', lock], opts).catch(() => {})\n    }\n    await commit(newV, opts)\n    await tag(newV, opts)\n  } else {\n    log.verbose('version', 'Not tagging: not in a git repo or no git cmd')\n  }\n\n  if (!ignoreScripts) {\n    await runScript({\n      ...opts,\n      pkg,\n      stdio: 'inherit',\n      event: 'postversion',\n      banner: !silent,\n      env: {\n        npm_old_version: current,\n        npm_new_version: newV,\n      },\n    })\n  }\n\n  return newV\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}