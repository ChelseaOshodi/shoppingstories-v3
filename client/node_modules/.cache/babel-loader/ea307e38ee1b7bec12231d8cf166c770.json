{"ast":null,"code":"const path = require('path');\n\nconst libaccess = require('libnpmaccess');\n\nconst readPackageJson = require('read-package-json-fast');\n\nconst otplease = require('../utils/otplease.js');\n\nconst getIdentity = require('../utils/get-identity.js');\n\nconst BaseCommand = require('../base-command.js');\n\nconst subcommands = ['public', 'restricted', 'grant', 'revoke', 'ls-packages', 'ls-collaborators', 'edit', '2fa-required', '2fa-not-required'];\n\nclass Access extends BaseCommand {\n  static description = 'Set access level on published packages';\n  static name = 'access';\n  static params = ['registry', 'otp'];\n  static ignoreImplicitWorkspace = true;\n  static usage = ['public [<package>]', 'restricted [<package>]', 'grant <read-only|read-write> <scope:team> [<package>]', 'revoke <scope:team> [<package>]', '2fa-required [<package>]', '2fa-not-required [<package>]', 'ls-packages [<user>|<scope>|<scope:team>]', 'ls-collaborators [<package> [<user>]]', 'edit [<package>]'];\n\n  async completion(opts) {\n    const argv = opts.conf.argv.remain;\n\n    if (argv.length === 2) {\n      return subcommands;\n    }\n\n    switch (argv[2]) {\n      case 'grant':\n        if (argv.length === 3) {\n          return ['read-only', 'read-write'];\n        } else {\n          return [];\n        }\n\n      case 'public':\n      case 'restricted':\n      case 'ls-packages':\n      case 'ls-collaborators':\n      case 'edit':\n      case '2fa-required':\n      case '2fa-not-required':\n      case 'revoke':\n        return [];\n\n      default:\n        throw new Error(argv[2] + ' not recognized');\n    }\n  }\n\n  async exec(_ref) {\n    let [cmd, ...args] = _ref;\n\n    if (!cmd) {\n      throw this.usageError('Subcommand is required.');\n    }\n\n    if (!subcommands.includes(cmd) || !this[cmd]) {\n      throw this.usageError(`${cmd} is not a recognized subcommand.`);\n    }\n\n    return this[cmd](args, { ...this.npm.flatOptions\n    });\n  }\n\n  public(_ref2, opts) {\n    let [pkg] = _ref2;\n    return this.modifyPackage(pkg, opts, libaccess.public);\n  }\n\n  restricted(_ref3, opts) {\n    let [pkg] = _ref3;\n    return this.modifyPackage(pkg, opts, libaccess.restricted);\n  }\n\n  async grant(_ref4, opts) {\n    let [perms, scopeteam, pkg] = _ref4;\n\n    if (!perms || perms !== 'read-only' && perms !== 'read-write') {\n      throw this.usageError('First argument must be either `read-only` or `read-write`.');\n    }\n\n    if (!scopeteam) {\n      throw this.usageError('`<scope:team>` argument is required.');\n    }\n\n    const [, scope, team] = scopeteam.match(/^@?([^:]+):(.*)$/) || [];\n\n    if (!scope && !team) {\n      throw this.usageError('Second argument used incorrect format.\\n' + 'Example: @example:developers');\n    }\n\n    return this.modifyPackage(pkg, opts, (pkgName, opts) => libaccess.grant(pkgName, scopeteam, perms, opts), false);\n  }\n\n  async revoke(_ref5, opts) {\n    let [scopeteam, pkg] = _ref5;\n\n    if (!scopeteam) {\n      throw this.usageError('`<scope:team>` argument is required.');\n    }\n\n    const [, scope, team] = scopeteam.match(/^@?([^:]+):(.*)$/) || [];\n\n    if (!scope || !team) {\n      throw this.usageError('First argument used incorrect format.\\n' + 'Example: @example:developers');\n    }\n\n    return this.modifyPackage(pkg, opts, (pkgName, opts) => libaccess.revoke(pkgName, scopeteam, opts));\n  }\n\n  get ['2fa-required']() {\n    return this.tfaRequired;\n  }\n\n  tfaRequired(_ref6, opts) {\n    let [pkg] = _ref6;\n    return this.modifyPackage(pkg, opts, libaccess.tfaRequired, false);\n  }\n\n  get ['2fa-not-required']() {\n    return this.tfaNotRequired;\n  }\n\n  tfaNotRequired(_ref7, opts) {\n    let [pkg] = _ref7;\n    return this.modifyPackage(pkg, opts, libaccess.tfaNotRequired, false);\n  }\n\n  get ['ls-packages']() {\n    return this.lsPackages;\n  }\n\n  async lsPackages(_ref8, opts) {\n    let [owner] = _ref8;\n\n    if (!owner) {\n      owner = await getIdentity(this.npm, opts);\n    }\n\n    const pkgs = await libaccess.lsPackages(owner, opts); // TODO - print these out nicely (breaking change)\n\n    this.npm.output(JSON.stringify(pkgs, null, 2));\n  }\n\n  get ['ls-collaborators']() {\n    return this.lsCollaborators;\n  }\n\n  async lsCollaborators(_ref9, opts) {\n    let [pkg, usr] = _ref9;\n    const pkgName = await this.getPackage(pkg, false);\n    const collabs = await libaccess.lsCollaborators(pkgName, usr, opts); // TODO - print these out nicely (breaking change)\n\n    this.npm.output(JSON.stringify(collabs, null, 2));\n  }\n\n  async edit() {\n    throw new Error('edit subcommand is not implemented yet');\n  }\n\n  modifyPackage(pkg, opts, fn) {\n    let requireScope = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    return this.getPackage(pkg, requireScope).then(pkgName => otplease(this.npm, opts, opts => fn(pkgName, opts)));\n  }\n\n  async getPackage(name, requireScope) {\n    if (name && name.trim()) {\n      return name.trim();\n    } else {\n      try {\n        const pkg = await readPackageJson(path.resolve(this.npm.prefix, 'package.json'));\n        name = pkg.name;\n      } catch (err) {\n        if (err.code === 'ENOENT') {\n          throw new Error('no package name passed to command and no package.json found');\n        } else {\n          throw err;\n        }\n      }\n\n      if (requireScope && !name.match(/^@[^/]+\\/.*$/)) {\n        throw this.usageError('This command is only available for scoped packages.');\n      } else {\n        return name;\n      }\n    }\n  }\n\n}\n\nmodule.exports = Access;","map":{"version":3,"names":["path","require","libaccess","readPackageJson","otplease","getIdentity","BaseCommand","subcommands","Access","description","name","params","ignoreImplicitWorkspace","usage","completion","opts","argv","conf","remain","length","Error","exec","cmd","args","usageError","includes","npm","flatOptions","public","pkg","modifyPackage","restricted","grant","perms","scopeteam","scope","team","match","pkgName","revoke","tfaRequired","tfaNotRequired","lsPackages","owner","pkgs","output","JSON","stringify","lsCollaborators","usr","getPackage","collabs","edit","fn","requireScope","then","trim","resolve","prefix","err","code","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/commands/access.js"],"sourcesContent":["const path = require('path')\n\nconst libaccess = require('libnpmaccess')\nconst readPackageJson = require('read-package-json-fast')\n\nconst otplease = require('../utils/otplease.js')\nconst getIdentity = require('../utils/get-identity.js')\nconst BaseCommand = require('../base-command.js')\n\nconst subcommands = [\n  'public',\n  'restricted',\n  'grant',\n  'revoke',\n  'ls-packages',\n  'ls-collaborators',\n  'edit',\n  '2fa-required',\n  '2fa-not-required',\n]\n\nclass Access extends BaseCommand {\n  static description = 'Set access level on published packages'\n  static name = 'access'\n  static params = [\n    'registry',\n    'otp',\n  ]\n\n  static ignoreImplicitWorkspace = true\n\n  static usage = [\n    'public [<package>]',\n    'restricted [<package>]',\n    'grant <read-only|read-write> <scope:team> [<package>]',\n    'revoke <scope:team> [<package>]',\n    '2fa-required [<package>]',\n    '2fa-not-required [<package>]',\n    'ls-packages [<user>|<scope>|<scope:team>]',\n    'ls-collaborators [<package> [<user>]]',\n    'edit [<package>]',\n  ]\n\n  async completion (opts) {\n    const argv = opts.conf.argv.remain\n    if (argv.length === 2) {\n      return subcommands\n    }\n\n    switch (argv[2]) {\n      case 'grant':\n        if (argv.length === 3) {\n          return ['read-only', 'read-write']\n        } else {\n          return []\n        }\n\n      case 'public':\n      case 'restricted':\n      case 'ls-packages':\n      case 'ls-collaborators':\n      case 'edit':\n      case '2fa-required':\n      case '2fa-not-required':\n      case 'revoke':\n        return []\n      default:\n        throw new Error(argv[2] + ' not recognized')\n    }\n  }\n\n  async exec ([cmd, ...args]) {\n    if (!cmd) {\n      throw this.usageError('Subcommand is required.')\n    }\n\n    if (!subcommands.includes(cmd) || !this[cmd]) {\n      throw this.usageError(`${cmd} is not a recognized subcommand.`)\n    }\n\n    return this[cmd](args, {\n      ...this.npm.flatOptions,\n    })\n  }\n\n  public ([pkg], opts) {\n    return this.modifyPackage(pkg, opts, libaccess.public)\n  }\n\n  restricted ([pkg], opts) {\n    return this.modifyPackage(pkg, opts, libaccess.restricted)\n  }\n\n  async grant ([perms, scopeteam, pkg], opts) {\n    if (!perms || (perms !== 'read-only' && perms !== 'read-write')) {\n      throw this.usageError('First argument must be either `read-only` or `read-write`.')\n    }\n\n    if (!scopeteam) {\n      throw this.usageError('`<scope:team>` argument is required.')\n    }\n\n    const [, scope, team] = scopeteam.match(/^@?([^:]+):(.*)$/) || []\n\n    if (!scope && !team) {\n      throw this.usageError(\n        'Second argument used incorrect format.\\n' +\n        'Example: @example:developers'\n      )\n    }\n\n    return this.modifyPackage(pkg, opts, (pkgName, opts) =>\n      libaccess.grant(pkgName, scopeteam, perms, opts), false)\n  }\n\n  async revoke ([scopeteam, pkg], opts) {\n    if (!scopeteam) {\n      throw this.usageError('`<scope:team>` argument is required.')\n    }\n\n    const [, scope, team] = scopeteam.match(/^@?([^:]+):(.*)$/) || []\n\n    if (!scope || !team) {\n      throw this.usageError(\n        'First argument used incorrect format.\\n' +\n        'Example: @example:developers'\n      )\n    }\n\n    return this.modifyPackage(pkg, opts, (pkgName, opts) =>\n      libaccess.revoke(pkgName, scopeteam, opts))\n  }\n\n  get ['2fa-required'] () {\n    return this.tfaRequired\n  }\n\n  tfaRequired ([pkg], opts) {\n    return this.modifyPackage(pkg, opts, libaccess.tfaRequired, false)\n  }\n\n  get ['2fa-not-required'] () {\n    return this.tfaNotRequired\n  }\n\n  tfaNotRequired ([pkg], opts) {\n    return this.modifyPackage(pkg, opts, libaccess.tfaNotRequired, false)\n  }\n\n  get ['ls-packages'] () {\n    return this.lsPackages\n  }\n\n  async lsPackages ([owner], opts) {\n    if (!owner) {\n      owner = await getIdentity(this.npm, opts)\n    }\n\n    const pkgs = await libaccess.lsPackages(owner, opts)\n\n    // TODO - print these out nicely (breaking change)\n    this.npm.output(JSON.stringify(pkgs, null, 2))\n  }\n\n  get ['ls-collaborators'] () {\n    return this.lsCollaborators\n  }\n\n  async lsCollaborators ([pkg, usr], opts) {\n    const pkgName = await this.getPackage(pkg, false)\n    const collabs = await libaccess.lsCollaborators(pkgName, usr, opts)\n\n    // TODO - print these out nicely (breaking change)\n    this.npm.output(JSON.stringify(collabs, null, 2))\n  }\n\n  async edit () {\n    throw new Error('edit subcommand is not implemented yet')\n  }\n\n  modifyPackage (pkg, opts, fn, requireScope = true) {\n    return this.getPackage(pkg, requireScope)\n      .then(pkgName => otplease(this.npm, opts, opts => fn(pkgName, opts)))\n  }\n\n  async getPackage (name, requireScope) {\n    if (name && name.trim()) {\n      return name.trim()\n    } else {\n      try {\n        const pkg = await readPackageJson(path.resolve(this.npm.prefix, 'package.json'))\n        name = pkg.name\n      } catch (err) {\n        if (err.code === 'ENOENT') {\n          throw new Error(\n            'no package name passed to command and no package.json found'\n          )\n        } else {\n          throw err\n        }\n      }\n\n      if (requireScope && !name.match(/^@[^/]+\\/.*$/)) {\n        throw this.usageError('This command is only available for scoped packages.')\n      } else {\n        return name\n      }\n    }\n  }\n}\n\nmodule.exports = Access\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}