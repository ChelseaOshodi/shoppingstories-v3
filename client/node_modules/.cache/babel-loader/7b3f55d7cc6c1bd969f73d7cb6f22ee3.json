{"ast":null,"code":"'use strict';\n\nconst fetch = require('npm-registry-fetch');\n\nconst {\n  HttpErrorBase\n} = require('npm-registry-fetch/lib/errors');\n\nconst EventEmitter = require('events');\n\nconst os = require('os');\n\nconst {\n  URL\n} = require('url');\n\nconst log = require('proc-log'); // try loginWeb, catch the \"not supported\" message and fall back to couch\n\n\nconst login = function (opener, prompter) {\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const {\n    creds\n  } = opts;\n  return loginWeb(opener, opts).catch(er => {\n    if (er instanceof WebLoginNotSupported) {\n      log.verbose('web login not supported, trying couch');\n      return prompter(creds).then(data => loginCouch(data.username, data.password, opts));\n    } else {\n      throw er;\n    }\n  });\n};\n\nconst adduser = function (opener, prompter) {\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const {\n    creds\n  } = opts;\n  return adduserWeb(opener, opts).catch(er => {\n    if (er instanceof WebLoginNotSupported) {\n      log.verbose('web adduser not supported, trying couch');\n      return prompter(creds).then(data => adduserCouch(data.username, data.email, data.password, opts));\n    } else {\n      throw er;\n    }\n  });\n};\n\nconst adduserWeb = function (opener) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  log.verbose('web adduser', 'before first POST');\n  return webAuth(opener, opts, {\n    create: true\n  });\n};\n\nconst loginWeb = function (opener) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  log.verbose('web login', 'before first POST');\n  return webAuth(opener, opts, {});\n};\n\nconst isValidUrl = u => {\n  try {\n    return /^https?:$/.test(new URL(u).protocol);\n  } catch (er) {\n    return false;\n  }\n};\n\nconst webAuth = (opener, opts, body) => {\n  const {\n    hostname\n  } = opts;\n  body.hostname = hostname || os.hostname();\n  const target = '/-/v1/login';\n  const doneEmitter = new EventEmitter();\n  return fetch(target, { ...opts,\n    method: 'POST',\n    body\n  }).then(res => {\n    return Promise.all([res, res.json()]);\n  }).then(_ref => {\n    let [res, content] = _ref;\n    const {\n      doneUrl,\n      loginUrl\n    } = content;\n    log.verbose('web auth', 'got response', content);\n\n    if (!isValidUrl(doneUrl) || !isValidUrl(loginUrl)) {\n      throw new WebLoginInvalidResponse('POST', res, content);\n    }\n\n    return content;\n  }).then(_ref2 => {\n    let {\n      doneUrl,\n      loginUrl\n    } = _ref2;\n    log.verbose('web auth', 'opening url pair');\n    const openPromise = opener(loginUrl, doneEmitter);\n    const webAuthCheckPromise = webAuthCheckLogin(doneUrl, { ...opts,\n      cache: false\n    }).then(authResult => {\n      log.verbose('web auth', 'done-check finished'); // cancel open prompt if it's present\n\n      doneEmitter.emit('abort');\n      return authResult;\n    });\n    return Promise.all([openPromise, webAuthCheckPromise]).then( // pick the auth result and pass it along\n    _ref3 => {\n      let [, authResult] = _ref3;\n      return authResult;\n    });\n  }).catch(er => {\n    // cancel open prompt if it's present\n    doneEmitter.emit('abort');\n\n    if (er.statusCode >= 400 && er.statusCode <= 499 || er.statusCode === 500) {\n      throw new WebLoginNotSupported('POST', {\n        status: er.statusCode,\n        headers: {\n          raw: () => er.headers\n        }\n      }, er.body);\n    } else {\n      throw er;\n    }\n  });\n};\n\nconst webAuthCheckLogin = (doneUrl, opts) => {\n  return fetch(doneUrl, opts).then(res => {\n    return Promise.all([res, res.json()]);\n  }).then(_ref4 => {\n    let [res, content] = _ref4;\n\n    if (res.status === 200) {\n      if (!content.token) {\n        throw new WebLoginInvalidResponse('GET', res, content);\n      } else {\n        return content;\n      }\n    } else if (res.status === 202) {\n      const retry = +res.headers.get('retry-after') * 1000;\n\n      if (retry > 0) {\n        return sleep(retry).then(() => webAuthCheckLogin(doneUrl, opts));\n      } else {\n        return webAuthCheckLogin(doneUrl, opts);\n      }\n    } else {\n      throw new WebLoginInvalidResponse('GET', res, content);\n    }\n  });\n};\n\nconst adduserCouch = function (username, email, password) {\n  let opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const body = {\n    _id: 'org.couchdb.user:' + username,\n    name: username,\n    password: password,\n    email: email,\n    type: 'user',\n    roles: [],\n    date: new Date().toISOString()\n  };\n  const logObj = { ...body,\n    password: 'XXXXX'\n  };\n  log.verbose('adduser', 'before first PUT', logObj);\n  const target = '/-/user/org.couchdb.user:' + encodeURIComponent(username);\n  return fetch.json(target, { ...opts,\n    method: 'PUT',\n    body\n  }).then(result => {\n    result.username = username;\n    return result;\n  });\n};\n\nconst loginCouch = function (username, password) {\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const body = {\n    _id: 'org.couchdb.user:' + username,\n    name: username,\n    password: password,\n    type: 'user',\n    roles: [],\n    date: new Date().toISOString()\n  };\n  const logObj = { ...body,\n    password: 'XXXXX'\n  };\n  log.verbose('login', 'before first PUT', logObj);\n  const target = '/-/user/org.couchdb.user:' + encodeURIComponent(username);\n  return fetch.json(target, { ...opts,\n    method: 'PUT',\n    body\n  }).catch(err => {\n    if (err.code === 'E400') {\n      err.message = `There is no user with the username \"${username}\".`;\n      throw err;\n    }\n\n    if (err.code !== 'E409') {\n      throw err;\n    }\n\n    return fetch.json(target, { ...opts,\n      query: {\n        write: true\n      }\n    }).then(result => {\n      Object.keys(result).forEach(k => {\n        if (!body[k] || k === 'roles') {\n          body[k] = result[k];\n        }\n      });\n      const {\n        otp\n      } = opts;\n      return fetch.json(`${target}/-rev/${body._rev}`, { ...opts,\n        method: 'PUT',\n        body,\n        forceAuth: {\n          username,\n          password: Buffer.from(password, 'utf8').toString('base64'),\n          otp\n        }\n      });\n    });\n  }).then(result => {\n    result.username = username;\n    return result;\n  });\n};\n\nconst get = function () {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return fetch.json('/-/npm/v1/user', opts);\n};\n\nconst set = function (profile) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  Object.keys(profile).forEach(key => {\n    // profile keys can't be empty strings, but they CAN be null\n    if (profile[key] === '') {\n      profile[key] = null;\n    }\n  });\n  return fetch.json('/-/npm/v1/user', { ...opts,\n    method: 'POST',\n    body: profile\n  });\n};\n\nconst listTokens = function () {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  const untilLastPage = (href, objects) => {\n    return fetch.json(href, opts).then(result => {\n      objects = objects ? objects.concat(result.objects) : result.objects;\n\n      if (result.urls.next) {\n        return untilLastPage(result.urls.next, objects);\n      } else {\n        return objects;\n      }\n    });\n  };\n\n  return untilLastPage('/-/npm/v1/tokens');\n};\n\nconst removeToken = function (tokenKey) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const target = `/-/npm/v1/tokens/token/${tokenKey}`;\n  return fetch(target, { ...opts,\n    method: 'DELETE',\n    ignoreBody: true\n  }).then(() => null);\n};\n\nconst createToken = function (password, readonly, cidrs) {\n  let opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return fetch.json('/-/npm/v1/tokens', { ...opts,\n    method: 'POST',\n    body: {\n      password: password,\n      readonly: readonly,\n      cidr_whitelist: cidrs\n    }\n  });\n};\n\nclass WebLoginInvalidResponse extends HttpErrorBase {\n  constructor(method, res, body) {\n    super(method, res, body);\n    this.message = 'Invalid response from web login endpoint';\n    Error.captureStackTrace(this, WebLoginInvalidResponse);\n  }\n\n}\n\nclass WebLoginNotSupported extends HttpErrorBase {\n  constructor(method, res, body) {\n    super(method, res, body);\n    this.message = 'Web login not supported';\n    this.code = 'ENYI';\n    Error.captureStackTrace(this, WebLoginNotSupported);\n  }\n\n}\n\nconst sleep = ms => new Promise((resolve, reject) => setTimeout(resolve, ms));\n\nmodule.exports = {\n  adduserCouch,\n  loginCouch,\n  adduserWeb,\n  loginWeb,\n  login,\n  adduser,\n  get,\n  set,\n  listTokens,\n  removeToken,\n  createToken,\n  webAuthCheckLogin\n};","map":{"version":3,"names":["fetch","require","HttpErrorBase","EventEmitter","os","URL","log","login","opener","prompter","opts","creds","loginWeb","catch","er","WebLoginNotSupported","verbose","then","data","loginCouch","username","password","adduser","adduserWeb","adduserCouch","email","webAuth","create","isValidUrl","u","test","protocol","body","hostname","target","doneEmitter","method","res","Promise","all","json","content","doneUrl","loginUrl","WebLoginInvalidResponse","openPromise","webAuthCheckPromise","webAuthCheckLogin","cache","authResult","emit","statusCode","status","headers","raw","token","retry","get","sleep","_id","name","type","roles","date","Date","toISOString","logObj","encodeURIComponent","result","err","code","message","query","write","Object","keys","forEach","k","otp","_rev","forceAuth","Buffer","from","toString","set","profile","key","listTokens","untilLastPage","href","objects","concat","urls","next","removeToken","tokenKey","ignoreBody","createToken","readonly","cidrs","cidr_whitelist","constructor","Error","captureStackTrace","ms","resolve","reject","setTimeout","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/npm-profile/lib/index.js"],"sourcesContent":["'use strict'\n\nconst fetch = require('npm-registry-fetch')\nconst { HttpErrorBase } = require('npm-registry-fetch/lib/errors')\nconst EventEmitter = require('events')\nconst os = require('os')\nconst { URL } = require('url')\nconst log = require('proc-log')\n\n// try loginWeb, catch the \"not supported\" message and fall back to couch\nconst login = (opener, prompter, opts = {}) => {\n  const { creds } = opts\n  return loginWeb(opener, opts).catch(er => {\n    if (er instanceof WebLoginNotSupported) {\n      log.verbose('web login not supported, trying couch')\n      return prompter(creds)\n        .then(data => loginCouch(data.username, data.password, opts))\n    } else {\n      throw er\n    }\n  })\n}\n\nconst adduser = (opener, prompter, opts = {}) => {\n  const { creds } = opts\n  return adduserWeb(opener, opts).catch(er => {\n    if (er instanceof WebLoginNotSupported) {\n      log.verbose('web adduser not supported, trying couch')\n      return prompter(creds)\n        .then(data => adduserCouch(data.username, data.email, data.password, opts))\n    } else {\n      throw er\n    }\n  })\n}\n\nconst adduserWeb = (opener, opts = {}) => {\n  log.verbose('web adduser', 'before first POST')\n  return webAuth(opener, opts, { create: true })\n}\n\nconst loginWeb = (opener, opts = {}) => {\n  log.verbose('web login', 'before first POST')\n  return webAuth(opener, opts, {})\n}\n\nconst isValidUrl = u => {\n  try {\n    return /^https?:$/.test(new URL(u).protocol)\n  } catch (er) {\n    return false\n  }\n}\n\nconst webAuth = (opener, opts, body) => {\n  const { hostname } = opts\n  body.hostname = hostname || os.hostname()\n  const target = '/-/v1/login'\n  const doneEmitter = new EventEmitter()\n  return fetch(target, {\n    ...opts,\n    method: 'POST',\n    body,\n  }).then(res => {\n    return Promise.all([res, res.json()])\n  }).then(([res, content]) => {\n    const { doneUrl, loginUrl } = content\n    log.verbose('web auth', 'got response', content)\n    if (!isValidUrl(doneUrl) || !isValidUrl(loginUrl)) {\n      throw new WebLoginInvalidResponse('POST', res, content)\n    }\n    return content\n  }).then(({ doneUrl, loginUrl }) => {\n    log.verbose('web auth', 'opening url pair')\n\n    const openPromise = opener(loginUrl, doneEmitter)\n    const webAuthCheckPromise = webAuthCheckLogin(doneUrl, { ...opts, cache: false })\n      .then(authResult => {\n        log.verbose('web auth', 'done-check finished')\n\n        // cancel open prompt if it's present\n        doneEmitter.emit('abort')\n\n        return authResult\n      })\n\n    return Promise.all([openPromise, webAuthCheckPromise]).then(\n      // pick the auth result and pass it along\n      ([, authResult]) => authResult\n    )\n  }).catch(er => {\n    // cancel open prompt if it's present\n    doneEmitter.emit('abort')\n\n    if ((er.statusCode >= 400 && er.statusCode <= 499) || er.statusCode === 500) {\n      throw new WebLoginNotSupported('POST', {\n        status: er.statusCode,\n        headers: { raw: () => er.headers },\n      }, er.body)\n    } else {\n      throw er\n    }\n  })\n}\n\nconst webAuthCheckLogin = (doneUrl, opts) => {\n  return fetch(doneUrl, opts).then(res => {\n    return Promise.all([res, res.json()])\n  }).then(([res, content]) => {\n    if (res.status === 200) {\n      if (!content.token) {\n        throw new WebLoginInvalidResponse('GET', res, content)\n      } else {\n        return content\n      }\n    } else if (res.status === 202) {\n      const retry = +res.headers.get('retry-after') * 1000\n      if (retry > 0) {\n        return sleep(retry).then(() => webAuthCheckLogin(doneUrl, opts))\n      } else {\n        return webAuthCheckLogin(doneUrl, opts)\n      }\n    } else {\n      throw new WebLoginInvalidResponse('GET', res, content)\n    }\n  })\n}\n\nconst adduserCouch = (username, email, password, opts = {}) => {\n  const body = {\n    _id: 'org.couchdb.user:' + username,\n    name: username,\n    password: password,\n    email: email,\n    type: 'user',\n    roles: [],\n    date: new Date().toISOString(),\n  }\n  const logObj = {\n    ...body,\n    password: 'XXXXX',\n  }\n  log.verbose('adduser', 'before first PUT', logObj)\n\n  const target = '/-/user/org.couchdb.user:' + encodeURIComponent(username)\n  return fetch.json(target, {\n    ...opts,\n    method: 'PUT',\n    body,\n  }).then(result => {\n    result.username = username\n    return result\n  })\n}\n\nconst loginCouch = (username, password, opts = {}) => {\n  const body = {\n    _id: 'org.couchdb.user:' + username,\n    name: username,\n    password: password,\n    type: 'user',\n    roles: [],\n    date: new Date().toISOString(),\n  }\n  const logObj = {\n    ...body,\n    password: 'XXXXX',\n  }\n  log.verbose('login', 'before first PUT', logObj)\n\n  const target = '/-/user/org.couchdb.user:' + encodeURIComponent(username)\n  return fetch.json(target, {\n    ...opts,\n    method: 'PUT',\n    body,\n  }).catch(err => {\n    if (err.code === 'E400') {\n      err.message = `There is no user with the username \"${username}\".`\n      throw err\n    }\n    if (err.code !== 'E409') {\n      throw err\n    }\n    return fetch.json(target, {\n      ...opts,\n      query: { write: true },\n    }).then(result => {\n      Object.keys(result).forEach(k => {\n        if (!body[k] || k === 'roles') {\n          body[k] = result[k]\n        }\n      })\n      const { otp } = opts\n      return fetch.json(`${target}/-rev/${body._rev}`, {\n        ...opts,\n        method: 'PUT',\n        body,\n        forceAuth: {\n          username,\n          password: Buffer.from(password, 'utf8').toString('base64'),\n          otp,\n        },\n      })\n    })\n  }).then(result => {\n    result.username = username\n    return result\n  })\n}\n\nconst get = (opts = {}) => fetch.json('/-/npm/v1/user', opts)\n\nconst set = (profile, opts = {}) => {\n  Object.keys(profile).forEach(key => {\n    // profile keys can't be empty strings, but they CAN be null\n    if (profile[key] === '') {\n      profile[key] = null\n    }\n  })\n  return fetch.json('/-/npm/v1/user', {\n    ...opts,\n    method: 'POST',\n    body: profile,\n  })\n}\n\nconst listTokens = (opts = {}) => {\n  const untilLastPage = (href, objects) => {\n    return fetch.json(href, opts).then(result => {\n      objects = objects ? objects.concat(result.objects) : result.objects\n      if (result.urls.next) {\n        return untilLastPage(result.urls.next, objects)\n      } else {\n        return objects\n      }\n    })\n  }\n  return untilLastPage('/-/npm/v1/tokens')\n}\n\nconst removeToken = (tokenKey, opts = {}) => {\n  const target = `/-/npm/v1/tokens/token/${tokenKey}`\n  return fetch(target, {\n    ...opts,\n    method: 'DELETE',\n    ignoreBody: true,\n  }).then(() => null)\n}\n\nconst createToken = (password, readonly, cidrs, opts = {}) => {\n  return fetch.json('/-/npm/v1/tokens', {\n    ...opts,\n    method: 'POST',\n    body: {\n      password: password,\n      readonly: readonly,\n      cidr_whitelist: cidrs,\n    },\n  })\n}\n\nclass WebLoginInvalidResponse extends HttpErrorBase {\n  constructor (method, res, body) {\n    super(method, res, body)\n    this.message = 'Invalid response from web login endpoint'\n    Error.captureStackTrace(this, WebLoginInvalidResponse)\n  }\n}\n\nclass WebLoginNotSupported extends HttpErrorBase {\n  constructor (method, res, body) {\n    super(method, res, body)\n    this.message = 'Web login not supported'\n    this.code = 'ENYI'\n    Error.captureStackTrace(this, WebLoginNotSupported)\n  }\n}\n\nconst sleep = (ms) =>\n  new Promise((resolve, reject) => setTimeout(resolve, ms))\n\nmodule.exports = {\n  adduserCouch,\n  loginCouch,\n  adduserWeb,\n  loginWeb,\n  login,\n  adduser,\n  get,\n  set,\n  listTokens,\n  removeToken,\n  createToken,\n  webAuthCheckLogin,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}