{"ast":null,"code":"// Base command for opening urls from a package manifest (bugs, docs, repo)\nconst pacote = require('pacote');\n\nconst hostedGitInfo = require('hosted-git-info');\n\nconst openUrl = require('./utils/open-url.js');\n\nconst log = require('./utils/log-shim');\n\nconst BaseCommand = require('./base-command.js');\n\nclass PackageUrlCommand extends BaseCommand {\n  static ignoreImplicitWorkspace = false;\n  static params = ['browser', 'registry', 'workspace', 'workspaces', 'include-workspace-root'];\n  static usage = ['[<pkgname> [<pkgname> ...]]'];\n\n  async exec(args) {\n    if (!args || !args.length) {\n      args = ['.'];\n    }\n\n    for (const arg of args) {\n      // XXX It is very odd that `where` is how pacote knows to look anywhere\n      // other than the cwd.\n      const opts = { ...this.npm.flatOptions,\n        where: this.npm.localPrefix,\n        fullMetadata: true\n      };\n      const mani = await pacote.manifest(arg, opts);\n      const url = this.getUrl(arg, mani);\n      log.silly(this.name, 'url', url);\n      await openUrl(this.npm, url, `${mani.name} ${this.name} available at the following URL`);\n    }\n  }\n\n  async execWorkspaces(args, filters) {\n    if (args && args.length) {\n      return this.exec(args);\n    }\n\n    await this.setWorkspaces(filters);\n    return this.exec(this.workspacePaths);\n  } // given a manifest, try to get the hosted git info from it based on\n  // repository (if a string) or repository.url (if an object) returns null\n  // if it's not a valid repo, or not a known hosted repo\n\n\n  hostedFromMani(mani) {\n    const r = mani.repository;\n    const rurl = !r ? null : typeof r === 'string' ? r : typeof r === 'object' && typeof r.url === 'string' ? r.url : null; // hgi returns undefined sometimes, but let's always return null here\n\n    return rurl && hostedGitInfo.fromUrl(rurl.replace(/^git\\+/, '')) || null;\n  }\n\n}\n\nmodule.exports = PackageUrlCommand;","map":{"version":3,"names":["pacote","require","hostedGitInfo","openUrl","log","BaseCommand","PackageUrlCommand","ignoreImplicitWorkspace","params","usage","exec","args","length","arg","opts","npm","flatOptions","where","localPrefix","fullMetadata","mani","manifest","url","getUrl","silly","name","execWorkspaces","filters","setWorkspaces","workspacePaths","hostedFromMani","r","repository","rurl","fromUrl","replace","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/package-url-cmd.js"],"sourcesContent":["// Base command for opening urls from a package manifest (bugs, docs, repo)\n\nconst pacote = require('pacote')\nconst hostedGitInfo = require('hosted-git-info')\n\nconst openUrl = require('./utils/open-url.js')\nconst log = require('./utils/log-shim')\n\nconst BaseCommand = require('./base-command.js')\nclass PackageUrlCommand extends BaseCommand {\n  static ignoreImplicitWorkspace = false\n  static params = [\n    'browser',\n    'registry',\n    'workspace',\n    'workspaces',\n    'include-workspace-root',\n  ]\n\n  static usage = ['[<pkgname> [<pkgname> ...]]']\n\n  async exec (args) {\n    if (!args || !args.length) {\n      args = ['.']\n    }\n\n    for (const arg of args) {\n      // XXX It is very odd that `where` is how pacote knows to look anywhere\n      // other than the cwd.\n      const opts = {\n        ...this.npm.flatOptions,\n        where: this.npm.localPrefix,\n        fullMetadata: true,\n      }\n      const mani = await pacote.manifest(arg, opts)\n      const url = this.getUrl(arg, mani)\n      log.silly(this.name, 'url', url)\n      await openUrl(this.npm, url, `${mani.name} ${this.name} available at the following URL`)\n    }\n  }\n\n  async execWorkspaces (args, filters) {\n    if (args && args.length) {\n      return this.exec(args)\n    }\n    await this.setWorkspaces(filters)\n    return this.exec(this.workspacePaths)\n  }\n\n  // given a manifest, try to get the hosted git info from it based on\n  // repository (if a string) or repository.url (if an object) returns null\n  // if it's not a valid repo, or not a known hosted repo\n  hostedFromMani (mani) {\n    const r = mani.repository\n    const rurl = !r ? null\n      : typeof r === 'string' ? r\n      : typeof r === 'object' && typeof r.url === 'string' ? r.url\n      : null\n\n    // hgi returns undefined sometimes, but let's always return null here\n    return (rurl && hostedGitInfo.fromUrl(rurl.replace(/^git\\+/, ''))) || null\n  }\n}\nmodule.exports = PackageUrlCommand\n"],"mappings":"AAAA;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA7B;;AAEA,MAAME,OAAO,GAAGF,OAAO,CAAC,qBAAD,CAAvB;;AACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,kBAAD,CAAnB;;AAEA,MAAMI,WAAW,GAAGJ,OAAO,CAAC,mBAAD,CAA3B;;AACA,MAAMK,iBAAN,SAAgCD,WAAhC,CAA4C;EACZ,OAAvBE,uBAAuB,GAAG,KAAH;EACjB,OAANC,MAAM,GAAG,CACd,SADc,EAEd,UAFc,EAGd,WAHc,EAId,YAJc,EAKd,wBALc,CAAH;EAQD,OAALC,KAAK,GAAG,CAAC,6BAAD,CAAH;;EAEF,MAAJC,IAAI,CAAEC,IAAF,EAAQ;IAChB,IAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACC,MAAnB,EAA2B;MACzBD,IAAI,GAAG,CAAC,GAAD,CAAP;IACD;;IAED,KAAK,MAAME,GAAX,IAAkBF,IAAlB,EAAwB;MACtB;MACA;MACA,MAAMG,IAAI,GAAG,EACX,GAAG,KAAKC,GAAL,CAASC,WADD;QAEXC,KAAK,EAAE,KAAKF,GAAL,CAASG,WAFL;QAGXC,YAAY,EAAE;MAHH,CAAb;MAKA,MAAMC,IAAI,GAAG,MAAMpB,MAAM,CAACqB,QAAP,CAAgBR,GAAhB,EAAqBC,IAArB,CAAnB;MACA,MAAMQ,GAAG,GAAG,KAAKC,MAAL,CAAYV,GAAZ,EAAiBO,IAAjB,CAAZ;MACAhB,GAAG,CAACoB,KAAJ,CAAU,KAAKC,IAAf,EAAqB,KAArB,EAA4BH,GAA5B;MACA,MAAMnB,OAAO,CAAC,KAAKY,GAAN,EAAWO,GAAX,EAAiB,GAAEF,IAAI,CAACK,IAAK,IAAG,KAAKA,IAAK,iCAA1C,CAAb;IACD;EACF;;EAEmB,MAAdC,cAAc,CAAEf,IAAF,EAAQgB,OAAR,EAAiB;IACnC,IAAIhB,IAAI,IAAIA,IAAI,CAACC,MAAjB,EAAyB;MACvB,OAAO,KAAKF,IAAL,CAAUC,IAAV,CAAP;IACD;;IACD,MAAM,KAAKiB,aAAL,CAAmBD,OAAnB,CAAN;IACA,OAAO,KAAKjB,IAAL,CAAU,KAAKmB,cAAf,CAAP;EACD,CAtCyC,CAwC1C;EACA;EACA;;;EACAC,cAAc,CAAEV,IAAF,EAAQ;IACpB,MAAMW,CAAC,GAAGX,IAAI,CAACY,UAAf;IACA,MAAMC,IAAI,GAAG,CAACF,CAAD,GAAK,IAAL,GACT,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAxB,GACA,OAAOA,CAAP,KAAa,QAAb,IAAyB,OAAOA,CAAC,CAACT,GAAT,KAAiB,QAA1C,GAAqDS,CAAC,CAACT,GAAvD,GACA,IAHJ,CAFoB,CAOpB;;IACA,OAAQW,IAAI,IAAI/B,aAAa,CAACgC,OAAd,CAAsBD,IAAI,CAACE,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAAtB,CAAT,IAA+D,IAAtE;EACD;;AApDyC;;AAsD5CC,MAAM,CAACC,OAAP,GAAiB/B,iBAAjB"},"metadata":{},"sourceType":"script"}