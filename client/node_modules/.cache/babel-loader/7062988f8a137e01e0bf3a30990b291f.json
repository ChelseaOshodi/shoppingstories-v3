{"ast":null,"code":"const cacache = require('cacache');\n\nconst {\n  promisify\n} = require('util');\n\nconst pacote = require('pacote');\n\nconst path = require('path');\n\nconst rimraf = promisify(require('rimraf'));\n\nconst semver = require('semver');\n\nconst BaseCommand = require('../base-command.js');\n\nconst npa = require('npm-package-arg');\n\nconst jsonParse = require('json-parse-even-better-errors');\n\nconst localeCompare = require('@isaacs/string-locale-compare')('en');\n\nconst log = require('../utils/log-shim');\n\nconst searchCachePackage = async (path, parsed, cacheKeys) => {\n  /* eslint-disable-next-line max-len */\n  const searchMFH = new RegExp(`^make-fetch-happen:request-cache:.*(?<!/[@a-zA-Z]+)/${parsed.name}/-/(${parsed.name}[^/]+.tgz)$`);\n  const searchPack = new RegExp(`^make-fetch-happen:request-cache:.*/${parsed.escapedName}$`);\n  const results = new Set();\n  cacheKeys = new Set(cacheKeys);\n\n  for (const key of cacheKeys) {\n    // match on the public key registry url format\n    if (searchMFH.test(key)) {\n      // extract the version from the filename\n      const filename = key.match(searchMFH)[1];\n      const noExt = filename.slice(0, -4);\n      const noScope = `${parsed.name.split('/').pop()}-`;\n      const ver = noExt.slice(noScope.length);\n\n      if (semver.satisfies(ver, parsed.rawSpec)) {\n        results.add(key);\n      }\n\n      continue;\n    } // is this key a packument?\n\n\n    if (!searchPack.test(key)) {\n      continue;\n    }\n\n    results.add(key);\n    let packument, details;\n\n    try {\n      details = await cacache.get(path, key);\n      packument = jsonParse(details.data);\n    } catch (_) {\n      // if we couldn't parse the packument, abort\n      continue;\n    }\n\n    if (!packument.versions || typeof packument.versions !== 'object') {\n      continue;\n    } // assuming this is a packument\n\n\n    for (const ver of Object.keys(packument.versions)) {\n      if (semver.satisfies(ver, parsed.rawSpec)) {\n        if (packument.versions[ver].dist && typeof packument.versions[ver].dist === 'object' && packument.versions[ver].dist.tarball !== undefined && cacheKeys.has(`make-fetch-happen:request-cache:${packument.versions[ver].dist.tarball}`)) {\n          results.add(`make-fetch-happen:request-cache:${packument.versions[ver].dist.tarball}`);\n        }\n      }\n    }\n  }\n\n  return results;\n};\n\nclass Cache extends BaseCommand {\n  static description = 'Manipulates packages cache';\n  static name = 'cache';\n  static params = ['cache'];\n  static usage = ['add <package-spec>', 'clean [<key>]', 'ls [<name>@<version>]', 'verify'];\n  static ignoreImplicitWorkspace = true;\n\n  async completion(opts) {\n    const argv = opts.conf.argv.remain;\n\n    if (argv.length === 2) {\n      return ['add', 'clean', 'verify', 'ls', 'delete'];\n    } // TODO - eventually...\n\n\n    switch (argv[2]) {\n      case 'verify':\n      case 'clean':\n      case 'add':\n      case 'ls':\n      case 'delete':\n        return [];\n    }\n  }\n\n  async exec(args) {\n    const cmd = args.shift();\n\n    switch (cmd) {\n      case 'rm':\n      case 'clear':\n      case 'clean':\n        return await this.clean(args);\n\n      case 'add':\n        return await this.add(args);\n\n      case 'verify':\n      case 'check':\n        return await this.verify();\n\n      case 'ls':\n        return await this.ls(args);\n\n      default:\n        throw this.usageError();\n    }\n  } // npm cache clean [pkg]*\n\n\n  async clean(args) {\n    const cachePath = path.join(this.npm.cache, '_cacache');\n\n    if (args.length === 0) {\n      if (!this.npm.config.get('force')) {\n        throw new Error(`As of npm@5, the npm cache self-heals from corruption issues\n  by treating integrity mismatches as cache misses.  As a result,\n  data extracted from the cache is guaranteed to be valid.  If you\n  want to make sure everything is consistent, use \\`npm cache verify\\`\n  instead.  Deleting the cache can only make npm go slower, and is\n  not likely to correct any problems you may be encountering!\n\n  On the other hand, if you're debugging an issue with the installer,\n  or race conditions that depend on the timing of writing to an empty\n  cache, you can use \\`npm install --cache /tmp/empty-cache\\` to use a\n  temporary cache instead of nuking the actual one.\n\n  If you're sure you want to delete the entire cache, rerun this command\n  with --force.`);\n      }\n\n      return rimraf(cachePath);\n    }\n\n    for (const key of args) {\n      let entry;\n\n      try {\n        entry = await cacache.get(cachePath, key);\n      } catch (err) {\n        log.warn(`Not Found: ${key}`);\n        break;\n      }\n\n      this.npm.output(`Deleted: ${key}`);\n      await cacache.rm.entry(cachePath, key); // XXX this could leave other entries without content!\n\n      await cacache.rm.content(cachePath, entry.integrity);\n    }\n  } // npm cache add <tarball-url>...\n  // npm cache add <pkg> <ver>...\n  // npm cache add <tarball>...\n  // npm cache add <folder>...\n\n\n  async add(args) {\n    log.silly('cache add', 'args', args);\n\n    if (args.length === 0) {\n      throw this.usageError('First argument to `add` is required');\n    }\n\n    return Promise.all(args.map(spec => {\n      log.silly('cache add', 'spec', spec); // we ask pacote for the thing, and then just throw the data\n      // away so that it tee-pipes it into the cache like it does\n      // for a normal request.\n\n      return pacote.tarball.stream(spec, stream => {\n        stream.resume();\n        return stream.promise();\n      }, this.npm.flatOptions);\n    }));\n  }\n\n  async verify() {\n    const cache = path.join(this.npm.cache, '_cacache');\n    const prefix = cache.indexOf(process.env.HOME) === 0 ? `~${cache.slice(process.env.HOME.length)}` : cache;\n    const stats = await cacache.verify(cache);\n    this.npm.output(`Cache verified and compressed (${prefix})`);\n    this.npm.output(`Content verified: ${stats.verifiedContent} (${stats.keptSize} bytes)`);\n\n    if (stats.badContentCount) {\n      this.npm.output(`Corrupted content removed: ${stats.badContentCount}`);\n    }\n\n    if (stats.reclaimedCount) {\n      /* eslint-disable-next-line max-len */\n      this.npm.output(`Content garbage-collected: ${stats.reclaimedCount} (${stats.reclaimedSize} bytes)`);\n    }\n\n    if (stats.missingContent) {\n      this.npm.output(`Missing content: ${stats.missingContent}`);\n    }\n\n    this.npm.output(`Index entries: ${stats.totalEntries}`);\n    this.npm.output(`Finished in ${stats.runTime.total / 1000}s`);\n  } // npm cache ls [--package <spec> ...]\n\n\n  async ls(specs) {\n    const cachePath = path.join(this.npm.cache, '_cacache');\n    const cacheKeys = Object.keys(await cacache.ls(cachePath));\n\n    if (specs.length > 0) {\n      // get results for each package spec specified\n      const results = new Set();\n\n      for (const spec of specs) {\n        const parsed = npa(spec);\n\n        if (parsed.rawSpec !== '' && parsed.type === 'tag') {\n          throw this.usageError('Cannot list cache keys for a tagged package.');\n        }\n\n        const keySet = await searchCachePackage(cachePath, parsed, cacheKeys);\n\n        for (const key of keySet) {\n          results.add(key);\n        }\n      }\n\n      [...results].sort(localeCompare).forEach(key => this.npm.output(key));\n      return;\n    }\n\n    cacheKeys.sort(localeCompare).forEach(key => this.npm.output(key));\n  }\n\n}\n\nmodule.exports = Cache;","map":{"version":3,"names":["cacache","require","promisify","pacote","path","rimraf","semver","BaseCommand","npa","jsonParse","localeCompare","log","searchCachePackage","parsed","cacheKeys","searchMFH","RegExp","name","searchPack","escapedName","results","Set","key","test","filename","match","noExt","slice","noScope","split","pop","ver","length","satisfies","rawSpec","add","packument","details","get","data","_","versions","Object","keys","dist","tarball","undefined","has","Cache","description","params","usage","ignoreImplicitWorkspace","completion","opts","argv","conf","remain","exec","args","cmd","shift","clean","verify","ls","usageError","cachePath","join","npm","cache","config","Error","entry","err","warn","output","rm","content","integrity","silly","Promise","all","map","spec","stream","resume","promise","flatOptions","prefix","indexOf","process","env","HOME","stats","verifiedContent","keptSize","badContentCount","reclaimedCount","reclaimedSize","missingContent","totalEntries","runTime","total","specs","type","keySet","sort","forEach","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/commands/cache.js"],"sourcesContent":["const cacache = require('cacache')\nconst { promisify } = require('util')\nconst pacote = require('pacote')\nconst path = require('path')\nconst rimraf = promisify(require('rimraf'))\nconst semver = require('semver')\nconst BaseCommand = require('../base-command.js')\nconst npa = require('npm-package-arg')\nconst jsonParse = require('json-parse-even-better-errors')\nconst localeCompare = require('@isaacs/string-locale-compare')('en')\nconst log = require('../utils/log-shim')\n\nconst searchCachePackage = async (path, parsed, cacheKeys) => {\n  /* eslint-disable-next-line max-len */\n  const searchMFH = new RegExp(`^make-fetch-happen:request-cache:.*(?<!/[@a-zA-Z]+)/${parsed.name}/-/(${parsed.name}[^/]+.tgz)$`)\n  const searchPack = new RegExp(`^make-fetch-happen:request-cache:.*/${parsed.escapedName}$`)\n  const results = new Set()\n  cacheKeys = new Set(cacheKeys)\n  for (const key of cacheKeys) {\n    // match on the public key registry url format\n    if (searchMFH.test(key)) {\n      // extract the version from the filename\n      const filename = key.match(searchMFH)[1]\n      const noExt = filename.slice(0, -4)\n      const noScope = `${parsed.name.split('/').pop()}-`\n      const ver = noExt.slice(noScope.length)\n      if (semver.satisfies(ver, parsed.rawSpec)) {\n        results.add(key)\n      }\n      continue\n    }\n    // is this key a packument?\n    if (!searchPack.test(key)) {\n      continue\n    }\n\n    results.add(key)\n    let packument, details\n    try {\n      details = await cacache.get(path, key)\n      packument = jsonParse(details.data)\n    } catch (_) {\n      // if we couldn't parse the packument, abort\n      continue\n    }\n    if (!packument.versions || typeof packument.versions !== 'object') {\n      continue\n    }\n\n    // assuming this is a packument\n    for (const ver of Object.keys(packument.versions)) {\n      if (semver.satisfies(ver, parsed.rawSpec)) {\n        if (packument.versions[ver].dist &&\n          typeof packument.versions[ver].dist === 'object' &&\n          packument.versions[ver].dist.tarball !== undefined &&\n          cacheKeys.has(`make-fetch-happen:request-cache:${packument.versions[ver].dist.tarball}`)\n        ) {\n          results.add(`make-fetch-happen:request-cache:${packument.versions[ver].dist.tarball}`)\n        }\n      }\n    }\n  }\n  return results\n}\n\nclass Cache extends BaseCommand {\n  static description = 'Manipulates packages cache'\n  static name = 'cache'\n  static params = ['cache']\n  static usage = [\n    'add <package-spec>',\n    'clean [<key>]',\n    'ls [<name>@<version>]',\n    'verify',\n  ]\n\n  static ignoreImplicitWorkspace = true\n\n  async completion (opts) {\n    const argv = opts.conf.argv.remain\n    if (argv.length === 2) {\n      return ['add', 'clean', 'verify', 'ls', 'delete']\n    }\n\n    // TODO - eventually...\n    switch (argv[2]) {\n      case 'verify':\n      case 'clean':\n      case 'add':\n      case 'ls':\n      case 'delete':\n        return []\n    }\n  }\n\n  async exec (args) {\n    const cmd = args.shift()\n    switch (cmd) {\n      case 'rm': case 'clear': case 'clean':\n        return await this.clean(args)\n      case 'add':\n        return await this.add(args)\n      case 'verify': case 'check':\n        return await this.verify()\n      case 'ls':\n        return await this.ls(args)\n      default:\n        throw this.usageError()\n    }\n  }\n\n  // npm cache clean [pkg]*\n  async clean (args) {\n    const cachePath = path.join(this.npm.cache, '_cacache')\n    if (args.length === 0) {\n      if (!this.npm.config.get('force')) {\n        throw new Error(`As of npm@5, the npm cache self-heals from corruption issues\n  by treating integrity mismatches as cache misses.  As a result,\n  data extracted from the cache is guaranteed to be valid.  If you\n  want to make sure everything is consistent, use \\`npm cache verify\\`\n  instead.  Deleting the cache can only make npm go slower, and is\n  not likely to correct any problems you may be encountering!\n\n  On the other hand, if you're debugging an issue with the installer,\n  or race conditions that depend on the timing of writing to an empty\n  cache, you can use \\`npm install --cache /tmp/empty-cache\\` to use a\n  temporary cache instead of nuking the actual one.\n\n  If you're sure you want to delete the entire cache, rerun this command\n  with --force.`)\n      }\n      return rimraf(cachePath)\n    }\n    for (const key of args) {\n      let entry\n      try {\n        entry = await cacache.get(cachePath, key)\n      } catch (err) {\n        log.warn(`Not Found: ${key}`)\n        break\n      }\n      this.npm.output(`Deleted: ${key}`)\n      await cacache.rm.entry(cachePath, key)\n      // XXX this could leave other entries without content!\n      await cacache.rm.content(cachePath, entry.integrity)\n    }\n  }\n\n  // npm cache add <tarball-url>...\n  // npm cache add <pkg> <ver>...\n  // npm cache add <tarball>...\n  // npm cache add <folder>...\n  async add (args) {\n    log.silly('cache add', 'args', args)\n    if (args.length === 0) {\n      throw this.usageError('First argument to `add` is required')\n    }\n\n    return Promise.all(args.map(spec => {\n      log.silly('cache add', 'spec', spec)\n      // we ask pacote for the thing, and then just throw the data\n      // away so that it tee-pipes it into the cache like it does\n      // for a normal request.\n      return pacote.tarball.stream(spec, stream => {\n        stream.resume()\n        return stream.promise()\n      }, this.npm.flatOptions)\n    }))\n  }\n\n  async verify () {\n    const cache = path.join(this.npm.cache, '_cacache')\n    const prefix = cache.indexOf(process.env.HOME) === 0\n      ? `~${cache.slice(process.env.HOME.length)}`\n      : cache\n    const stats = await cacache.verify(cache)\n    this.npm.output(`Cache verified and compressed (${prefix})`)\n    this.npm.output(`Content verified: ${stats.verifiedContent} (${stats.keptSize} bytes)`)\n    if (stats.badContentCount) {\n      this.npm.output(`Corrupted content removed: ${stats.badContentCount}`)\n    }\n    if (stats.reclaimedCount) {\n      /* eslint-disable-next-line max-len */\n      this.npm.output(`Content garbage-collected: ${stats.reclaimedCount} (${stats.reclaimedSize} bytes)`)\n    }\n    if (stats.missingContent) {\n      this.npm.output(`Missing content: ${stats.missingContent}`)\n    }\n    this.npm.output(`Index entries: ${stats.totalEntries}`)\n    this.npm.output(`Finished in ${stats.runTime.total / 1000}s`)\n  }\n\n  // npm cache ls [--package <spec> ...]\n  async ls (specs) {\n    const cachePath = path.join(this.npm.cache, '_cacache')\n    const cacheKeys = Object.keys(await cacache.ls(cachePath))\n    if (specs.length > 0) {\n      // get results for each package spec specified\n      const results = new Set()\n      for (const spec of specs) {\n        const parsed = npa(spec)\n        if (parsed.rawSpec !== '' && parsed.type === 'tag') {\n          throw this.usageError('Cannot list cache keys for a tagged package.')\n        }\n        const keySet = await searchCachePackage(cachePath, parsed, cacheKeys)\n        for (const key of keySet) {\n          results.add(key)\n        }\n      }\n      [...results].sort(localeCompare).forEach(key => this.npm.output(key))\n      return\n    }\n    cacheKeys.sort(localeCompare).forEach(key => this.npm.output(key))\n  }\n}\n\nmodule.exports = Cache\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}