{"ast":null,"code":"const libaccess = require('libnpmaccess');\n\nconst libunpub = require('libnpmpublish').unpublish;\n\nconst npa = require('npm-package-arg');\n\nconst npmFetch = require('npm-registry-fetch');\n\nconst path = require('path');\n\nconst util = require('util');\n\nconst readJson = util.promisify(require('read-package-json'));\n\nconst flatten = require('../utils/config/flatten.js');\n\nconst getIdentity = require('../utils/get-identity.js');\n\nconst log = require('../utils/log-shim');\n\nconst otplease = require('../utils/otplease.js');\n\nconst LAST_REMAINING_VERSION_ERROR = 'Refusing to delete the last version of the package. ' + 'It will block from republishing a new version for 24 hours.\\n' + 'Run with --force to do this.';\n\nconst BaseCommand = require('../base-command.js');\n\nclass Unpublish extends BaseCommand {\n  static description = 'Remove a package from the registry';\n  static name = 'unpublish';\n  static params = ['dry-run', 'force', 'workspace', 'workspaces'];\n  static usage = ['[<package-spec>]'];\n  static ignoreImplicitWorkspace = false;\n\n  async getKeysOfVersions(name, opts) {\n    const pkgUri = npa(name).escapedName;\n    const json = await npmFetch.json(`${pkgUri}?write=true`, opts);\n    return Object.keys(json.versions);\n  }\n\n  async completion(args) {\n    const {\n      partialWord,\n      conf\n    } = args;\n\n    if (conf.argv.remain.length >= 3) {\n      return [];\n    }\n\n    const opts = { ...this.npm.flatOptions\n    };\n    const username = await getIdentity(this.npm, { ...opts\n    }).catch(() => null);\n\n    if (!username) {\n      return [];\n    }\n\n    const access = await libaccess.lsPackages(username, opts); // do a bit of filtering at this point, so that we don't need\n    // to fetch versions for more than one thing, but also don't\n    // accidentally unpublish a whole project\n\n    let pkgs = Object.keys(access || {});\n\n    if (!partialWord || !pkgs.length) {\n      return pkgs;\n    }\n\n    const pp = npa(partialWord).name;\n    pkgs = pkgs.filter(p => !p.indexOf(pp));\n\n    if (pkgs.length > 1) {\n      return pkgs;\n    }\n\n    const versions = await this.getKeysOfVersions(pkgs[0], opts);\n\n    if (!versions.length) {\n      return pkgs;\n    } else {\n      return versions.map(v => `${pkgs[0]}@${v}`);\n    }\n  }\n\n  async exec(args) {\n    if (args.length > 1) {\n      throw this.usageError();\n    }\n\n    let spec = args.length && npa(args[0]);\n    const force = this.npm.config.get('force');\n    const {\n      silent\n    } = this.npm;\n    const dryRun = this.npm.config.get('dry-run');\n    log.silly('unpublish', 'args[0]', args[0]);\n    log.silly('unpublish', 'spec', spec);\n\n    if ((!spec || !spec.rawSpec) && !force) {\n      throw this.usageError('Refusing to delete entire project.\\n' + 'Run with --force to do this.');\n    }\n\n    const opts = { ...this.npm.flatOptions\n    };\n    let pkgName;\n    let pkgVersion;\n    let manifest;\n    let manifestErr;\n\n    try {\n      const pkgJson = path.join(this.npm.localPrefix, 'package.json');\n      manifest = await readJson(pkgJson);\n    } catch (err) {\n      manifestErr = err;\n    }\n\n    if (spec) {\n      // If cwd has a package.json with a name that matches the package being\n      // unpublished, load up the publishConfig\n      if (manifest && manifest.name === spec.name && manifest.publishConfig) {\n        flatten(manifest.publishConfig, opts);\n      }\n\n      const versions = await this.getKeysOfVersions(spec.name, opts);\n\n      if (versions.length === 1 && !force) {\n        throw this.usageError(LAST_REMAINING_VERSION_ERROR);\n      }\n\n      pkgName = spec.name;\n      pkgVersion = spec.type === 'version' ? `@${spec.rawSpec}` : '';\n    } else {\n      if (manifestErr) {\n        if (manifestErr.code === 'ENOENT' || manifestErr.code === 'ENOTDIR') {\n          throw this.usageError();\n        } else {\n          throw manifestErr;\n        }\n      }\n\n      log.verbose('unpublish', manifest);\n      spec = npa.resolve(manifest.name, manifest.version);\n\n      if (manifest.publishConfig) {\n        flatten(manifest.publishConfig, opts);\n      }\n\n      pkgName = manifest.name;\n      pkgVersion = manifest.version ? `@${manifest.version}` : '';\n    }\n\n    if (!dryRun) {\n      await otplease(this.npm, opts, opts => libunpub(spec, opts));\n    }\n\n    if (!silent) {\n      this.npm.output(`- ${pkgName}${pkgVersion}`);\n    }\n  }\n\n  async execWorkspaces(args, filters) {\n    await this.setWorkspaces(filters);\n    const force = this.npm.config.get('force');\n\n    if (!force) {\n      throw this.usageError('Refusing to delete entire project(s).\\n' + 'Run with --force to do this.');\n    }\n\n    for (const name of this.workspaceNames) {\n      await this.exec([name]);\n    }\n  }\n\n}\n\nmodule.exports = Unpublish;","map":{"version":3,"names":["libaccess","require","libunpub","unpublish","npa","npmFetch","path","util","readJson","promisify","flatten","getIdentity","log","otplease","LAST_REMAINING_VERSION_ERROR","BaseCommand","Unpublish","description","name","params","usage","ignoreImplicitWorkspace","getKeysOfVersions","opts","pkgUri","escapedName","json","Object","keys","versions","completion","args","partialWord","conf","argv","remain","length","npm","flatOptions","username","catch","access","lsPackages","pkgs","pp","filter","p","indexOf","map","v","exec","usageError","spec","force","config","get","silent","dryRun","silly","rawSpec","pkgName","pkgVersion","manifest","manifestErr","pkgJson","join","localPrefix","err","publishConfig","type","code","verbose","resolve","version","output","execWorkspaces","filters","setWorkspaces","workspaceNames","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/commands/unpublish.js"],"sourcesContent":["const libaccess = require('libnpmaccess')\nconst libunpub = require('libnpmpublish').unpublish\nconst npa = require('npm-package-arg')\nconst npmFetch = require('npm-registry-fetch')\nconst path = require('path')\nconst util = require('util')\nconst readJson = util.promisify(require('read-package-json'))\n\nconst flatten = require('../utils/config/flatten.js')\nconst getIdentity = require('../utils/get-identity.js')\nconst log = require('../utils/log-shim')\nconst otplease = require('../utils/otplease.js')\n\nconst LAST_REMAINING_VERSION_ERROR = 'Refusing to delete the last version of the package. ' +\n'It will block from republishing a new version for 24 hours.\\n' +\n'Run with --force to do this.'\n\nconst BaseCommand = require('../base-command.js')\nclass Unpublish extends BaseCommand {\n  static description = 'Remove a package from the registry'\n  static name = 'unpublish'\n  static params = ['dry-run', 'force', 'workspace', 'workspaces']\n  static usage = ['[<package-spec>]']\n  static ignoreImplicitWorkspace = false\n\n  async getKeysOfVersions (name, opts) {\n    const pkgUri = npa(name).escapedName\n    const json = await npmFetch.json(`${pkgUri}?write=true`, opts)\n    return Object.keys(json.versions)\n  }\n\n  async completion (args) {\n    const { partialWord, conf } = args\n\n    if (conf.argv.remain.length >= 3) {\n      return []\n    }\n\n    const opts = { ...this.npm.flatOptions }\n    const username = await getIdentity(this.npm, { ...opts }).catch(() => null)\n    if (!username) {\n      return []\n    }\n\n    const access = await libaccess.lsPackages(username, opts)\n    // do a bit of filtering at this point, so that we don't need\n    // to fetch versions for more than one thing, but also don't\n    // accidentally unpublish a whole project\n    let pkgs = Object.keys(access || {})\n    if (!partialWord || !pkgs.length) {\n      return pkgs\n    }\n\n    const pp = npa(partialWord).name\n    pkgs = pkgs.filter(p => !p.indexOf(pp))\n    if (pkgs.length > 1) {\n      return pkgs\n    }\n\n    const versions = await this.getKeysOfVersions(pkgs[0], opts)\n    if (!versions.length) {\n      return pkgs\n    } else {\n      return versions.map(v => `${pkgs[0]}@${v}`)\n    }\n  }\n\n  async exec (args) {\n    if (args.length > 1) {\n      throw this.usageError()\n    }\n\n    let spec = args.length && npa(args[0])\n    const force = this.npm.config.get('force')\n    const { silent } = this.npm\n    const dryRun = this.npm.config.get('dry-run')\n\n    log.silly('unpublish', 'args[0]', args[0])\n    log.silly('unpublish', 'spec', spec)\n\n    if ((!spec || !spec.rawSpec) && !force) {\n      throw this.usageError(\n        'Refusing to delete entire project.\\n' +\n        'Run with --force to do this.'\n      )\n    }\n\n    const opts = { ...this.npm.flatOptions }\n\n    let pkgName\n    let pkgVersion\n    let manifest\n    let manifestErr\n    try {\n      const pkgJson = path.join(this.npm.localPrefix, 'package.json')\n      manifest = await readJson(pkgJson)\n    } catch (err) {\n      manifestErr = err\n    }\n    if (spec) {\n      // If cwd has a package.json with a name that matches the package being\n      // unpublished, load up the publishConfig\n      if (manifest && manifest.name === spec.name && manifest.publishConfig) {\n        flatten(manifest.publishConfig, opts)\n      }\n      const versions = await this.getKeysOfVersions(spec.name, opts)\n      if (versions.length === 1 && !force) {\n        throw this.usageError(LAST_REMAINING_VERSION_ERROR)\n      }\n      pkgName = spec.name\n      pkgVersion = spec.type === 'version' ? `@${spec.rawSpec}` : ''\n    } else {\n      if (manifestErr) {\n        if (manifestErr.code === 'ENOENT' || manifestErr.code === 'ENOTDIR') {\n          throw this.usageError()\n        } else {\n          throw manifestErr\n        }\n      }\n\n      log.verbose('unpublish', manifest)\n\n      spec = npa.resolve(manifest.name, manifest.version)\n      if (manifest.publishConfig) {\n        flatten(manifest.publishConfig, opts)\n      }\n\n      pkgName = manifest.name\n      pkgVersion = manifest.version ? `@${manifest.version}` : ''\n    }\n\n    if (!dryRun) {\n      await otplease(this.npm, opts, opts => libunpub(spec, opts))\n    }\n    if (!silent) {\n      this.npm.output(`- ${pkgName}${pkgVersion}`)\n    }\n  }\n\n  async execWorkspaces (args, filters) {\n    await this.setWorkspaces(filters)\n\n    const force = this.npm.config.get('force')\n    if (!force) {\n      throw this.usageError(\n        'Refusing to delete entire project(s).\\n' +\n        'Run with --force to do this.'\n      )\n    }\n\n    for (const name of this.workspaceNames) {\n      await this.exec([name])\n    }\n  }\n}\nmodule.exports = Unpublish\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}