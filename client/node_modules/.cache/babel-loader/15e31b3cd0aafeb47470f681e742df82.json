{"ast":null,"code":"const {\n  dirname\n} = require('path');\n\nconst {\n  cmdList\n} = require('./cmd-list');\n\nconst localeCompare = require('@isaacs/string-locale-compare')('en');\n\nmodule.exports = async npm => {\n  const usesBrowser = npm.config.get('viewer') === 'browser' ? ' (in a browser)' : '';\n  return `npm <command>\n\nUsage:\n\nnpm install        install all the dependencies in your project\nnpm install <foo>  add the <foo> dependency to your project\nnpm test           run this project's tests\nnpm run <foo>      run the script named <foo>\nnpm <command> -h   quick help on <command>\nnpm -l             display usage info for all commands\nnpm help <term>    search for help on <term>${usesBrowser}\nnpm help npm       more involved overview${usesBrowser}\n\nAll commands:\n${await allCommands(npm)}\n\nSpecify configs in the ini-formatted file:\n    ${npm.config.get('userconfig')}\nor on the command line via: npm <command> --key=value\n\nMore configuration info: npm help config\nConfiguration fields: npm help 7 config\n\nnpm@${npm.version} ${dirname(dirname(__dirname))}`;\n};\n\nconst allCommands = async npm => {\n  if (npm.config.get('long')) {\n    return usages(npm);\n  }\n\n  return '\\n    ' + wrap(cmdList);\n};\n\nconst wrap = arr => {\n  const out = [''];\n  const line = !process.stdout.columns ? 60 : Math.min(60, Math.max(process.stdout.columns - 16, 24));\n  let l = 0;\n\n  for (const c of arr) {\n    if (out[l].length + c.length + 2 < line) {\n      out[l] += ', ' + c;\n    } else {\n      out[l++] += ',';\n      out[l] = c;\n    }\n  }\n\n  return out.join('\\n    ').slice(2);\n};\n\nconst usages = async npm => {\n  // return a string of <command>: <usage>\n  let maxLen = 0;\n  const set = [];\n\n  for (const c of cmdList) {\n    const cmd = await npm.cmd(c);\n    set.push([c, cmd.usage]);\n    maxLen = Math.max(maxLen, c.length);\n  }\n\n  return set.sort((_ref, _ref2) => {\n    let [a] = _ref;\n    let [b] = _ref2;\n    return localeCompare(a, b);\n  }).map(_ref3 => {\n    let [c, usage] = _ref3;\n    return `\\n    ${c}${' '.repeat(maxLen - c.length + 1)}${usage.split('\\n').join('\\n' + ' '.repeat(maxLen + 5))}`;\n  }).join('\\n');\n};","map":{"version":3,"names":["dirname","require","cmdList","localeCompare","module","exports","npm","usesBrowser","config","get","allCommands","version","__dirname","usages","wrap","arr","out","line","process","stdout","columns","Math","min","max","l","c","length","join","slice","maxLen","set","cmd","push","usage","sort","a","b","map","repeat","split"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/utils/npm-usage.js"],"sourcesContent":["const { dirname } = require('path')\nconst { cmdList } = require('./cmd-list')\nconst localeCompare = require('@isaacs/string-locale-compare')('en')\n\nmodule.exports = async (npm) => {\n  const usesBrowser = npm.config.get('viewer') === 'browser'\n    ? ' (in a browser)' : ''\n  return `npm <command>\n\nUsage:\n\nnpm install        install all the dependencies in your project\nnpm install <foo>  add the <foo> dependency to your project\nnpm test           run this project's tests\nnpm run <foo>      run the script named <foo>\nnpm <command> -h   quick help on <command>\nnpm -l             display usage info for all commands\nnpm help <term>    search for help on <term>${usesBrowser}\nnpm help npm       more involved overview${usesBrowser}\n\nAll commands:\n${await allCommands(npm)}\n\nSpecify configs in the ini-formatted file:\n    ${npm.config.get('userconfig')}\nor on the command line via: npm <command> --key=value\n\nMore configuration info: npm help config\nConfiguration fields: npm help 7 config\n\nnpm@${npm.version} ${dirname(dirname(__dirname))}`\n}\n\nconst allCommands = async (npm) => {\n  if (npm.config.get('long')) {\n    return usages(npm)\n  }\n  return ('\\n    ' + wrap(cmdList))\n}\n\nconst wrap = (arr) => {\n  const out = ['']\n\n  const line = !process.stdout.columns ? 60\n    : Math.min(60, Math.max(process.stdout.columns - 16, 24))\n\n  let l = 0\n  for (const c of arr) {\n    if (out[l].length + c.length + 2 < line) {\n      out[l] += ', ' + c\n    } else {\n      out[l++] += ','\n      out[l] = c\n    }\n  }\n  return out.join('\\n    ').slice(2)\n}\n\nconst usages = async (npm) => {\n  // return a string of <command>: <usage>\n  let maxLen = 0\n  const set = []\n  for (const c of cmdList) {\n    const cmd = await npm.cmd(c)\n    set.push([c, cmd.usage])\n    maxLen = Math.max(maxLen, c.length)\n  }\n  return set.sort(([a], [b]) => localeCompare(a, b))\n    .map(([c, usage]) => `\\n    ${c}${' '.repeat(maxLen - c.length + 1)}${\n      (usage.split('\\n').join('\\n' + ' '.repeat(maxLen + 5)))}`)\n    .join('\\n')\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}