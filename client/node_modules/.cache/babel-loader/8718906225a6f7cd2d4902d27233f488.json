{"ast":null,"code":"const {\n  spawn\n} = require('child_process');\n\nconst path = require('path');\n\nconst openUrl = require('../utils/open-url.js');\n\nconst {\n  promisify\n} = require('util');\n\nconst glob = promisify(require('glob'));\n\nconst localeCompare = require('@isaacs/string-locale-compare')('en');\n\nconst globify = pattern => pattern.split('\\\\').join('/');\n\nconst BaseCommand = require('../base-command.js'); // Strips out the number from foo.7 or foo.7. or foo.7.tgz\n// We don't currently compress our man pages but if we ever did this would\n// seemlessly continue supporting it\n\n\nconst manNumberRegex = /\\.(\\d+)(\\.[^/\\\\]*)?$/; // Searches for the \"npm-\" prefix in page names, to prefer those.\n\nconst manNpmPrefixRegex = /\\/npm-/;\n\nclass Help extends BaseCommand {\n  static description = 'Get help on npm';\n  static name = 'help';\n  static usage = ['<term> [<terms..>]'];\n  static params = ['viewer'];\n  static ignoreImplicitWorkspace = true;\n\n  async completion(opts) {\n    if (opts.conf.argv.remain.length > 2) {\n      return [];\n    }\n\n    const g = path.resolve(__dirname, '../../man/man[0-9]/*.[0-9]');\n    const files = await glob(globify(g));\n    return Object.keys(files.reduce(function (acc, file) {\n      file = path.basename(file).replace(/\\.[0-9]+$/, '');\n      file = file.replace(/^npm-/, '');\n      acc[file] = true;\n      return acc;\n    }, {\n      help: true\n    }));\n  }\n\n  async exec(args) {\n    // By default we search all of our man subdirectories, but if the user has\n    // asked for a specific one we limit the search to just there\n    let manSearch = 'man*';\n\n    if (/^\\d+$/.test(args[0])) {\n      manSearch = `man${args.shift()}`;\n    }\n\n    if (!args.length) {\n      return this.npm.output(await this.npm.usage);\n    } // npm help foo bar baz: search topics\n\n\n    if (args.length > 1) {\n      return this.helpSearch(args);\n    }\n\n    let section = this.npm.deref(args[0]) || args[0]; // support `npm help package.json`\n\n    section = section.replace('.json', '-json');\n    const manroot = path.resolve(__dirname, '..', '..', 'man'); // find either section.n or npm-section.n\n\n    const f = `${manroot}/${manSearch}/?(npm-)${section}.[0-9]*`;\n    let mans = await glob(globify(f));\n    mans = mans.sort((a, b) => {\n      // Prefer the page with an npm prefix, if there's only one.\n      const aHasPrefix = manNpmPrefixRegex.test(a);\n      const bHasPrefix = manNpmPrefixRegex.test(b);\n\n      if (aHasPrefix !== bHasPrefix) {\n        return aHasPrefix ? -1 : 1;\n      } // Because the glob is (subtly) different from manNumberRegex,\n      // we can't rely on it passing.\n\n\n      const aManNumberMatch = a.match(manNumberRegex);\n      const bManNumberMatch = b.match(manNumberRegex);\n\n      if (aManNumberMatch) {\n        if (!bManNumberMatch) {\n          return -1;\n        } // man number sort first so that 1 aka commands are preferred\n\n\n        if (aManNumberMatch[1] !== bManNumberMatch[1]) {\n          return aManNumberMatch[1] - bManNumberMatch[1];\n        }\n      } else if (bManNumberMatch) {\n        return 1;\n      }\n\n      return localeCompare(a, b);\n    });\n    const man = mans[0];\n\n    if (man) {\n      await this.viewMan(man);\n    } else {\n      return this.helpSearch(args);\n    }\n  }\n\n  helpSearch(args) {\n    return this.npm.exec('help-search', args);\n  }\n\n  async viewMan(man) {\n    const env = {};\n    Object.keys(process.env).forEach(function (i) {\n      env[i] = process.env[i];\n    });\n    const viewer = this.npm.config.get('viewer');\n    const opts = {\n      env,\n      stdio: 'inherit'\n    };\n    let bin = 'man';\n    const args = [];\n\n    switch (viewer) {\n      case 'woman':\n        bin = 'emacsclient';\n        args.push('-e', `(woman-find-file '${man}')`);\n        break;\n\n      case 'browser':\n        await openUrl(this.npm, this.htmlMan(man), 'help available at the following URL', true);\n        return;\n\n      default:\n        args.push(man);\n        break;\n    }\n\n    const proc = spawn(bin, args, opts);\n    return new Promise((resolve, reject) => {\n      proc.on('exit', code => {\n        if (code) {\n          return reject(new Error(`help process exited with code: ${code}`));\n        }\n\n        return resolve();\n      });\n    });\n  } // Returns the path to the html version of the man page\n\n\n  htmlMan(man) {\n    let sect = man.match(manNumberRegex)[1];\n    const f = path.basename(man).replace(manNumberRegex, '');\n\n    switch (sect) {\n      case '1':\n        sect = 'commands';\n        break;\n\n      case '5':\n        sect = 'configuring-npm';\n        break;\n\n      case '7':\n        sect = 'using-npm';\n        break;\n    }\n\n    return 'file:///' + path.resolve(__dirname, '..', '..', 'docs', 'output', sect, f + '.html');\n  }\n\n}\n\nmodule.exports = Help;","map":{"version":3,"names":["spawn","require","path","openUrl","promisify","glob","localeCompare","globify","pattern","split","join","BaseCommand","manNumberRegex","manNpmPrefixRegex","Help","description","name","usage","params","ignoreImplicitWorkspace","completion","opts","conf","argv","remain","length","g","resolve","__dirname","files","Object","keys","reduce","acc","file","basename","replace","help","exec","args","manSearch","test","shift","npm","output","helpSearch","section","deref","manroot","f","mans","sort","a","b","aHasPrefix","bHasPrefix","aManNumberMatch","match","bManNumberMatch","man","viewMan","env","process","forEach","i","viewer","config","get","stdio","bin","push","htmlMan","proc","Promise","reject","on","code","Error","sect","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/commands/help.js"],"sourcesContent":["const { spawn } = require('child_process')\nconst path = require('path')\nconst openUrl = require('../utils/open-url.js')\nconst { promisify } = require('util')\nconst glob = promisify(require('glob'))\nconst localeCompare = require('@isaacs/string-locale-compare')('en')\n\nconst globify = pattern => pattern.split('\\\\').join('/')\nconst BaseCommand = require('../base-command.js')\n\n// Strips out the number from foo.7 or foo.7. or foo.7.tgz\n// We don't currently compress our man pages but if we ever did this would\n// seemlessly continue supporting it\nconst manNumberRegex = /\\.(\\d+)(\\.[^/\\\\]*)?$/\n// Searches for the \"npm-\" prefix in page names, to prefer those.\nconst manNpmPrefixRegex = /\\/npm-/\n\nclass Help extends BaseCommand {\n  static description = 'Get help on npm'\n  static name = 'help'\n  static usage = ['<term> [<terms..>]']\n  static params = ['viewer']\n  static ignoreImplicitWorkspace = true\n\n  async completion (opts) {\n    if (opts.conf.argv.remain.length > 2) {\n      return []\n    }\n    const g = path.resolve(__dirname, '../../man/man[0-9]/*.[0-9]')\n    const files = await glob(globify(g))\n\n    return Object.keys(files.reduce(function (acc, file) {\n      file = path.basename(file).replace(/\\.[0-9]+$/, '')\n      file = file.replace(/^npm-/, '')\n      acc[file] = true\n      return acc\n    }, { help: true }))\n  }\n\n  async exec (args) {\n    // By default we search all of our man subdirectories, but if the user has\n    // asked for a specific one we limit the search to just there\n    let manSearch = 'man*'\n    if (/^\\d+$/.test(args[0])) {\n      manSearch = `man${args.shift()}`\n    }\n\n    if (!args.length) {\n      return this.npm.output(await this.npm.usage)\n    }\n\n    // npm help foo bar baz: search topics\n    if (args.length > 1) {\n      return this.helpSearch(args)\n    }\n\n    let section = this.npm.deref(args[0]) || args[0]\n\n    // support `npm help package.json`\n    section = section.replace('.json', '-json')\n\n    const manroot = path.resolve(__dirname, '..', '..', 'man')\n    // find either section.n or npm-section.n\n    const f = `${manroot}/${manSearch}/?(npm-)${section}.[0-9]*`\n    let mans = await glob(globify(f))\n    mans = mans.sort((a, b) => {\n      // Prefer the page with an npm prefix, if there's only one.\n      const aHasPrefix = manNpmPrefixRegex.test(a)\n      const bHasPrefix = manNpmPrefixRegex.test(b)\n      if (aHasPrefix !== bHasPrefix) {\n        return aHasPrefix ? -1 : 1\n      }\n\n      // Because the glob is (subtly) different from manNumberRegex,\n      // we can't rely on it passing.\n      const aManNumberMatch = a.match(manNumberRegex)\n      const bManNumberMatch = b.match(manNumberRegex)\n      if (aManNumberMatch) {\n        if (!bManNumberMatch) {\n          return -1\n        }\n        // man number sort first so that 1 aka commands are preferred\n        if (aManNumberMatch[1] !== bManNumberMatch[1]) {\n          return aManNumberMatch[1] - bManNumberMatch[1]\n        }\n      } else if (bManNumberMatch) {\n        return 1\n      }\n\n      return localeCompare(a, b)\n    })\n    const man = mans[0]\n\n    if (man) {\n      await this.viewMan(man)\n    } else {\n      return this.helpSearch(args)\n    }\n  }\n\n  helpSearch (args) {\n    return this.npm.exec('help-search', args)\n  }\n\n  async viewMan (man) {\n    const env = {}\n    Object.keys(process.env).forEach(function (i) {\n      env[i] = process.env[i]\n    })\n    const viewer = this.npm.config.get('viewer')\n\n    const opts = {\n      env,\n      stdio: 'inherit',\n    }\n\n    let bin = 'man'\n    const args = []\n    switch (viewer) {\n      case 'woman':\n        bin = 'emacsclient'\n        args.push('-e', `(woman-find-file '${man}')`)\n        break\n\n      case 'browser':\n        await openUrl(this.npm, this.htmlMan(man), 'help available at the following URL', true)\n        return\n\n      default:\n        args.push(man)\n        break\n    }\n\n    const proc = spawn(bin, args, opts)\n    return new Promise((resolve, reject) => {\n      proc.on('exit', (code) => {\n        if (code) {\n          return reject(new Error(`help process exited with code: ${code}`))\n        }\n\n        return resolve()\n      })\n    })\n  }\n\n  // Returns the path to the html version of the man page\n  htmlMan (man) {\n    let sect = man.match(manNumberRegex)[1]\n    const f = path.basename(man).replace(manNumberRegex, '')\n    switch (sect) {\n      case '1':\n        sect = 'commands'\n        break\n      case '5':\n        sect = 'configuring-npm'\n        break\n      case '7':\n        sect = 'using-npm'\n        break\n    }\n    return 'file:///' + path.resolve(__dirname, '..', '..', 'docs', 'output', sect, f + '.html')\n  }\n}\nmodule.exports = Help\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}