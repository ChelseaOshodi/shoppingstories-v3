{"ast":null,"code":"// take a path and a resolved value, and turn it into a resolution from\n// the given new path.  This is used with converting a package.json's\n// relative file: path into one suitable for a lockfile, or between\n// lockfiles, and for converting hosted git repos to a consistent url type.\nconst npa = require('npm-package-arg');\n\nconst relpath = require('./relpath.js');\n\nconst consistentResolve = function (resolved, fromPath, toPath) {\n  let relPaths = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  if (!resolved) {\n    return null;\n  }\n\n  try {\n    const hostedOpt = {\n      noCommittish: false\n    };\n    const {\n      fetchSpec,\n      saveSpec,\n      type,\n      hosted,\n      rawSpec,\n      raw\n    } = npa(resolved, fromPath);\n    const isPath = type === 'file' || type === 'directory';\n    return isPath && !relPaths ? `file:${fetchSpec.replace(/#/g, '%23')}` : isPath ? 'file:' + (toPath ? relpath(toPath, fetchSpec.replace(/#/g, '%23')) : fetchSpec.replace(/#/g, '%23')) : hosted ? `git+${hosted.auth ? hosted.https(hostedOpt) : hosted.sshurl(hostedOpt)}` : type === 'git' ? saveSpec // always return something.  'foo' is interpreted as 'foo@' otherwise.\n    : rawSpec === '' && raw.slice(-1) !== '@' ? raw // just strip off the name, but otherwise return as-is\n    : rawSpec;\n  } catch (_) {\n    // whatever we passed in was not acceptable to npa.\n    // leave it 100% untouched.\n    return resolved;\n  }\n};\n\nmodule.exports = consistentResolve;","map":{"version":3,"names":["npa","require","relpath","consistentResolve","resolved","fromPath","toPath","relPaths","hostedOpt","noCommittish","fetchSpec","saveSpec","type","hosted","rawSpec","raw","isPath","replace","auth","https","sshurl","slice","_","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/@npmcli/arborist/lib/consistent-resolve.js"],"sourcesContent":["// take a path and a resolved value, and turn it into a resolution from\n// the given new path.  This is used with converting a package.json's\n// relative file: path into one suitable for a lockfile, or between\n// lockfiles, and for converting hosted git repos to a consistent url type.\nconst npa = require('npm-package-arg')\nconst relpath = require('./relpath.js')\nconst consistentResolve = (resolved, fromPath, toPath, relPaths = false) => {\n  if (!resolved) {\n    return null\n  }\n\n  try {\n    const hostedOpt = { noCommittish: false }\n    const {\n      fetchSpec,\n      saveSpec,\n      type,\n      hosted,\n      rawSpec,\n      raw,\n    } = npa(resolved, fromPath)\n    const isPath = type === 'file' || type === 'directory'\n    return isPath && !relPaths ? `file:${fetchSpec.replace(/#/g, '%23')}`\n      : isPath ? 'file:' + (toPath ? relpath(toPath, fetchSpec.replace(/#/g, '%23')) : fetchSpec.replace(/#/g, '%23'))\n      : hosted ? `git+${\n        hosted.auth ? hosted.https(hostedOpt) : hosted.sshurl(hostedOpt)\n      }`\n      : type === 'git' ? saveSpec\n      // always return something.  'foo' is interpreted as 'foo@' otherwise.\n      : rawSpec === '' && raw.slice(-1) !== '@' ? raw\n      // just strip off the name, but otherwise return as-is\n      : rawSpec\n  } catch (_) {\n    // whatever we passed in was not acceptable to npa.\n    // leave it 100% untouched.\n    return resolved\n  }\n}\nmodule.exports = consistentResolve\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,iBAAD,CAAnB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,cAAD,CAAvB;;AACA,MAAME,iBAAiB,GAAG,UAACC,QAAD,EAAWC,QAAX,EAAqBC,MAArB,EAAkD;EAAA,IAArBC,QAAqB,uEAAV,KAAU;;EAC1E,IAAI,CAACH,QAAL,EAAe;IACb,OAAO,IAAP;EACD;;EAED,IAAI;IACF,MAAMI,SAAS,GAAG;MAAEC,YAAY,EAAE;IAAhB,CAAlB;IACA,MAAM;MACJC,SADI;MAEJC,QAFI;MAGJC,IAHI;MAIJC,MAJI;MAKJC,OALI;MAMJC;IANI,IAOFf,GAAG,CAACI,QAAD,EAAWC,QAAX,CAPP;IAQA,MAAMW,MAAM,GAAGJ,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,WAA3C;IACA,OAAOI,MAAM,IAAI,CAACT,QAAX,GAAuB,QAAOG,SAAS,CAACO,OAAV,CAAkB,IAAlB,EAAwB,KAAxB,CAA+B,EAA7D,GACHD,MAAM,GAAG,WAAWV,MAAM,GAAGJ,OAAO,CAACI,MAAD,EAASI,SAAS,CAACO,OAAV,CAAkB,IAAlB,EAAwB,KAAxB,CAAT,CAAV,GAAqDP,SAAS,CAACO,OAAV,CAAkB,IAAlB,EAAwB,KAAxB,CAAtE,CAAH,GACNJ,MAAM,GAAI,OACVA,MAAM,CAACK,IAAP,GAAcL,MAAM,CAACM,KAAP,CAAaX,SAAb,CAAd,GAAwCK,MAAM,CAACO,MAAP,CAAcZ,SAAd,CACzC,EAFO,GAGNI,IAAI,KAAK,KAAT,GAAiBD,QAAjB,CACF;IADE,EAEAG,OAAO,KAAK,EAAZ,IAAkBC,GAAG,CAACM,KAAJ,CAAU,CAAC,CAAX,MAAkB,GAApC,GAA0CN,GAA1C,CACF;IADE,EAEAD,OATJ;EAUD,CArBD,CAqBE,OAAOQ,CAAP,EAAU;IACV;IACA;IACA,OAAOlB,QAAP;EACD;AACF,CA/BD;;AAgCAmB,MAAM,CAACC,OAAP,GAAiBrB,iBAAjB"},"metadata":{},"sourceType":"script"}