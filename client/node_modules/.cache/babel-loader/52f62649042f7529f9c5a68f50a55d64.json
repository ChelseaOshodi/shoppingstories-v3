{"ast":null,"code":"const depTypes = new Set(['dependencies', 'optionalDependencies', 'devDependencies', 'peerDependencies']); // sort alphabetically all types of deps for a given package\n\nconst orderDeps = content => {\n  for (const type of depTypes) {\n    if (content && content[type]) {\n      content[type] = Object.keys(content[type]).sort((a, b) => a.localeCompare(b, 'en')).reduce((res, key) => {\n        res[key] = content[type][key];\n        return res;\n      }, {});\n    }\n  }\n\n  return content;\n};\n\nconst updateDependencies = _ref => {\n  let {\n    content,\n    originalContent\n  } = _ref;\n  const pkg = orderDeps({ ...content\n  }); // optionalDependencies don't need to be repeated in two places\n\n  if (pkg.dependencies) {\n    if (pkg.optionalDependencies) {\n      for (const name of Object.keys(pkg.optionalDependencies)) {\n        delete pkg.dependencies[name];\n      }\n    }\n  }\n\n  const result = { ...originalContent\n  }; // loop through all types of dependencies and update package json pkg\n\n  for (const type of depTypes) {\n    if (pkg[type]) {\n      result[type] = pkg[type];\n    } // prune empty type props from resulting object\n\n\n    const emptyDepType = pkg[type] && typeof pkg === 'object' && Object.keys(pkg[type]).length === 0;\n\n    if (emptyDepType) {\n      delete result[type];\n    }\n  } // if original package.json had dep in peerDeps AND deps, preserve that.\n\n\n  const {\n    dependencies: origProd,\n    peerDependencies: origPeer\n  } = originalContent || {};\n  const {\n    peerDependencies: newPeer\n  } = result;\n\n  if (origProd && origPeer && newPeer) {\n    // we have original prod/peer deps, and new peer deps\n    // copy over any that were in both in the original\n    for (const name of Object.keys(origPeer)) {\n      if (origProd[name] !== undefined && newPeer[name] !== undefined) {\n        result.dependencies = result.dependencies || {};\n        result.dependencies[name] = newPeer[name];\n      }\n    }\n  }\n\n  return result;\n};\n\nupdateDependencies.knownKeys = depTypes;\nmodule.exports = updateDependencies;","map":{"version":3,"names":["depTypes","Set","orderDeps","content","type","Object","keys","sort","a","b","localeCompare","reduce","res","key","updateDependencies","originalContent","pkg","dependencies","optionalDependencies","name","result","emptyDepType","length","origProd","peerDependencies","origPeer","newPeer","undefined","knownKeys","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/@npmcli/package-json/lib/update-dependencies.js"],"sourcesContent":["const depTypes = new Set([\n  'dependencies',\n  'optionalDependencies',\n  'devDependencies',\n  'peerDependencies',\n])\n\n// sort alphabetically all types of deps for a given package\nconst orderDeps = (content) => {\n  for (const type of depTypes) {\n    if (content && content[type]) {\n      content[type] = Object.keys(content[type])\n        .sort((a, b) => a.localeCompare(b, 'en'))\n        .reduce((res, key) => {\n          res[key] = content[type][key]\n          return res\n        }, {})\n    }\n  }\n  return content\n}\n\nconst updateDependencies = ({ content, originalContent }) => {\n  const pkg = orderDeps({\n    ...content,\n  })\n\n  // optionalDependencies don't need to be repeated in two places\n  if (pkg.dependencies) {\n    if (pkg.optionalDependencies) {\n      for (const name of Object.keys(pkg.optionalDependencies)) {\n        delete pkg.dependencies[name]\n      }\n    }\n  }\n\n  const result = { ...originalContent }\n\n  // loop through all types of dependencies and update package json pkg\n  for (const type of depTypes) {\n    if (pkg[type]) {\n      result[type] = pkg[type]\n    }\n\n    // prune empty type props from resulting object\n    const emptyDepType =\n      pkg[type]\n      && typeof pkg === 'object'\n      && Object.keys(pkg[type]).length === 0\n    if (emptyDepType) {\n      delete result[type]\n    }\n  }\n\n  // if original package.json had dep in peerDeps AND deps, preserve that.\n  const { dependencies: origProd, peerDependencies: origPeer } =\n    originalContent || {}\n  const { peerDependencies: newPeer } = result\n  if (origProd && origPeer && newPeer) {\n    // we have original prod/peer deps, and new peer deps\n    // copy over any that were in both in the original\n    for (const name of Object.keys(origPeer)) {\n      if (origProd[name] !== undefined && newPeer[name] !== undefined) {\n        result.dependencies = result.dependencies || {}\n        result.dependencies[name] = newPeer[name]\n      }\n    }\n  }\n\n  return result\n}\n\nupdateDependencies.knownKeys = depTypes\n\nmodule.exports = updateDependencies\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,IAAIC,GAAJ,CAAQ,CACvB,cADuB,EAEvB,sBAFuB,EAGvB,iBAHuB,EAIvB,kBAJuB,CAAR,CAAjB,C,CAOA;;AACA,MAAMC,SAAS,GAAIC,OAAD,IAAa;EAC7B,KAAK,MAAMC,IAAX,IAAmBJ,QAAnB,EAA6B;IAC3B,IAAIG,OAAO,IAAIA,OAAO,CAACC,IAAD,CAAtB,EAA8B;MAC5BD,OAAO,CAACC,IAAD,CAAP,GAAgBC,MAAM,CAACC,IAAP,CAAYH,OAAO,CAACC,IAAD,CAAnB,EACbG,IADa,CACR,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,aAAF,CAAgBD,CAAhB,EAAmB,IAAnB,CADF,EAEbE,MAFa,CAEN,CAACC,GAAD,EAAMC,GAAN,KAAc;QACpBD,GAAG,CAACC,GAAD,CAAH,GAAWV,OAAO,CAACC,IAAD,CAAP,CAAcS,GAAd,CAAX;QACA,OAAOD,GAAP;MACD,CALa,EAKX,EALW,CAAhB;IAMD;EACF;;EACD,OAAOT,OAAP;AACD,CAZD;;AAcA,MAAMW,kBAAkB,GAAG,QAAkC;EAAA,IAAjC;IAAEX,OAAF;IAAWY;EAAX,CAAiC;EAC3D,MAAMC,GAAG,GAAGd,SAAS,CAAC,EACpB,GAAGC;EADiB,CAAD,CAArB,CAD2D,CAK3D;;EACA,IAAIa,GAAG,CAACC,YAAR,EAAsB;IACpB,IAAID,GAAG,CAACE,oBAAR,EAA8B;MAC5B,KAAK,MAAMC,IAAX,IAAmBd,MAAM,CAACC,IAAP,CAAYU,GAAG,CAACE,oBAAhB,CAAnB,EAA0D;QACxD,OAAOF,GAAG,CAACC,YAAJ,CAAiBE,IAAjB,CAAP;MACD;IACF;EACF;;EAED,MAAMC,MAAM,GAAG,EAAE,GAAGL;EAAL,CAAf,CAd2D,CAgB3D;;EACA,KAAK,MAAMX,IAAX,IAAmBJ,QAAnB,EAA6B;IAC3B,IAAIgB,GAAG,CAACZ,IAAD,CAAP,EAAe;MACbgB,MAAM,CAAChB,IAAD,CAAN,GAAeY,GAAG,CAACZ,IAAD,CAAlB;IACD,CAH0B,CAK3B;;;IACA,MAAMiB,YAAY,GAChBL,GAAG,CAACZ,IAAD,CAAH,IACG,OAAOY,GAAP,KAAe,QADlB,IAEGX,MAAM,CAACC,IAAP,CAAYU,GAAG,CAACZ,IAAD,CAAf,EAAuBkB,MAAvB,KAAkC,CAHvC;;IAIA,IAAID,YAAJ,EAAkB;MAChB,OAAOD,MAAM,CAAChB,IAAD,CAAb;IACD;EACF,CA9B0D,CAgC3D;;;EACA,MAAM;IAAEa,YAAY,EAAEM,QAAhB;IAA0BC,gBAAgB,EAAEC;EAA5C,IACJV,eAAe,IAAI,EADrB;EAEA,MAAM;IAAES,gBAAgB,EAAEE;EAApB,IAAgCN,MAAtC;;EACA,IAAIG,QAAQ,IAAIE,QAAZ,IAAwBC,OAA5B,EAAqC;IACnC;IACA;IACA,KAAK,MAAMP,IAAX,IAAmBd,MAAM,CAACC,IAAP,CAAYmB,QAAZ,CAAnB,EAA0C;MACxC,IAAIF,QAAQ,CAACJ,IAAD,CAAR,KAAmBQ,SAAnB,IAAgCD,OAAO,CAACP,IAAD,CAAP,KAAkBQ,SAAtD,EAAiE;QAC/DP,MAAM,CAACH,YAAP,GAAsBG,MAAM,CAACH,YAAP,IAAuB,EAA7C;QACAG,MAAM,CAACH,YAAP,CAAoBE,IAApB,IAA4BO,OAAO,CAACP,IAAD,CAAnC;MACD;IACF;EACF;;EAED,OAAOC,MAAP;AACD,CAhDD;;AAkDAN,kBAAkB,CAACc,SAAnB,GAA+B5B,QAA/B;AAEA6B,MAAM,CAACC,OAAP,GAAiBhB,kBAAjB"},"metadata":{},"sourceType":"script"}