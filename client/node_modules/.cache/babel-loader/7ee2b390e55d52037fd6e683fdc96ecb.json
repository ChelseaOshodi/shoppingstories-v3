{"ast":null,"code":"const pacote = require('pacote');\n\nconst formatDiff = require('./format-diff.js');\n\nconst getTarball = require('./tarball.js');\n\nconst untar = require('./untar.js'); // TODO: we test this condition in the diff command\n// so this error probably doesnt need to be here. Or\n// if it does we should figure out a standard code\n// so we can catch it in the cli and display it consistently\n\n\nconst argsError = () => Object.assign(new TypeError('libnpmdiff needs two arguments to compare'), {\n  code: 'EDIFFARGS'\n});\n\nconst diff = async function (specs) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (specs.length !== 2) {\n    throw argsError();\n  }\n\n  const [aManifest, bManifest] = await Promise.all(specs.map(spec => pacote.manifest(spec, opts)));\n  const versions = {\n    a: aManifest.version,\n    b: bManifest.version\n  }; // fetches tarball using pacote\n\n  const [a, b] = await Promise.all([getTarball(aManifest, opts), getTarball(bManifest, opts)]); // read all files\n  // populates `files` and `refs`\n\n  const {\n    files,\n    refs\n  } = await untar([{\n    prefix: 'a/',\n    item: a\n  }, {\n    prefix: 'b/',\n    item: b\n  }], opts);\n  return formatDiff({\n    files,\n    opts,\n    refs,\n    versions\n  });\n};\n\nmodule.exports = diff;","map":{"version":3,"names":["pacote","require","formatDiff","getTarball","untar","argsError","Object","assign","TypeError","code","diff","specs","opts","length","aManifest","bManifest","Promise","all","map","spec","manifest","versions","a","version","b","files","refs","prefix","item","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/libnpmdiff/lib/index.js"],"sourcesContent":["const pacote = require('pacote')\n\nconst formatDiff = require('./format-diff.js')\nconst getTarball = require('./tarball.js')\nconst untar = require('./untar.js')\n\n// TODO: we test this condition in the diff command\n// so this error probably doesnt need to be here. Or\n// if it does we should figure out a standard code\n// so we can catch it in the cli and display it consistently\nconst argsError = () =>\n  Object.assign(\n    new TypeError('libnpmdiff needs two arguments to compare'),\n    { code: 'EDIFFARGS' }\n  )\nconst diff = async (specs, opts = {}) => {\n  if (specs.length !== 2) {\n    throw argsError()\n  }\n\n  const [\n    aManifest,\n    bManifest,\n  ] =\n    await Promise.all(specs.map(spec => pacote.manifest(spec, opts)))\n\n  const versions = {\n    a: aManifest.version,\n    b: bManifest.version,\n  }\n\n  // fetches tarball using pacote\n  const [a, b] = await Promise.all([\n    getTarball(aManifest, opts),\n    getTarball(bManifest, opts),\n  ])\n\n  // read all files\n  // populates `files` and `refs`\n  const {\n    files,\n    refs,\n  } = await untar([\n    {\n      prefix: 'a/',\n      item: a,\n    },\n    {\n      prefix: 'b/',\n      item: b,\n    },\n  ], opts)\n\n  return formatDiff({\n    files,\n    opts,\n    refs,\n    versions,\n  })\n}\n\nmodule.exports = diff\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMC,UAAU,GAAGD,OAAO,CAAC,kBAAD,CAA1B;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,YAAD,CAArB,C,CAEA;AACA;AACA;AACA;;;AACA,MAAMI,SAAS,GAAG,MAChBC,MAAM,CAACC,MAAP,CACE,IAAIC,SAAJ,CAAc,2CAAd,CADF,EAEE;EAAEC,IAAI,EAAE;AAAR,CAFF,CADF;;AAKA,MAAMC,IAAI,GAAG,gBAAOC,KAAP,EAA4B;EAAA,IAAdC,IAAc,uEAAP,EAAO;;EACvC,IAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;IACtB,MAAMR,SAAS,EAAf;EACD;;EAED,MAAM,CACJS,SADI,EAEJC,SAFI,IAIJ,MAAMC,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,GAAN,CAAUC,IAAI,IAAInB,MAAM,CAACoB,QAAP,CAAgBD,IAAhB,EAAsBP,IAAtB,CAAlB,CAAZ,CAJR;EAMA,MAAMS,QAAQ,GAAG;IACfC,CAAC,EAAER,SAAS,CAACS,OADE;IAEfC,CAAC,EAAET,SAAS,CAACQ;EAFE,CAAjB,CAXuC,CAgBvC;;EACA,MAAM,CAACD,CAAD,EAAIE,CAAJ,IAAS,MAAMR,OAAO,CAACC,GAAR,CAAY,CAC/Bd,UAAU,CAACW,SAAD,EAAYF,IAAZ,CADqB,EAE/BT,UAAU,CAACY,SAAD,EAAYH,IAAZ,CAFqB,CAAZ,CAArB,CAjBuC,CAsBvC;EACA;;EACA,MAAM;IACJa,KADI;IAEJC;EAFI,IAGF,MAAMtB,KAAK,CAAC,CACd;IACEuB,MAAM,EAAE,IADV;IAEEC,IAAI,EAAEN;EAFR,CADc,EAKd;IACEK,MAAM,EAAE,IADV;IAEEC,IAAI,EAAEJ;EAFR,CALc,CAAD,EASZZ,IATY,CAHf;EAcA,OAAOV,UAAU,CAAC;IAChBuB,KADgB;IAEhBb,IAFgB;IAGhBc,IAHgB;IAIhBL;EAJgB,CAAD,CAAjB;AAMD,CA5CD;;AA8CAQ,MAAM,CAACC,OAAP,GAAiBpB,IAAjB"},"metadata":{},"sourceType":"script"}