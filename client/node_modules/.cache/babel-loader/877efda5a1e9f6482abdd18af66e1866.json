{"ast":null,"code":"const Minipass = require('minipass');\n\nconst columnify = require('columnify'); // This module consumes package data in the following format:\n//\n// {\n//   name: String,\n//   description: String,\n//   maintainers: [{ username: String, email: String }],\n//   keywords: String | [String],\n//   version: String,\n//   date: Date // can be null,\n// }\n//\n// The returned stream will format this package data\n// into a byte stream of formatted, displayable output.\n\n\nmodule.exports = opts => {\n  return opts.json ? new JSONOutputStream() : new TextOutputStream(opts);\n};\n\nclass JSONOutputStream extends Minipass {\n  #didFirst = false;\n\n  write(obj) {\n    if (!this.#didFirst) {\n      super.write('[\\n');\n      this.#didFirst = true;\n    } else {\n      super.write('\\n,\\n');\n    }\n\n    return super.write(JSON.stringify(obj));\n  }\n\n  end() {\n    super.write(this.#didFirst ? ']\\n' : '\\n[]\\n');\n    super.end();\n  }\n\n}\n\nclass TextOutputStream extends Minipass {\n  constructor(opts) {\n    super();\n    this._opts = opts;\n    this._line = 0;\n  }\n\n  write(pkg) {\n    return super.write(prettify(pkg, ++this._line, this._opts));\n  }\n\n}\n\nfunction prettify(data, num, opts) {\n  var truncate = !opts.long;\n  var pkg = normalizePackage(data, opts);\n  var columns = ['name', 'description', 'author', 'date', 'version', 'keywords'];\n\n  if (opts.parseable) {\n    return columns.map(function (col) {\n      return pkg[col] && ('' + pkg[col]).replace(/\\t/g, ' ');\n    }).join('\\t');\n  } // stdout in tap is never a tty\n\n  /* istanbul ignore next */\n\n\n  const maxWidth = process.stdout.isTTY ? process.stdout.getWindowSize()[0] : Infinity;\n  let output = columnify([pkg], {\n    include: columns,\n    showHeaders: num <= 1,\n    columnSplitter: ' | ',\n    truncate: truncate,\n    config: {\n      name: {\n        minWidth: 25,\n        maxWidth: 25,\n        truncate: false,\n        truncateMarker: ''\n      },\n      description: {\n        minWidth: 20,\n        maxWidth: 20\n      },\n      author: {\n        minWidth: 15,\n        maxWidth: 15\n      },\n      date: {\n        maxWidth: 11\n      },\n      version: {\n        minWidth: 8,\n        maxWidth: 8\n      },\n      keywords: {\n        maxWidth: Infinity\n      }\n    }\n  }).split('\\n').map(line => line.slice(0, maxWidth)).join('\\n');\n\n  if (opts.color) {\n    output = highlightSearchTerms(output, opts.args);\n  }\n\n  return output;\n}\n\nvar colors = [31, 33, 32, 36, 34, 35];\nvar cl = colors.length;\n\nfunction addColorMarker(str, arg, i) {\n  var m = i % cl + 1;\n  var markStart = String.fromCharCode(m);\n  var markEnd = String.fromCharCode(0);\n\n  if (arg.charAt(0) === '/') {\n    return str.replace(new RegExp(arg.slice(1, -1), 'gi'), bit => markStart + bit + markEnd);\n  } // just a normal string, do the split/map thing\n\n\n  var pieces = str.toLowerCase().split(arg.toLowerCase());\n  var p = 0;\n  return pieces.map(function (piece) {\n    piece = str.slice(p, p + piece.length);\n    var mark = markStart + str.slice(p + piece.length, p + piece.length + arg.length) + markEnd;\n    p += piece.length + arg.length;\n    return piece + mark;\n  }).join('');\n}\n\nfunction colorize(line) {\n  for (var i = 0; i < cl; i++) {\n    var m = i + 1;\n    var color = '\\u001B[' + colors[i] + 'm';\n    line = line.split(String.fromCharCode(m)).join(color);\n  }\n\n  var uncolor = '\\u001B[0m';\n  return line.split('\\u0000').join(uncolor);\n}\n\nfunction highlightSearchTerms(str, terms) {\n  terms.forEach(function (arg, i) {\n    str = addColorMarker(str, arg, i);\n  });\n  return colorize(str).trim();\n}\n\nfunction normalizePackage(data, opts) {\n  return {\n    name: data.name,\n    description: data.description,\n    author: data.maintainers.map(m => `=${m.username}`).join(' '),\n    keywords: Array.isArray(data.keywords) ? data.keywords.join(' ') : typeof data.keywords === 'string' ? data.keywords.replace(/[,\\s]+/, ' ') : '',\n    version: data.version,\n    date: data.date && data.date.toISOString() // remove time\n    .split('T').join(' ').replace(/:[0-9]{2}\\.[0-9]{3}Z$/, '').slice(0, -5) || 'prehistoric'\n  };\n}","map":{"version":3,"names":["Minipass","require","columnify","module","exports","opts","json","JSONOutputStream","TextOutputStream","didFirst","write","obj","JSON","stringify","end","constructor","_opts","_line","pkg","prettify","data","num","truncate","long","normalizePackage","columns","parseable","map","col","replace","join","maxWidth","process","stdout","isTTY","getWindowSize","Infinity","output","include","showHeaders","columnSplitter","config","name","minWidth","truncateMarker","description","author","date","version","keywords","split","line","slice","color","highlightSearchTerms","args","colors","cl","length","addColorMarker","str","arg","i","m","markStart","String","fromCharCode","markEnd","charAt","RegExp","bit","pieces","toLowerCase","p","piece","mark","colorize","uncolor","terms","forEach","trim","maintainers","username","Array","isArray","toISOString"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/utils/format-search-stream.js"],"sourcesContent":["const Minipass = require('minipass')\nconst columnify = require('columnify')\n\n// This module consumes package data in the following format:\n//\n// {\n//   name: String,\n//   description: String,\n//   maintainers: [{ username: String, email: String }],\n//   keywords: String | [String],\n//   version: String,\n//   date: Date // can be null,\n// }\n//\n// The returned stream will format this package data\n// into a byte stream of formatted, displayable output.\n\nmodule.exports = (opts) => {\n  return opts.json ? new JSONOutputStream() : new TextOutputStream(opts)\n}\n\nclass JSONOutputStream extends Minipass {\n  #didFirst = false\n\n  write (obj) {\n    if (!this.#didFirst) {\n      super.write('[\\n')\n      this.#didFirst = true\n    } else {\n      super.write('\\n,\\n')\n    }\n\n    return super.write(JSON.stringify(obj))\n  }\n\n  end () {\n    super.write(this.#didFirst ? ']\\n' : '\\n[]\\n')\n    super.end()\n  }\n}\n\nclass TextOutputStream extends Minipass {\n  constructor (opts) {\n    super()\n    this._opts = opts\n    this._line = 0\n  }\n\n  write (pkg) {\n    return super.write(prettify(pkg, ++this._line, this._opts))\n  }\n}\n\nfunction prettify (data, num, opts) {\n  var truncate = !opts.long\n\n  var pkg = normalizePackage(data, opts)\n\n  var columns = ['name', 'description', 'author', 'date', 'version', 'keywords']\n\n  if (opts.parseable) {\n    return columns.map(function (col) {\n      return pkg[col] && ('' + pkg[col]).replace(/\\t/g, ' ')\n    }).join('\\t')\n  }\n\n  // stdout in tap is never a tty\n  /* istanbul ignore next */\n  const maxWidth = process.stdout.isTTY ? process.stdout.getWindowSize()[0] : Infinity\n  let output = columnify(\n    [pkg],\n    {\n      include: columns,\n      showHeaders: num <= 1,\n      columnSplitter: ' | ',\n      truncate: truncate,\n      config: {\n        name: { minWidth: 25, maxWidth: 25, truncate: false, truncateMarker: '' },\n        description: { minWidth: 20, maxWidth: 20 },\n        author: { minWidth: 15, maxWidth: 15 },\n        date: { maxWidth: 11 },\n        version: { minWidth: 8, maxWidth: 8 },\n        keywords: { maxWidth: Infinity },\n      },\n    }\n  ).split('\\n').map(line => line.slice(0, maxWidth)).join('\\n')\n\n  if (opts.color) {\n    output = highlightSearchTerms(output, opts.args)\n  }\n\n  return output\n}\n\nvar colors = [31, 33, 32, 36, 34, 35]\nvar cl = colors.length\n\nfunction addColorMarker (str, arg, i) {\n  var m = i % cl + 1\n  var markStart = String.fromCharCode(m)\n  var markEnd = String.fromCharCode(0)\n\n  if (arg.charAt(0) === '/') {\n    return str.replace(\n      new RegExp(arg.slice(1, -1), 'gi'),\n      bit => markStart + bit + markEnd\n    )\n  }\n\n  // just a normal string, do the split/map thing\n  var pieces = str.toLowerCase().split(arg.toLowerCase())\n  var p = 0\n\n  return pieces.map(function (piece) {\n    piece = str.slice(p, p + piece.length)\n    var mark = markStart +\n               str.slice(p + piece.length, p + piece.length + arg.length) +\n               markEnd\n    p += piece.length + arg.length\n    return piece + mark\n  }).join('')\n}\n\nfunction colorize (line) {\n  for (var i = 0; i < cl; i++) {\n    var m = i + 1\n    var color = '\\u001B[' + colors[i] + 'm'\n    line = line.split(String.fromCharCode(m)).join(color)\n  }\n  var uncolor = '\\u001B[0m'\n  return line.split('\\u0000').join(uncolor)\n}\n\nfunction highlightSearchTerms (str, terms) {\n  terms.forEach(function (arg, i) {\n    str = addColorMarker(str, arg, i)\n  })\n\n  return colorize(str).trim()\n}\n\nfunction normalizePackage (data, opts) {\n  return {\n    name: data.name,\n    description: data.description,\n    author: data.maintainers.map((m) => `=${m.username}`).join(' '),\n    keywords: Array.isArray(data.keywords)\n      ? data.keywords.join(' ')\n      : typeof data.keywords === 'string'\n        ? data.keywords.replace(/[,\\s]+/, ' ')\n        : '',\n    version: data.version,\n    date: (data.date &&\n          (data.date.toISOString() // remove time\n            .split('T').join(' ')\n            .replace(/:[0-9]{2}\\.[0-9]{3}Z$/, ''))\n            .slice(0, -5)) ||\n          'prehistoric',\n  }\n}\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;EACzB,OAAOA,IAAI,CAACC,IAAL,GAAY,IAAIC,gBAAJ,EAAZ,GAAqC,IAAIC,gBAAJ,CAAqBH,IAArB,CAA5C;AACD,CAFD;;AAIA,MAAME,gBAAN,SAA+BP,QAA/B,CAAwC;EACtC,CAACS,QAAD,GAAY,KAAZ;;EAEAC,KAAK,CAAEC,GAAF,EAAO;IACV,IAAI,CAAC,KAAK,CAACF,QAAX,EAAqB;MACnB,MAAMC,KAAN,CAAY,KAAZ;MACA,KAAK,CAACD,QAAN,GAAiB,IAAjB;IACD,CAHD,MAGO;MACL,MAAMC,KAAN,CAAY,OAAZ;IACD;;IAED,OAAO,MAAMA,KAAN,CAAYE,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAZ,CAAP;EACD;;EAEDG,GAAG,GAAI;IACL,MAAMJ,KAAN,CAAY,KAAK,CAACD,QAAN,GAAiB,KAAjB,GAAyB,QAArC;IACA,MAAMK,GAAN;EACD;;AAjBqC;;AAoBxC,MAAMN,gBAAN,SAA+BR,QAA/B,CAAwC;EACtCe,WAAW,CAAEV,IAAF,EAAQ;IACjB;IACA,KAAKW,KAAL,GAAaX,IAAb;IACA,KAAKY,KAAL,GAAa,CAAb;EACD;;EAEDP,KAAK,CAAEQ,GAAF,EAAO;IACV,OAAO,MAAMR,KAAN,CAAYS,QAAQ,CAACD,GAAD,EAAM,EAAE,KAAKD,KAAb,EAAoB,KAAKD,KAAzB,CAApB,CAAP;EACD;;AATqC;;AAYxC,SAASG,QAAT,CAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BhB,IAA9B,EAAoC;EAClC,IAAIiB,QAAQ,GAAG,CAACjB,IAAI,CAACkB,IAArB;EAEA,IAAIL,GAAG,GAAGM,gBAAgB,CAACJ,IAAD,EAAOf,IAAP,CAA1B;EAEA,IAAIoB,OAAO,GAAG,CAAC,MAAD,EAAS,aAAT,EAAwB,QAAxB,EAAkC,MAAlC,EAA0C,SAA1C,EAAqD,UAArD,CAAd;;EAEA,IAAIpB,IAAI,CAACqB,SAAT,EAAoB;IAClB,OAAOD,OAAO,CAACE,GAAR,CAAY,UAAUC,GAAV,EAAe;MAChC,OAAOV,GAAG,CAACU,GAAD,CAAH,IAAY,CAAC,KAAKV,GAAG,CAACU,GAAD,CAAT,EAAgBC,OAAhB,CAAwB,KAAxB,EAA+B,GAA/B,CAAnB;IACD,CAFM,EAEJC,IAFI,CAEC,IAFD,CAAP;EAGD,CAXiC,CAalC;;EACA;;;EACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,MAAR,CAAeC,KAAf,GAAuBF,OAAO,CAACC,MAAR,CAAeE,aAAf,GAA+B,CAA/B,CAAvB,GAA2DC,QAA5E;EACA,IAAIC,MAAM,GAAGnC,SAAS,CACpB,CAACgB,GAAD,CADoB,EAEpB;IACEoB,OAAO,EAAEb,OADX;IAEEc,WAAW,EAAElB,GAAG,IAAI,CAFtB;IAGEmB,cAAc,EAAE,KAHlB;IAIElB,QAAQ,EAAEA,QAJZ;IAKEmB,MAAM,EAAE;MACNC,IAAI,EAAE;QAAEC,QAAQ,EAAE,EAAZ;QAAgBZ,QAAQ,EAAE,EAA1B;QAA8BT,QAAQ,EAAE,KAAxC;QAA+CsB,cAAc,EAAE;MAA/D,CADA;MAENC,WAAW,EAAE;QAAEF,QAAQ,EAAE,EAAZ;QAAgBZ,QAAQ,EAAE;MAA1B,CAFP;MAGNe,MAAM,EAAE;QAAEH,QAAQ,EAAE,EAAZ;QAAgBZ,QAAQ,EAAE;MAA1B,CAHF;MAINgB,IAAI,EAAE;QAAEhB,QAAQ,EAAE;MAAZ,CAJA;MAKNiB,OAAO,EAAE;QAAEL,QAAQ,EAAE,CAAZ;QAAeZ,QAAQ,EAAE;MAAzB,CALH;MAMNkB,QAAQ,EAAE;QAAElB,QAAQ,EAAEK;MAAZ;IANJ;EALV,CAFoB,CAAT,CAgBXc,KAhBW,CAgBL,IAhBK,EAgBCvB,GAhBD,CAgBKwB,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcrB,QAAd,CAhBb,EAgBsCD,IAhBtC,CAgB2C,IAhB3C,CAAb;;EAkBA,IAAIzB,IAAI,CAACgD,KAAT,EAAgB;IACdhB,MAAM,GAAGiB,oBAAoB,CAACjB,MAAD,EAAShC,IAAI,CAACkD,IAAd,CAA7B;EACD;;EAED,OAAOlB,MAAP;AACD;;AAED,IAAImB,MAAM,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAAb;AACA,IAAIC,EAAE,GAAGD,MAAM,CAACE,MAAhB;;AAEA,SAASC,cAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,CAAnC,EAAsC;EACpC,IAAIC,CAAC,GAAGD,CAAC,GAAGL,EAAJ,GAAS,CAAjB;EACA,IAAIO,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBH,CAApB,CAAhB;EACA,IAAII,OAAO,GAAGF,MAAM,CAACC,YAAP,CAAoB,CAApB,CAAd;;EAEA,IAAIL,GAAG,CAACO,MAAJ,CAAW,CAAX,MAAkB,GAAtB,EAA2B;IACzB,OAAOR,GAAG,CAAC/B,OAAJ,CACL,IAAIwC,MAAJ,CAAWR,GAAG,CAACT,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAX,EAA6B,IAA7B,CADK,EAELkB,GAAG,IAAIN,SAAS,GAAGM,GAAZ,GAAkBH,OAFpB,CAAP;EAID,CAVmC,CAYpC;;;EACA,IAAII,MAAM,GAAGX,GAAG,CAACY,WAAJ,GAAkBtB,KAAlB,CAAwBW,GAAG,CAACW,WAAJ,EAAxB,CAAb;EACA,IAAIC,CAAC,GAAG,CAAR;EAEA,OAAOF,MAAM,CAAC5C,GAAP,CAAW,UAAU+C,KAAV,EAAiB;IACjCA,KAAK,GAAGd,GAAG,CAACR,KAAJ,CAAUqB,CAAV,EAAaA,CAAC,GAAGC,KAAK,CAAChB,MAAvB,CAAR;IACA,IAAIiB,IAAI,GAAGX,SAAS,GACTJ,GAAG,CAACR,KAAJ,CAAUqB,CAAC,GAAGC,KAAK,CAAChB,MAApB,EAA4Be,CAAC,GAAGC,KAAK,CAAChB,MAAV,GAAmBG,GAAG,CAACH,MAAnD,CADA,GAEAS,OAFX;IAGAM,CAAC,IAAIC,KAAK,CAAChB,MAAN,GAAeG,GAAG,CAACH,MAAxB;IACA,OAAOgB,KAAK,GAAGC,IAAf;EACD,CAPM,EAOJ7C,IAPI,CAOC,EAPD,CAAP;AAQD;;AAED,SAAS8C,QAAT,CAAmBzB,IAAnB,EAAyB;EACvB,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,EAApB,EAAwBK,CAAC,EAAzB,EAA6B;IAC3B,IAAIC,CAAC,GAAGD,CAAC,GAAG,CAAZ;IACA,IAAIT,KAAK,GAAG,YAAYG,MAAM,CAACM,CAAD,CAAlB,GAAwB,GAApC;IACAX,IAAI,GAAGA,IAAI,CAACD,KAAL,CAAWe,MAAM,CAACC,YAAP,CAAoBH,CAApB,CAAX,EAAmCjC,IAAnC,CAAwCuB,KAAxC,CAAP;EACD;;EACD,IAAIwB,OAAO,GAAG,WAAd;EACA,OAAO1B,IAAI,CAACD,KAAL,CAAW,QAAX,EAAqBpB,IAArB,CAA0B+C,OAA1B,CAAP;AACD;;AAED,SAASvB,oBAAT,CAA+BM,GAA/B,EAAoCkB,KAApC,EAA2C;EACzCA,KAAK,CAACC,OAAN,CAAc,UAAUlB,GAAV,EAAeC,CAAf,EAAkB;IAC9BF,GAAG,GAAGD,cAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,CAAX,CAApB;EACD,CAFD;EAIA,OAAOc,QAAQ,CAAChB,GAAD,CAAR,CAAcoB,IAAd,EAAP;AACD;;AAED,SAASxD,gBAAT,CAA2BJ,IAA3B,EAAiCf,IAAjC,EAAuC;EACrC,OAAO;IACLqC,IAAI,EAAEtB,IAAI,CAACsB,IADN;IAELG,WAAW,EAAEzB,IAAI,CAACyB,WAFb;IAGLC,MAAM,EAAE1B,IAAI,CAAC6D,WAAL,CAAiBtD,GAAjB,CAAsBoC,CAAD,IAAQ,IAAGA,CAAC,CAACmB,QAAS,EAA3C,EAA8CpD,IAA9C,CAAmD,GAAnD,CAHH;IAILmB,QAAQ,EAAEkC,KAAK,CAACC,OAAN,CAAchE,IAAI,CAAC6B,QAAnB,IACN7B,IAAI,CAAC6B,QAAL,CAAcnB,IAAd,CAAmB,GAAnB,CADM,GAEN,OAAOV,IAAI,CAAC6B,QAAZ,KAAyB,QAAzB,GACE7B,IAAI,CAAC6B,QAAL,CAAcpB,OAAd,CAAsB,QAAtB,EAAgC,GAAhC,CADF,GAEE,EARD;IASLmB,OAAO,EAAE5B,IAAI,CAAC4B,OATT;IAULD,IAAI,EAAG3B,IAAI,CAAC2B,IAAL,IACA3B,IAAI,CAAC2B,IAAL,CAAUsC,WAAV,GAAwB;IAAxB,CACEnC,KADF,CACQ,GADR,EACapB,IADb,CACkB,GADlB,EAEED,OAFF,CAEU,uBAFV,EAEmC,EAFnC,CAAD,CAGGuB,KAHH,CAGS,CAHT,EAGY,CAAC,CAHb,CADA,IAKA;EAfD,CAAP;AAiBD"},"metadata":{},"sourceType":"script"}