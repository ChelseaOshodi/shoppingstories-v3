{"ast":null,"code":"'use strict';\n\nconst URL = require('url').URL;\n\nconst Arborist = require('@npmcli/arborist'); // supports object funding and string shorthand, or an array of these\n// if original was an array, returns an array; else returns the lone item\n\n\nfunction normalizeFunding(funding) {\n  const normalizeItem = item => typeof item === 'string' ? {\n    url: item\n  } : item;\n\n  const sources = [].concat(funding || []).map(normalizeItem);\n  return Array.isArray(funding) ? sources : sources[0];\n} // Is the value of a `funding` property of a `package.json`\n// a valid type+url for `npm fund` to display?\n\n\nfunction isValidFunding(funding) {\n  if (!funding) {\n    return false;\n  }\n\n  if (Array.isArray(funding)) {\n    return funding.every(f => !Array.isArray(f) && isValidFunding(f));\n  }\n\n  try {\n    var parsed = new URL(funding.url || funding);\n  } catch (error) {\n    return false;\n  }\n\n  if (parsed.protocol !== 'https:' && parsed.protocol !== 'http:') {\n    return false;\n  }\n\n  return Boolean(parsed.host);\n}\n\nconst empty = () => Object.create(null);\n\nfunction readTree(tree, opts) {\n  let packageWithFundingCount = 0;\n  const seen = new Set();\n  const {\n    countOnly\n  } = opts || {};\n\n  const _trailingDependencies = Symbol('trailingDependencies');\n\n  let filterSet;\n\n  if (opts && opts.workspaces && opts.workspaces.length) {\n    const arb = new Arborist(opts);\n    filterSet = arb.workspaceDependencySet(tree, opts.workspaces);\n  }\n\n  function tracked(name, version) {\n    const key = String(name) + String(version);\n\n    if (seen.has(key)) {\n      return true;\n    }\n\n    seen.add(key);\n  }\n\n  function retrieveDependencies(dependencies) {\n    const trailing = dependencies[_trailingDependencies];\n\n    if (trailing) {\n      return Object.assign(empty(), dependencies, trailing);\n    }\n\n    return dependencies;\n  }\n\n  function hasDependencies(dependencies) {\n    return dependencies && (Object.keys(dependencies).length || dependencies[_trailingDependencies]);\n  }\n\n  function attachFundingInfo(target, funding) {\n    if (funding && isValidFunding(funding)) {\n      target.funding = normalizeFunding(funding);\n      packageWithFundingCount++;\n    }\n  }\n\n  function getFundingDependencies(t) {\n    const edges = t && t.edgesOut && t.edgesOut.values();\n\n    if (!edges) {\n      return empty();\n    }\n\n    const directDepsWithFunding = Array.from(edges).map(edge => {\n      if (!edge || !edge.to) {\n        return empty();\n      }\n\n      const node = edge.to.target || edge.to;\n\n      if (!node.package) {\n        return empty();\n      }\n\n      if (filterSet && filterSet.size > 0 && !filterSet.has(node)) {\n        return empty();\n      }\n\n      const {\n        name,\n        funding,\n        version\n      } = node.package; // avoids duplicated items within the funding tree\n\n      if (tracked(name, version)) {\n        return empty();\n      }\n\n      const fundingItem = {};\n\n      if (version) {\n        fundingItem.version = version;\n      }\n\n      attachFundingInfo(fundingItem, funding);\n      return {\n        node,\n        fundingItem\n      };\n    });\n    return directDepsWithFunding.reduce((res, _ref, i) => {\n      let {\n        node,\n        fundingItem\n      } = _ref;\n\n      if (!fundingItem || fundingItem.length === 0 || !node) {\n        return res;\n      } // recurse\n\n\n      const transitiveDependencies = node.edgesOut && node.edgesOut.size > 0 && getFundingDependencies(node); // if we're only counting items there's no need\n      // to add all the data to the resulting object\n\n      if (countOnly) {\n        return null;\n      }\n\n      if (hasDependencies(transitiveDependencies)) {\n        fundingItem.dependencies = retrieveDependencies(transitiveDependencies);\n      }\n\n      if (isValidFunding(fundingItem.funding)) {\n        res[node.package.name] = fundingItem;\n      } else if (hasDependencies(fundingItem.dependencies)) {\n        res[_trailingDependencies] = Object.assign(empty(), res[_trailingDependencies], fundingItem.dependencies);\n      }\n\n      return res;\n    }, countOnly ? null : empty());\n  }\n\n  const treeDependencies = getFundingDependencies(tree);\n  const result = {\n    length: packageWithFundingCount\n  };\n\n  if (!countOnly) {\n    const name = tree && tree.package && tree.package.name || tree && tree.name;\n    result.name = name || tree && tree.path;\n\n    if (tree && tree.package && tree.package.version) {\n      result.version = tree.package.version;\n    }\n\n    if (tree && tree.package && tree.package.funding) {\n      result.funding = normalizeFunding(tree.package.funding);\n    }\n\n    result.dependencies = retrieveDependencies(treeDependencies);\n  }\n\n  return result;\n}\n\nasync function read(opts) {\n  const arb = new Arborist(opts);\n  const tree = await arb.loadActual(opts);\n  return readTree(tree, opts);\n}\n\nmodule.exports = {\n  read,\n  readTree,\n  normalizeFunding,\n  isValidFunding\n};","map":{"version":3,"names":["URL","require","Arborist","normalizeFunding","funding","normalizeItem","item","url","sources","concat","map","Array","isArray","isValidFunding","every","f","parsed","error","protocol","Boolean","host","empty","Object","create","readTree","tree","opts","packageWithFundingCount","seen","Set","countOnly","_trailingDependencies","Symbol","filterSet","workspaces","length","arb","workspaceDependencySet","tracked","name","version","key","String","has","add","retrieveDependencies","dependencies","trailing","assign","hasDependencies","keys","attachFundingInfo","target","getFundingDependencies","t","edges","edgesOut","values","directDepsWithFunding","from","edge","to","node","package","size","fundingItem","reduce","res","i","transitiveDependencies","treeDependencies","result","path","read","loadActual","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/libnpmfund/lib/index.js"],"sourcesContent":["'use strict'\n\nconst URL = require('url').URL\nconst Arborist = require('@npmcli/arborist')\n\n// supports object funding and string shorthand, or an array of these\n// if original was an array, returns an array; else returns the lone item\nfunction normalizeFunding (funding) {\n  const normalizeItem = item =>\n    typeof item === 'string' ? { url: item } : item\n  const sources = [].concat(funding || []).map(normalizeItem)\n  return Array.isArray(funding) ? sources : sources[0]\n}\n\n// Is the value of a `funding` property of a `package.json`\n// a valid type+url for `npm fund` to display?\nfunction isValidFunding (funding) {\n  if (!funding) {\n    return false\n  }\n\n  if (Array.isArray(funding)) {\n    return funding.every(f => !Array.isArray(f) && isValidFunding(f))\n  }\n\n  try {\n    var parsed = new URL(funding.url || funding)\n  } catch (error) {\n    return false\n  }\n\n  if (\n    parsed.protocol !== 'https:' &&\n    parsed.protocol !== 'http:'\n  ) {\n    return false\n  }\n\n  return Boolean(parsed.host)\n}\n\nconst empty = () => Object.create(null)\n\nfunction readTree (tree, opts) {\n  let packageWithFundingCount = 0\n  const seen = new Set()\n  const { countOnly } = opts || {}\n  const _trailingDependencies = Symbol('trailingDependencies')\n\n  let filterSet\n\n  if (opts && opts.workspaces && opts.workspaces.length) {\n    const arb = new Arborist(opts)\n    filterSet = arb.workspaceDependencySet(tree, opts.workspaces)\n  }\n\n  function tracked (name, version) {\n    const key = String(name) + String(version)\n    if (seen.has(key)) {\n      return true\n    }\n\n    seen.add(key)\n  }\n\n  function retrieveDependencies (dependencies) {\n    const trailing = dependencies[_trailingDependencies]\n\n    if (trailing) {\n      return Object.assign(\n        empty(),\n        dependencies,\n        trailing\n      )\n    }\n\n    return dependencies\n  }\n\n  function hasDependencies (dependencies) {\n    return dependencies && (\n      Object.keys(dependencies).length ||\n      dependencies[_trailingDependencies]\n    )\n  }\n\n  function attachFundingInfo (target, funding) {\n    if (funding && isValidFunding(funding)) {\n      target.funding = normalizeFunding(funding)\n      packageWithFundingCount++\n    }\n  }\n\n  function getFundingDependencies (t) {\n    const edges = t && t.edgesOut && t.edgesOut.values()\n    if (!edges) {\n      return empty()\n    }\n\n    const directDepsWithFunding = Array.from(edges).map(edge => {\n      if (!edge || !edge.to) {\n        return empty()\n      }\n\n      const node = edge.to.target || edge.to\n      if (!node.package) {\n        return empty()\n      }\n\n      if (filterSet && filterSet.size > 0 && !filterSet.has(node)) {\n        return empty()\n      }\n\n      const { name, funding, version } = node.package\n\n      // avoids duplicated items within the funding tree\n      if (tracked(name, version)) {\n        return empty()\n      }\n\n      const fundingItem = {}\n\n      if (version) {\n        fundingItem.version = version\n      }\n\n      attachFundingInfo(fundingItem, funding)\n\n      return {\n        node,\n        fundingItem,\n      }\n    })\n\n    return directDepsWithFunding.reduce(\n      (res, { node, fundingItem }, i) => {\n        if (!fundingItem ||\n          fundingItem.length === 0 ||\n          !node) {\n          return res\n        }\n\n        // recurse\n        const transitiveDependencies = node.edgesOut &&\n          node.edgesOut.size > 0 &&\n          getFundingDependencies(node)\n\n        // if we're only counting items there's no need\n        // to add all the data to the resulting object\n        if (countOnly) {\n          return null\n        }\n\n        if (hasDependencies(transitiveDependencies)) {\n          fundingItem.dependencies =\n            retrieveDependencies(transitiveDependencies)\n        }\n\n        if (isValidFunding(fundingItem.funding)) {\n          res[node.package.name] = fundingItem\n        } else if (hasDependencies(fundingItem.dependencies)) {\n          res[_trailingDependencies] =\n            Object.assign(\n              empty(),\n              res[_trailingDependencies],\n              fundingItem.dependencies\n            )\n        }\n\n        return res\n      }, countOnly ? null : empty())\n  }\n\n  const treeDependencies = getFundingDependencies(tree)\n  const result = {\n    length: packageWithFundingCount,\n  }\n\n  if (!countOnly) {\n    const name =\n      (tree && tree.package && tree.package.name) ||\n      (tree && tree.name)\n    result.name = name || (tree && tree.path)\n\n    if (tree && tree.package && tree.package.version) {\n      result.version = tree.package.version\n    }\n\n    if (tree && tree.package && tree.package.funding) {\n      result.funding = normalizeFunding(tree.package.funding)\n    }\n\n    result.dependencies = retrieveDependencies(treeDependencies)\n  }\n\n  return result\n}\n\nasync function read (opts) {\n  const arb = new Arborist(opts)\n  const tree = await arb.loadActual(opts)\n  return readTree(tree, opts)\n}\n\nmodule.exports = {\n  read,\n  readTree,\n  normalizeFunding,\n  isValidFunding,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}