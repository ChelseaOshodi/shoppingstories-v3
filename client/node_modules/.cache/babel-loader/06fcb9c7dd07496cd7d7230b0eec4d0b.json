{"ast":null,"code":"exports.replaceDollarWithPercentPair = replaceDollarWithPercentPair;\nexports.convertToSetCommand = convertToSetCommand;\nexports.convertToSetCommands = convertToSetCommands;\n\nfunction convertToSetCommand(key, value) {\n  var line = '';\n  key = key || '';\n  key = key.trim();\n  value = value || '';\n  value = value.trim();\n\n  if (key && value && value.length > 0) {\n    line = '@SET ' + key + '=' + replaceDollarWithPercentPair(value) + '\\r\\n';\n  }\n\n  return line;\n}\n\nfunction extractVariableValuePairs(declarations) {\n  var pairs = {};\n  declarations.map(function (declaration) {\n    var split = declaration.split('=');\n    pairs[split[0]] = split[1];\n  });\n  return pairs;\n}\n\nfunction convertToSetCommands(variableString) {\n  var variableValuePairs = extractVariableValuePairs(variableString.split(' '));\n  var variableDeclarationsAsBatch = '';\n  Object.keys(variableValuePairs).forEach(function (key) {\n    variableDeclarationsAsBatch += convertToSetCommand(key, variableValuePairs[key]);\n  });\n  return variableDeclarationsAsBatch;\n}\n\nfunction replaceDollarWithPercentPair(value) {\n  var dollarExpressions = /\\$\\{?([^$@#?\\- \\t{}:]+)\\}?/g;\n  var result = '';\n  var startIndex = 0;\n\n  do {\n    var match = dollarExpressions.exec(value);\n\n    if (match) {\n      var betweenMatches = value.substring(startIndex, match.index) || '';\n      result += betweenMatches + '%' + match[1] + '%';\n      startIndex = dollarExpressions.lastIndex;\n    }\n  } while (dollarExpressions.lastIndex > 0);\n\n  result += value.slice(startIndex);\n  return result;\n}","map":{"version":3,"names":["exports","replaceDollarWithPercentPair","convertToSetCommand","convertToSetCommands","key","value","line","trim","length","extractVariableValuePairs","declarations","pairs","map","declaration","split","variableString","variableValuePairs","variableDeclarationsAsBatch","Object","keys","forEach","dollarExpressions","result","startIndex","match","exec","betweenMatches","substring","index","lastIndex","slice"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/node_modules/cmd-shim/lib/to-batch-syntax.js"],"sourcesContent":["exports.replaceDollarWithPercentPair = replaceDollarWithPercentPair\r\nexports.convertToSetCommand = convertToSetCommand\r\nexports.convertToSetCommands = convertToSetCommands\r\n\r\nfunction convertToSetCommand (key, value) {\r\n  var line = ''\r\n  key = key || ''\r\n  key = key.trim()\r\n  value = value || ''\r\n  value = value.trim()\r\n  if (key && value && value.length > 0) {\r\n    line = '@SET ' + key + '=' + replaceDollarWithPercentPair(value) + '\\r\\n'\r\n  }\r\n  return line\r\n}\r\n\r\nfunction extractVariableValuePairs (declarations) {\r\n  var pairs = {}\r\n  declarations.map(function (declaration) {\r\n    var split = declaration.split('=')\r\n    pairs[split[0]] = split[1]\r\n  })\r\n  return pairs\r\n}\r\n\r\nfunction convertToSetCommands (variableString) {\r\n  var variableValuePairs = extractVariableValuePairs(variableString.split(' '))\r\n  var variableDeclarationsAsBatch = ''\r\n  Object.keys(variableValuePairs).forEach(function (key) {\r\n    variableDeclarationsAsBatch += convertToSetCommand(key, variableValuePairs[key])\r\n  })\r\n  return variableDeclarationsAsBatch\r\n}\r\n\r\nfunction replaceDollarWithPercentPair (value) {\r\n  var dollarExpressions = /\\$\\{?([^$@#?\\- \\t{}:]+)\\}?/g\r\n  var result = ''\r\n  var startIndex = 0\r\n  do {\r\n    var match = dollarExpressions.exec(value)\r\n    if (match) {\r\n      var betweenMatches = value.substring(startIndex, match.index) || ''\r\n      result += betweenMatches + '%' + match[1] + '%'\r\n      startIndex = dollarExpressions.lastIndex\r\n    }\r\n  } while (dollarExpressions.lastIndex > 0)\r\n  result += value.slice(startIndex)\r\n  return result\r\n}\r\n"],"mappings":"AAAAA,OAAO,CAACC,4BAAR,GAAuCA,4BAAvC;AACAD,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B;AACAF,OAAO,CAACG,oBAAR,GAA+BA,oBAA/B;;AAEA,SAASD,mBAAT,CAA8BE,GAA9B,EAAmCC,KAAnC,EAA0C;EACxC,IAAIC,IAAI,GAAG,EAAX;EACAF,GAAG,GAAGA,GAAG,IAAI,EAAb;EACAA,GAAG,GAAGA,GAAG,CAACG,IAAJ,EAAN;EACAF,KAAK,GAAGA,KAAK,IAAI,EAAjB;EACAA,KAAK,GAAGA,KAAK,CAACE,IAAN,EAAR;;EACA,IAAIH,GAAG,IAAIC,KAAP,IAAgBA,KAAK,CAACG,MAAN,GAAe,CAAnC,EAAsC;IACpCF,IAAI,GAAG,UAAUF,GAAV,GAAgB,GAAhB,GAAsBH,4BAA4B,CAACI,KAAD,CAAlD,GAA4D,MAAnE;EACD;;EACD,OAAOC,IAAP;AACD;;AAED,SAASG,yBAAT,CAAoCC,YAApC,EAAkD;EAChD,IAAIC,KAAK,GAAG,EAAZ;EACAD,YAAY,CAACE,GAAb,CAAiB,UAAUC,WAAV,EAAuB;IACtC,IAAIC,KAAK,GAAGD,WAAW,CAACC,KAAZ,CAAkB,GAAlB,CAAZ;IACAH,KAAK,CAACG,KAAK,CAAC,CAAD,CAAN,CAAL,GAAkBA,KAAK,CAAC,CAAD,CAAvB;EACD,CAHD;EAIA,OAAOH,KAAP;AACD;;AAED,SAASR,oBAAT,CAA+BY,cAA/B,EAA+C;EAC7C,IAAIC,kBAAkB,GAAGP,yBAAyB,CAACM,cAAc,CAACD,KAAf,CAAqB,GAArB,CAAD,CAAlD;EACA,IAAIG,2BAA2B,GAAG,EAAlC;EACAC,MAAM,CAACC,IAAP,CAAYH,kBAAZ,EAAgCI,OAAhC,CAAwC,UAAUhB,GAAV,EAAe;IACrDa,2BAA2B,IAAIf,mBAAmB,CAACE,GAAD,EAAMY,kBAAkB,CAACZ,GAAD,CAAxB,CAAlD;EACD,CAFD;EAGA,OAAOa,2BAAP;AACD;;AAED,SAAShB,4BAAT,CAAuCI,KAAvC,EAA8C;EAC5C,IAAIgB,iBAAiB,GAAG,6BAAxB;EACA,IAAIC,MAAM,GAAG,EAAb;EACA,IAAIC,UAAU,GAAG,CAAjB;;EACA,GAAG;IACD,IAAIC,KAAK,GAAGH,iBAAiB,CAACI,IAAlB,CAAuBpB,KAAvB,CAAZ;;IACA,IAAImB,KAAJ,EAAW;MACT,IAAIE,cAAc,GAAGrB,KAAK,CAACsB,SAAN,CAAgBJ,UAAhB,EAA4BC,KAAK,CAACI,KAAlC,KAA4C,EAAjE;MACAN,MAAM,IAAII,cAAc,GAAG,GAAjB,GAAuBF,KAAK,CAAC,CAAD,CAA5B,GAAkC,GAA5C;MACAD,UAAU,GAAGF,iBAAiB,CAACQ,SAA/B;IACD;EACF,CAPD,QAOSR,iBAAiB,CAACQ,SAAlB,GAA8B,CAPvC;;EAQAP,MAAM,IAAIjB,KAAK,CAACyB,KAAN,CAAYP,UAAZ,CAAV;EACA,OAAOD,MAAP;AACD"},"metadata":{},"sourceType":"script"}