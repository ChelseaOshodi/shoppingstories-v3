{"ast":null,"code":"const {\n  resolve\n} = require('path');\n\nconst Arborist = require('@npmcli/arborist');\n\nconst localeCompare = require('@isaacs/string-locale-compare')('en');\n\nconst installedDeep = async npm => {\n  const {\n    depth,\n    global,\n    prefix,\n    workspacesEnabled\n  } = npm.flatOptions;\n\n  const getValues = tree => [...tree.inventory.values()].filter(i => i.location !== '' && !i.isRoot).map(i => {\n    return i;\n  }).filter(i => i.depth - 1 <= depth).sort((a, b) => a.depth - b.depth || localeCompare(a.name, b.name));\n\n  const res = new Set();\n  const gArb = new Arborist({\n    global: true,\n    path: resolve(npm.globalDir, '..'),\n    workspacesEnabled\n  });\n  const gTree = await gArb.loadActual({\n    global: true\n  });\n\n  for (const node of getValues(gTree)) {\n    res.add(global ? node.name : [node.name, '-g']);\n  }\n\n  if (!global) {\n    const arb = new Arborist({\n      global: false,\n      path: prefix,\n      workspacesEnabled\n    });\n    const tree = await arb.loadActual();\n\n    for (const node of getValues(tree)) {\n      res.add(node.name);\n    }\n  }\n\n  return [...res];\n};\n\nmodule.exports = installedDeep;","map":{"version":3,"names":["resolve","require","Arborist","localeCompare","installedDeep","npm","depth","global","prefix","workspacesEnabled","flatOptions","getValues","tree","inventory","values","filter","i","location","isRoot","map","sort","a","b","name","res","Set","gArb","path","globalDir","gTree","loadActual","node","add","arb","module","exports"],"sources":["/Users/chelsea/Documents/0_AllCoding/shoppingstories-v3/node_modules/npm/lib/utils/completion/installed-deep.js"],"sourcesContent":["const { resolve } = require('path')\nconst Arborist = require('@npmcli/arborist')\nconst localeCompare = require('@isaacs/string-locale-compare')('en')\n\nconst installedDeep = async (npm) => {\n  const {\n    depth,\n    global,\n    prefix,\n    workspacesEnabled,\n  } = npm.flatOptions\n\n  const getValues = (tree) =>\n    [...tree.inventory.values()]\n      .filter(i => i.location !== '' && !i.isRoot)\n      .map(i => {\n        return i\n      })\n      .filter(i => (i.depth - 1) <= depth)\n      .sort((a, b) => (a.depth - b.depth) || localeCompare(a.name, b.name))\n\n  const res = new Set()\n  const gArb = new Arborist({\n    global: true,\n    path: resolve(npm.globalDir, '..'),\n    workspacesEnabled,\n  })\n  const gTree = await gArb.loadActual({ global: true })\n\n  for (const node of getValues(gTree)) {\n    res.add(global ? node.name : [node.name, '-g'])\n  }\n\n  if (!global) {\n    const arb = new Arborist({ global: false, path: prefix, workspacesEnabled })\n    const tree = await arb.loadActual()\n    for (const node of getValues(tree)) {\n      res.add(node.name)\n    }\n  }\n\n  return [...res]\n}\n\nmodule.exports = installedDeep\n"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAcC,OAAO,CAAC,MAAD,CAA3B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,kBAAD,CAAxB;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,+BAAD,CAAP,CAAyC,IAAzC,CAAtB;;AAEA,MAAMG,aAAa,GAAG,MAAOC,GAAP,IAAe;EACnC,MAAM;IACJC,KADI;IAEJC,MAFI;IAGJC,MAHI;IAIJC;EAJI,IAKFJ,GAAG,CAACK,WALR;;EAOA,MAAMC,SAAS,GAAIC,IAAD,IAChB,CAAC,GAAGA,IAAI,CAACC,SAAL,CAAeC,MAAf,EAAJ,EACGC,MADH,CACUC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAe,EAAf,IAAqB,CAACD,CAAC,CAACE,MADvC,EAEGC,GAFH,CAEOH,CAAC,IAAI;IACR,OAAOA,CAAP;EACD,CAJH,EAKGD,MALH,CAKUC,CAAC,IAAKA,CAAC,CAACV,KAAF,GAAU,CAAX,IAAiBA,KALhC,EAMGc,IANH,CAMQ,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACf,KAAF,GAAUgB,CAAC,CAAChB,KAAb,IAAuBH,aAAa,CAACkB,CAAC,CAACE,IAAH,EAASD,CAAC,CAACC,IAAX,CANtD,CADF;;EASA,MAAMC,GAAG,GAAG,IAAIC,GAAJ,EAAZ;EACA,MAAMC,IAAI,GAAG,IAAIxB,QAAJ,CAAa;IACxBK,MAAM,EAAE,IADgB;IAExBoB,IAAI,EAAE3B,OAAO,CAACK,GAAG,CAACuB,SAAL,EAAgB,IAAhB,CAFW;IAGxBnB;EAHwB,CAAb,CAAb;EAKA,MAAMoB,KAAK,GAAG,MAAMH,IAAI,CAACI,UAAL,CAAgB;IAAEvB,MAAM,EAAE;EAAV,CAAhB,CAApB;;EAEA,KAAK,MAAMwB,IAAX,IAAmBpB,SAAS,CAACkB,KAAD,CAA5B,EAAqC;IACnCL,GAAG,CAACQ,GAAJ,CAAQzB,MAAM,GAAGwB,IAAI,CAACR,IAAR,GAAe,CAACQ,IAAI,CAACR,IAAN,EAAY,IAAZ,CAA7B;EACD;;EAED,IAAI,CAAChB,MAAL,EAAa;IACX,MAAM0B,GAAG,GAAG,IAAI/B,QAAJ,CAAa;MAAEK,MAAM,EAAE,KAAV;MAAiBoB,IAAI,EAAEnB,MAAvB;MAA+BC;IAA/B,CAAb,CAAZ;IACA,MAAMG,IAAI,GAAG,MAAMqB,GAAG,CAACH,UAAJ,EAAnB;;IACA,KAAK,MAAMC,IAAX,IAAmBpB,SAAS,CAACC,IAAD,CAA5B,EAAoC;MAClCY,GAAG,CAACQ,GAAJ,CAAQD,IAAI,CAACR,IAAb;IACD;EACF;;EAED,OAAO,CAAC,GAAGC,GAAJ,CAAP;AACD,CAtCD;;AAwCAU,MAAM,CAACC,OAAP,GAAiB/B,aAAjB"},"metadata":{},"sourceType":"script"}